<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2006 sp2 U (http://www.altova.com) by Richard L Halter (private) -->
<!-- Association of Retail Technology Standards
(c) 2011 National Retail Federation.  All rights reserved -->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified"
    targetNamespace="http://www.nrf-arts.org/IXRetail/v6.0.0/poslog"
    xmlns="http://www.nrf-arts.org/IXRetail/v6.0.0/poslog" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <xs:simpleType name="DecimalCommonData">
        <xs:restriction base="xs:decimal">
            <xs:maxInclusive value="99999999.999999"/>
            <xs:minInclusive value="0.000000"/>
        </xs:restriction>
    </xs:simpleType>
    <!--============-->
    <!-- Extension mechanism -->
    <!--============-->
    <xs:simpleType name="IXREnumerationExtension">
        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9A-Za-z][0-9A-Za-z]*:[0-9A-Za-z]*"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="TypeCodeExtension">
        <xs:restriction base="IXREnumerationExtension"/>
    </xs:simpleType>
    <xs:simpleType name="CurrencyTypeCode">
        <xs:union memberTypes="CurrencyTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="CurrencyTypeCodeEnumeration">
        <xs:annotation>
            <xs:documentation>enum: ISO-4217 / UN/ECE REC 09 Codes</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="ADP">
                <xs:annotation>
                    <xs:documentation>Andorran Peseta</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AED">
                <xs:annotation>
                    <xs:documentation>UAE Dirham</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AFA">
                <xs:annotation>
                    <xs:documentation>Afghani</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ALL">
                <xs:annotation>
                    <xs:documentation>Leck</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AMD">
                <xs:annotation>
                    <xs:documentation>Armenian Dram</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ANG">
                <xs:annotation>
                    <xs:documentation>Netherlands Antillan Guilder</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AOA">
                <xs:annotation>
                    <xs:documentation>Kwanza</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ARS">
                <xs:annotation>
                    <xs:documentation>Argentine Peso</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ATS">
                <xs:annotation>
                    <xs:documentation>Schilling</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AUD">
                <xs:annotation>
                    <xs:documentation>Australian Dollar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AWG">
                <xs:annotation>
                    <xs:documentation>Aruban Guilder</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AZM">
                <xs:annotation>
                    <xs:documentation>Azerbaijanian Manat</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BAM">
                <xs:annotation>
                    <xs:documentation>Convertible Marks</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BBD">
                <xs:annotation>
                    <xs:documentation>Barbados Dollar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BDT">
                <xs:annotation>
                    <xs:documentation>Taka</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BEF">
                <xs:annotation>
                    <xs:documentation>Belgian Franc</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BGL">
                <xs:annotation>
                    <xs:documentation>Lev</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BGN">
                <xs:annotation>
                    <xs:documentation>Bulgarian Lev</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BHD">
                <xs:annotation>
                    <xs:documentation>Bahraini Dinar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BIF">
                <xs:annotation>
                    <xs:documentation>Burundi Franc</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BMD">
                <xs:annotation>
                    <xs:documentation>Bermudian Dollar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BND">
                <xs:annotation>
                    <xs:documentation>Brunei Dollar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BOB">
                <xs:annotation>
                    <xs:documentation>Boliviano</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BOV">
                <xs:annotation>
                    <xs:documentation>Mvdol</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BRL">
                <xs:annotation>
                    <xs:documentation>Brazilian Real</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BSD">
                <xs:annotation>
                    <xs:documentation>Bahamian Dollar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BTN">
                <xs:annotation>
                    <xs:documentation>Ngultrum</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BWP">
                <xs:annotation>
                    <xs:documentation>Pula</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BYR">
                <xs:annotation>
                    <xs:documentation>Belarussian Ruble</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BZD">
                <xs:annotation>
                    <xs:documentation>Belize Dollar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CAD">
                <xs:annotation>
                    <xs:documentation>Canadian Dollar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CDF">
                <xs:annotation>
                    <xs:documentation>Franc Congolais</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CHF">
                <xs:annotation>
                    <xs:documentation>Swiss Franc</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CLF">
                <xs:annotation>
                    <xs:documentation>Unidades de fomento</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CLP">
                <xs:annotation>
                    <xs:documentation>Chilean Peso</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CNY">
                <xs:annotation>
                    <xs:documentation>Yuan Renminbi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="COP">
                <xs:annotation>
                    <xs:documentation>Colombian Peso</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CRC">
                <xs:annotation>
                    <xs:documentation>Costa Rican Colon</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CUP">
                <xs:annotation>
                    <xs:documentation>Cuban Peso</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CVE">
                <xs:annotation>
                    <xs:documentation>Cape Verde Escudo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CYP">
                <xs:annotation>
                    <xs:documentation>Cyprus Pound</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CZK">
                <xs:annotation>
                    <xs:documentation>Czech Koruna</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="DEM">
                <xs:annotation>
                    <xs:documentation>Deutsche Mark</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="DJF">
                <xs:annotation>
                    <xs:documentation>Djibouti Franc</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="DKK">
                <xs:annotation>
                    <xs:documentation>Danish Krone</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="DOP">
                <xs:annotation>
                    <xs:documentation>Dominican Peso</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="DZD">
                <xs:annotation>
                    <xs:documentation>Algerian Dinar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ECS">
                <xs:annotation>
                    <xs:documentation>Sucre</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ECV">
                <xs:annotation>
                    <xs:documentation>Unidad de Valor Constante (UVC)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="EEK">
                <xs:annotation>
                    <xs:documentation>Kroon</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="EGP">
                <xs:annotation>
                    <xs:documentation>Egyptian Pound</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ERN">
                <xs:annotation>
                    <xs:documentation>Nakfa</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ESP">
                <xs:annotation>
                    <xs:documentation>Spanish Peseta</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ETB">
                <xs:annotation>
                    <xs:documentation>Ethiopian Birr</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="EUR">
                <xs:annotation>
                    <xs:documentation>euro</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="FIM">
                <xs:annotation>
                    <xs:documentation>Markka</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="FJD">
                <xs:annotation>
                    <xs:documentation>Fiji Dollar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="FKP">
                <xs:annotation>
                    <xs:documentation>Falkland Islands Pound</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="FRF">
                <xs:annotation>
                    <xs:documentation>French Franc</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GBP">
                <xs:annotation>
                    <xs:documentation>Pound Sterling</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GEL">
                <xs:annotation>
                    <xs:documentation>Lari</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GHC">
                <xs:annotation>
                    <xs:documentation>Cedi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GIP">
                <xs:annotation>
                    <xs:documentation>Gibraltar Pound</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GMD">
                <xs:annotation>
                    <xs:documentation>Dalasi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GNF">
                <xs:annotation>
                    <xs:documentation>Guinea Franc</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GRD">
                <xs:annotation>
                    <xs:documentation>Drachma</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GTQ">
                <xs:annotation>
                    <xs:documentation>Quetzal</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GWP">
                <xs:annotation>
                    <xs:documentation>Guinea-Bissau Peso</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GYD">
                <xs:annotation>
                    <xs:documentation>Guyana Dollar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="HKD">
                <xs:annotation>
                    <xs:documentation>Hong Kong Dollar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="HNL">
                <xs:annotation>
                    <xs:documentation>Lempira</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="HRK">
                <xs:annotation>
                    <xs:documentation>Croatian kuna</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="HTG">
                <xs:annotation>
                    <xs:documentation>Gourde</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="HUF">
                <xs:annotation>
                    <xs:documentation>Forint</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="IDR">
                <xs:annotation>
                    <xs:documentation>Rupiah</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="IEP">
                <xs:annotation>
                    <xs:documentation>Irish Pound</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ILS">
                <xs:annotation>
                    <xs:documentation>New Israeli Sheqel</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="INR">
                <xs:annotation>
                    <xs:documentation>Indian Rupee</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="IQD">
                <xs:annotation>
                    <xs:documentation>Iraqi Dinar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="IRR">
                <xs:annotation>
                    <xs:documentation>Iranian Rial</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ISK">
                <xs:annotation>
                    <xs:documentation>Iceland Krona</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ITL">
                <xs:annotation>
                    <xs:documentation>Italian Lira</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="JMD">
                <xs:annotation>
                    <xs:documentation>Jamaican Dollar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="JOD">
                <xs:annotation>
                    <xs:documentation>Jordanian Dinar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="JPY">
                <xs:annotation>
                    <xs:documentation>Yen</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KES">
                <xs:annotation>
                    <xs:documentation>Kenyan Shilling</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KGS">
                <xs:annotation>
                    <xs:documentation>Som</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KHR">
                <xs:annotation>
                    <xs:documentation>Riel</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KMF">
                <xs:annotation>
                    <xs:documentation>Comoro Franc</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KPW">
                <xs:annotation>
                    <xs:documentation>North Korean Won</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KRW">
                <xs:annotation>
                    <xs:documentation>Won</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KWD">
                <xs:annotation>
                    <xs:documentation>Kuwaiti Dinar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KYD">
                <xs:annotation>
                    <xs:documentation>Cayman Islands Dollar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KZT">
                <xs:annotation>
                    <xs:documentation>Tenge</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LAK">
                <xs:annotation>
                    <xs:documentation>Kip</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LBP">
                <xs:annotation>
                    <xs:documentation>Lebanese Pound</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LKR">
                <xs:annotation>
                    <xs:documentation>Sri Lanka Rupee</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LRD">
                <xs:annotation>
                    <xs:documentation>Liberian Dollar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LSL">
                <xs:annotation>
                    <xs:documentation>Loti</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LTL">
                <xs:annotation>
                    <xs:documentation>Lithuanian Litus</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LUF">
                <xs:annotation>
                    <xs:documentation>Luxembourg Franc</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LVL">
                <xs:annotation>
                    <xs:documentation>Latvian Lats</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LYD">
                <xs:annotation>
                    <xs:documentation>Lybian Dinar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MAD">
                <xs:annotation>
                    <xs:documentation>Moroccan Dirham</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MDL">
                <xs:annotation>
                    <xs:documentation>Moldovan Leu</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MGF">
                <xs:annotation>
                    <xs:documentation>Malagasy Franc</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MKD">
                <xs:annotation>
                    <xs:documentation>Denar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MMK">
                <xs:annotation>
                    <xs:documentation>Kyat</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MNT">
                <xs:annotation>
                    <xs:documentation>Tugrik</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MOP">
                <xs:annotation>
                    <xs:documentation>Pataca</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MRO">
                <xs:annotation>
                    <xs:documentation>Ouguiya</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MTL">
                <xs:annotation>
                    <xs:documentation>Maltese Lira</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MUR">
                <xs:annotation>
                    <xs:documentation>Mauritius Rupee</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MVR">
                <xs:annotation>
                    <xs:documentation>Rufiyaa</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MWK">
                <xs:annotation>
                    <xs:documentation>Kwacha</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MXN">
                <xs:annotation>
                    <xs:documentation>Mexican Peso</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MXV">
                <xs:annotation>
                    <xs:documentation>Mexican Unidad de Inversion (UDI)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MYR">
                <xs:annotation>
                    <xs:documentation>Malaysian Ringgit</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MZM">
                <xs:annotation>
                    <xs:documentation>Metical</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NAD">
                <xs:annotation>
                    <xs:documentation>Namibia Dollar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NGN">
                <xs:annotation>
                    <xs:documentation>Naira</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NIO">
                <xs:annotation>
                    <xs:documentation>Cordoba Oro</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NLG">
                <xs:annotation>
                    <xs:documentation>Netherlands Guilder</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NOK">
                <xs:annotation>
                    <xs:documentation>Norvegian Krone</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NPR">
                <xs:annotation>
                    <xs:documentation>Nepalese Rupee</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NZD">
                <xs:annotation>
                    <xs:documentation>New Zealand Dollar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="OMR">
                <xs:annotation>
                    <xs:documentation>Rial Omani</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PAB">
                <xs:annotation>
                    <xs:documentation>Balboa</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PEN">
                <xs:annotation>
                    <xs:documentation>Nuevo Sol</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PGK">
                <xs:annotation>
                    <xs:documentation>Kina</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PHP">
                <xs:annotation>
                    <xs:documentation>Philippine Peso</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PKR">
                <xs:annotation>
                    <xs:documentation>Pakistan Rupee</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PLN">
                <xs:annotation>
                    <xs:documentation>Zloty</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PTE">
                <xs:annotation>
                    <xs:documentation>Portuguese Escudo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PYG">
                <xs:annotation>
                    <xs:documentation>Guarani</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="QAR">
                <xs:annotation>
                    <xs:documentation>Qatari Rial</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ROL">
                <xs:annotation>
                    <xs:documentation>Leu</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="RUB">
                <xs:annotation>
                    <xs:documentation>Russian Ruble</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="RUR">
                <xs:annotation>
                    <xs:documentation>Russian Ruble</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="RWF">
                <xs:annotation>
                    <xs:documentation>Rwanda Franc</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SAR">
                <xs:annotation>
                    <xs:documentation>Saudi Riyal</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SBD">
                <xs:annotation>
                    <xs:documentation>Solomon Islands Dollar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SCR">
                <xs:annotation>
                    <xs:documentation>Seychelles Rupee</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SDD">
                <xs:annotation>
                    <xs:documentation>Sudanese Dinar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SEK">
                <xs:annotation>
                    <xs:documentation>Swedish Krona</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SGD">
                <xs:annotation>
                    <xs:documentation>Singapore Dollar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SHP">
                <xs:annotation>
                    <xs:documentation>Saint Helena Pound</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SIT">
                <xs:annotation>
                    <xs:documentation>Tolar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SKK">
                <xs:annotation>
                    <xs:documentation>Slovak Koruna</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SLL">
                <xs:annotation>
                    <xs:documentation>Leone</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SOS">
                <xs:annotation>
                    <xs:documentation>Somali Shilling</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SRG">
                <xs:annotation>
                    <xs:documentation>Suriname Guilder</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="STD">
                <xs:annotation>
                    <xs:documentation>Dobra</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SVC">
                <xs:annotation>
                    <xs:documentation>El Salvador Colon</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SYP">
                <xs:annotation>
                    <xs:documentation>Syrian Pound</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SZL">
                <xs:annotation>
                    <xs:documentation>Lilangeni</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="THB">
                <xs:annotation>
                    <xs:documentation>Baht</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TJS">
                <xs:annotation>
                    <xs:documentation>Somoni</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TMM">
                <xs:annotation>
                    <xs:documentation>Manat</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TND">
                <xs:annotation>
                    <xs:documentation>Tunisian Dinar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TOP">
                <xs:annotation>
                    <xs:documentation>Pa´anga</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TPE">
                <xs:annotation>
                    <xs:documentation>Timor Escudo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TRL">
                <xs:annotation>
                    <xs:documentation>Turkish Lira</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TTD">
                <xs:annotation>
                    <xs:documentation>Trinidad and Tobago Dollar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TWD">
                <xs:annotation>
                    <xs:documentation>New Taiwan Dollar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TZS">
                <xs:annotation>
                    <xs:documentation>Tanzanian Shilling</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="UAH">
                <xs:annotation>
                    <xs:documentation>Hryvnia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="UGX">
                <xs:annotation>
                    <xs:documentation>Uganda Shilling</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="USD">
                <xs:annotation>
                    <xs:documentation>US Dollar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="USN">
                <xs:annotation>
                    <xs:documentation>US Dollar (Next day)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="USS">
                <xs:annotation>
                    <xs:documentation>US Dollar (Same day)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="UYU">
                <xs:annotation>
                    <xs:documentation>Peso Uruguayo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="UZS">
                <xs:annotation>
                    <xs:documentation>Uzbekistan Sum</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="VEB">
                <xs:annotation>
                    <xs:documentation>Bolivar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="VND">
                <xs:annotation>
                    <xs:documentation>Dong</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="VUV">
                <xs:annotation>
                    <xs:documentation>Vatu</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="WST">
                <xs:annotation>
                    <xs:documentation>Tala</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="XAF">
                <xs:annotation>
                    <xs:documentation>CFA Franc BEAC</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="XAG">
                <xs:annotation>
                    <xs:documentation>Silver</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="XAU">
                <xs:annotation>
                    <xs:documentation>Gold</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="XBA">
                <xs:annotation>
                    <xs:documentation>European Composite Unit (EURCO)</xs:documentation>
                    <xs:documentation>European Monetary Unit (E.M.U.-6)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="XBB">
                <xs:annotation>
                    <xs:documentation>European Unit of Account 9 (E.U.A.-9)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="XBC">
                <xs:annotation>
                    <xs:documentation>European Unit of Account 17 (E.U.A.-17)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="XCD">
                <xs:annotation>
                    <xs:documentation>East Caribbean Dollar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="XDR">
                <xs:annotation>
                    <xs:documentation>SDR</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="XFO">
                <xs:annotation>
                    <xs:documentation>Gold-Franc</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="XFU">
                <xs:annotation>
                    <xs:documentation>UIC-Franc</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="XOF">
                <xs:annotation>
                    <xs:documentation>CFA Franc BCEAO</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="XPD">
                <xs:annotation>
                    <xs:documentation>Palladium</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="XPF">
                <xs:annotation>
                    <xs:documentation>CFP Franc</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="XPT">
                <xs:annotation>
                    <xs:documentation>Platinum</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="XTS">
                <xs:annotation>
                    <xs:documentation>Codes Specifically reserved for testing
                        purposes</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="YER">
                <xs:annotation>
                    <xs:documentation>Yemeni Rial</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="YUM">
                <xs:annotation>
                    <xs:documentation>Yugoslavian Dinar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ZAR">
                <xs:annotation>
                    <xs:documentation>South Africa Rand</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ZMK">
                <xs:annotation>
                    <xs:documentation>Kwacha</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ZWD">
                <xs:annotation>
                    <xs:documentation>Zimbabwe Dollar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="AmountCommonData">
        <xs:simpleContent>
            <xs:extension base="DecimalCommonData">
                <xs:attribute default="USD" form="unqualified" name="Currency"
                    type="CurrencyTypeCode" use="optional"/>
                <xs:attribute form="unqualified" name="ForeignAmount" type="DecimalCommonData"
                    use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!-- *************************************************** -->
    <!-- ********** Foodservice Enumerations ********** -->
    <!--
        Enumerated type for Destination Types attribute
    -->
    <xs:simpleType name="FoodServiceDestinationTypeCode">
        <xs:union memberTypes="FoodserviceDestinationTypesEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="FoodserviceDestinationTypesEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Other"/>
            <xs:enumeration value="DineIn"/>
            <xs:enumeration value="ToGo"/>
            <xs:enumeration value="DriveThru"/>
            <xs:enumeration value="Pickup"/>
            <xs:enumeration value="Delivery"/>
            <xs:enumeration value="Patio"/>
            <xs:enumeration value="Catering"/>
            <xs:enumeration value="Garden"/>
            <xs:enumeration value="TelephoneOrder"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
		Enumerated type for Loyalty Type attribute
	-->
    <xs:simpleType name="LoyaltyLevelTypeCode">
        <xs:union memberTypes="LoyaltyLevelTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="LoyaltyLevelTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Silver"/>
            <xs:enumeration value="Gold"/>
            <xs:enumeration value="Platinum"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
	- Version 1.1 10/03/2008
	- Added mode to track which mode the workstation was in during the transaction
-->
    <!--
		Enumerated type for Workstation Types 
	-->
    <xs:simpleType name="WorkstationIDTypeCode">
        <xs:union memberTypes="WorkstationIDTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="WorkstationIDTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="ATM"/>
            <xs:enumeration value="CallCenterStation"/>
            <xs:enumeration value="Kiosk"/>
            <xs:enumeration value="Network"/>
            <xs:enumeration value="POI">
                <xs:annotation>
                    <xs:documentation>Point of Interaction (payment subsystem)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="POS"/>
            <xs:enumeration value="URI"/>
            <xs:enumeration value="Website"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="WorkstationIDCommonData">
        <xs:annotation>
            <xs:documentation>The unique identifier for the WORKSTATION, typically the serial
                number.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="Mode" type="WorkstationIDMode">
                    <xs:annotation>
                        <xs:documentation>Describes the mode this Worskstation was in when it made
                            the purchase..</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute form="unqualified" name="TypeCode" type="WorkstationIDTypeCode"/>
                <xs:attribute form="unqualified" name="SerialNumber" type="xs:string" use="optional"/>
                <xs:attribute form="unqualified" name="WorkstationLocation" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>the location at the time of the Transaction (e.g. Food,
                            Menswear, Household, Electrical).</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="WorkstationIDMode">
        <xs:union memberTypes="WorkstationIDModeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="WorkstationIDModeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Retail"/>
            <xs:enumeration value="Restaurant"/>
            <xs:enumeration value="Foodcounter"/>
            <xs:enumeration value="Forecourt"/>
            <xs:enumeration value="Bar"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--             Library Schemas              -->
    <!-- ============================ -->
    <!--
		Enumerated type for Business Unit Type attribute
	-->
    <xs:simpleType name="BusinessUnitTypeCode">
        <xs:union memberTypes="BusinessUnitTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="BusinessUnitTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="RetailStore">
                <xs:annotation>
                    <xs:documentation>A business which regularly offers goods for sale to the
                        ultimae consumer.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="DistributionCenter">
                <xs:annotation>
                    <xs:documentation>A facility to which goods are shiped for the purpose of
                        short-term storage, sorting, repacking and finally shipment to individual
                        stores, wholesalers, or consumers</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AdministrationCenter">
                <xs:annotation>
                    <xs:documentation>A location such as a central, executive and district offices
                        which are engaged in performing administrative functions for the retail
                        stores.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CallCenter">
                <xs:annotation>
                    <xs:documentation>A department wholly focused on telephone
                        inquires</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="WebSite"/>
            <xs:enumeration value="Distributor">
                <xs:annotation>
                    <xs:documentation>Modified GS1 - responsible for receipt, storage, dispatch,
                        processing, sampling and analysis of the product, as well as record keeping
                        of appropriate information about what is received and what is
                        dispatched.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Filler">
                <xs:annotation>
                    <xs:documentation>GS1 - responsible for the receipt, storage, processing,
                        sampling, analysis, filling, packing and dispatch of finished goods, as well
                        as record keeping of appropriate information about what is received and what
                        is dispatched</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TransitCellar">
                <xs:annotation>
                    <xs:documentation>GS1 - responsible for the receipt, storage, dispatch,
                        processing, sampling and analysis of bulk wine, as well as record keeping of
                        appropriate information about what is received and what is
                        dispatched.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Producer">
                <xs:annotation>
                    <xs:documentation>Modified GS1 - responsible for receiving and for the
                        production, manufacture and/or blending of the product.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Grower">
                <xs:annotation>
                    <xs:documentation>Modified GS1 - responsible for the production (in accordance
                        with integrated production principles), harvest and delivery, as well as
                        record keeping of appropriate information about what is received and what is
                        sent.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Factory">
                <xs:annotation>
                    <xs:documentation>A building or set of buildings containing equipment
                        potentially with housing for associates for the sole purpose of
                        manufacturing goods, often on a large scale</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Building">
                <xs:annotation>
                    <xs:documentation>Individual buildings in a complex of buildings, for example a
                        factory or a distribution center </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Dormitory">
                <xs:annotation>
                    <xs:documentation>A residential area for associates</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="BusinessUnitCommonData">
        <xs:annotation>
            <xs:documentation>Business Unit Common Data Node describing the location.     Contains
                one or more of RetailStore, DistributionCenter, InventoryLocation and
                AdminstrativeCenter.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="Name" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>The name of the business unit</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="RetailStore" form="unqualified" name="TypeCode"
                    type="BusinessUnitTypeCode" use="optional">
                    <xs:annotation>
                        <xs:documentation>type of the business unit; retail store, warehouse,
                            etc</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="CountCommonData">
        <xs:restriction base="xs:nonNegativeInteger">
            <xs:maxInclusive value="9999999999"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- Minor Release V1.2.0 20060823
		- Added MenuID -  the menu id for this particular item
	 Minor Release V1.1.0 20060627
		- added MuzeID and AMGID
-->
    <!--        Item ID Types               -->
    <!-- derived from UPOS V1.9    -->
    <!-- 	ScanDataType Property R -->
    <!-- MuzeID - The ID of a music title as  provided to the retailer by MUZE -->
    <!-- AMGID - The ID of a music title as provided to the retailer by AMG -->
    <xs:simpleType name="ItemIDTypeCode">
        <xs:union memberTypes="ItemIDTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="ItemIDTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="GTIN">
                <xs:annotation>
                    <xs:documentation>Global Trade Identification Number</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SGTIN">
                <xs:annotation>
                    <xs:documentation>Serialized GTIN</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SSCC">
                <xs:annotation>
                    <xs:documentation>Serialized Shipping Container</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SIN">
                <xs:annotation>
                    <xs:documentation>Shipment ID Number</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PLU">
                <xs:annotation>
                    <xs:documentation>Price Lookup Unit</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SKU">
                <xs:annotation>
                    <xs:documentation>Stock Keeping Unit</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ItemID"/>
            <xs:enumeration value="CouponID"/>
            <xs:enumeration value="ISBN"/>
            <xs:enumeration value="ISSN"/>
            <xs:enumeration value="EPC"/>
            <xs:enumeration value="TUC"/>
            <xs:enumeration value="POSDepartment"/>
            <xs:enumeration value="RFID"/>
            <xs:enumeration value="ScanData">
                <xs:annotation>
                    <xs:documentation>the information coming from the scanner</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="UPC"/>
            <xs:enumeration value="MUZEID"/>
            <xs:enumeration value="AMGID"/>
            <xs:enumeration value="MenuID"/>
            <xs:enumeration value="UPC-A"/>
            <xs:enumeration value="UPC-AWithSupplementalBarcode"/>
            <xs:enumeration value="UPC-E"/>
            <xs:enumeration value="UPC-EWithSupplementalBarcode"/>
            <xs:enumeration value="UPC-D1"/>
            <xs:enumeration value="UPC-D2"/>
            <xs:enumeration value="UPC-D3"/>
            <xs:enumeration value="UPC-D4"/>
            <xs:enumeration value="UPC-D5"/>
            <xs:enumeration value="EAN8"/>
            <xs:enumeration value="JAN8"/>
            <xs:enumeration value="EAN8WithSupplementalBarcode"/>
            <xs:enumeration value="EAN13"/>
            <xs:enumeration value="JAN13"/>
            <xs:enumeration value="EAN13WithSupplementalBarcode"/>
            <xs:enumeration value="EAN-128"/>
            <xs:enumeration value="Standard2Of5"/>
            <xs:enumeration value="Interleaved2Of5"/>
            <xs:enumeration value="Codabar"/>
            <xs:enumeration value="Code39"/>
            <xs:enumeration value="Code93"/>
            <xs:enumeration value="Code128"/>
            <xs:enumeration value="OCRA"/>
            <xs:enumeration value="OCRB"/>
            <xs:enumeration value="PDF417"/>
            <xs:enumeration value="MAXICODE"/>
            <xs:enumeration value="OTHER"/>
            <xs:enumeration value="UNKNOWN"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="ItemIDCommonData">
        <xs:annotation>
            <xs:documentation>Unique number for this item – represents this class of item,
                represented by PLU, GTIN, UPC, other</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="Name" type="xs:string" use="optional"/>
                <xs:attribute form="unqualified" name="Qualifier" type="xs:string" use="optional"/>
                <xs:attribute default="SKU" form="unqualified" name="Type" type="ItemIDTypeCode"
                    use="optional"/>
                <xs:attribute form="unqualified" name="UUID" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Universally Unique identifier for this
                            item</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!--
		Enumerated type for Operator Type attribute
	-->
    <xs:simpleType name="OperatorTypeCode">
        <xs:union memberTypes="OperatorTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="OperatorTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Cashier"/>
            <xs:enumeration value="Checker"/>
            <xs:enumeration value="Manager">
                <xs:annotation>
                    <xs:documentation>Person who identifies and achieves organizational objectives
                        through the deployment of appropriate resources.  It is the person with
                        Store Management responsibility (typically the highest level of
                        responsibility on-site)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="OrderTaker"/>
            <xs:enumeration value="Server"/>
            <xs:enumeration value="Supervisor">
                <xs:annotation>
                    <xs:documentation>Person who is given authority and responsibility for planning
                        and controlling the work of a group through close contact.  Supervisors are
                        typically the first level of management. Supervisors can have
                        responsibility over a number of Cashiers (supermarket) or servers/order
                        takers (restaurant)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Expediter"/>
            <xs:enumeration value="BarTender"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="OperatorCommonData">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="OperatorName" type="xs:string" use="optional"/>
                <xs:attribute form="unqualified" name="WorkerID">
                    <xs:annotation>
                        <xs:documentation>BEING DEPRECATED Being replaced by Associate
                            DI</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute form="unqualified" name="AssociateID" type="xs:string" use="optional"/>
                <xs:attribute form="unqualified" name="OperatorType" type="OperatorTypeCode"
                    use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!--
		 Version 1.1.0
		- Added Tapped to support Contactless Payment
		- Added Waved to support Contactless Payment
	-->
    <!-- 
		Entry Method Enumerations 
	-->
    <xs:simpleType name="EntryMethodTypeCode">
        <xs:union memberTypes="EntryMethodEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="EntryMethodEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Automatic"/>
            <xs:enumeration value="Keyed"/>
            <xs:enumeration value="IntegratedChipCard"/>
            <xs:enumeration value="Measured"/>
            <xs:enumeration value="MICR"/>
            <xs:enumeration value="MSR"/>
            <xs:enumeration value="RFID"/>
            <xs:enumeration value="SelfScan"/>
            <xs:enumeration value="Scanned"/>
            <xs:enumeration value="SmartCard"/>
            <xs:enumeration value="Tapped"/>
            <xs:enumeration value="Waved"/>
            <xs:enumeration value="Weighed"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="MonetaryAmountCommonData">
        <xs:simpleContent>
            <xs:extension base="AmountCommonData"/>
        </xs:simpleContent>
    </xs:complexType>
    <!-- 
		Dec - 2005		Richard Halter
		Bug Fix V2.0.2
			- Added Days
			- Added Seconds
-->
    <xs:simpleType name="UnitOfMeasureCodeCommonData">
        <xs:union memberTypes="UnitOfMeasureCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="UnitOfMeasureCodeEnumeration">
        <xs:annotation>
            <xs:documentation>enum codes excerpted from UN/ECE REC 20</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="EA">
                <xs:annotation>
                    <xs:documentation>each</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Hours">
                <xs:annotation>
                    <xs:documentation>Hours</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Days">
                <xs:annotation>
                    <xs:documentation>Days</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Seconds">
                <xs:annotation>
                    <xs:documentation>Seconds</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Crate of 12">
                <xs:annotation>
                    <xs:documentation>Crate of 12 bottles of beer</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="6Pack">
                <xs:annotation>
                    <xs:documentation>6 Pack</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GLI">
                <xs:annotation>
                    <xs:documentation>gallon (UK)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GLL">
                <xs:annotation>
                    <xs:documentation>gallon (US)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LTR">
                <xs:annotation>
                    <xs:documentation>litre</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="INH">
                <xs:annotation>
                    <xs:documentation>inch</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="FOT">
                <xs:annotation>
                    <xs:documentation>foot</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="DH">
                <xs:annotation>
                    <xs:documentation>ANSI X-12 Miles</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MMT">
                <xs:annotation>
                    <xs:documentation>millimeter</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CMQ">
                <xs:annotation>
                    <xs:documentation>cubic centimeter</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CMT">
                <xs:annotation>
                    <xs:documentation>Centimeter</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MTR">
                <xs:annotation>
                    <xs:documentation>metre</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MTK">
                <xs:annotation>
                    <xs:documentation>square metre</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MTQ">
                <xs:annotation>
                    <xs:documentation>cubic metre</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GRM">
                <xs:annotation>
                    <xs:documentation>gram</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KGM">
                <xs:annotation>
                    <xs:documentation>kilogram</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Kg">
                <xs:annotation>
                    <xs:documentation>kilogram</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LBR">
                <xs:annotation>
                    <xs:documentation>pound</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Oz">
                <xs:annotation>
                    <xs:documentation>Ounce</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ANN">
                <xs:annotation>
                    <xs:documentation>Annual</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CEL">
                <xs:annotation>
                    <xs:documentation>degree celcius</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="FAH">
                <xs:annotation>
                    <xs:documentation>degree fahrenheit</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <!-- Linear Measurements -->
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="UnitPriceCommonData">
        <xs:simpleContent>
            <xs:extension base="MonetaryAmountCommonData">
                <xs:attribute default="1" form="unqualified" name="Quantity" type="xs:decimal"
                    use="optional"/>
                <xs:attribute default="EA" form="unqualified" name="UnitOfMeasureCode"
                    type="UnitOfMeasureCodeCommonData" use="optional"/>
                <xs:attribute form="unqualified" name="EntryMethod" type="EntryMethodTypeCode"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!-- Minor Release V1.1.0
	- Added MAPPrice and VolumeDiscountPrice
-->
    <!--
		Enumerated type for Price Type attribute
UnitCostPrice - The weighted average cost for each retail sale unit of this item. The weighted average cost is updated each time a shipment of this item is received
UnitListPrice - The suggested sale unit retail price provided by the items manufacturer. Alternate names - list price, manufacturer recommended price, MSRP, Manufacturer Unit Price, Unit List Price.
RegularSalesUnitPrice - The sale unit monetary value of the item which is the original retail minus permanent markdowns taken against this item.
InventoryValuePrice - The monetary value of the units present at the beginning of the accounting period.
SuggestedRetailPrice - EAN.UCC Definition: The retail (to consumer) price as suggested by the manufacturer. This is normally used to establish a proposed value for the trade item for marketing purposes. May or may not appear on the package. May be used as a guideline by the retailer to establish their actual retail price.
MAPPrice - Minimum Advertised Price as determined by the Manufacturer.
VolumeDIscountPrice - Discounted price based on certain minimum purchase volume.
BidPrice - A price value that certain Comparison Shopping Engines (CSE) will use to purchase a better position o fhte product on the CSE site.
	-->
    <xs:simpleType name="PriceTypeCode">
        <xs:union memberTypes="PriceTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="PriceTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="BidPrice"/>
            <xs:enumeration value="InventoryValuePrice"/>
            <xs:enumeration value="MAPPrice"/>
            <xs:enumeration value="RegularSalesUnitPrice"/>
            <xs:enumeration value="SuggestedRetailPrice"/>
            <xs:enumeration value="UnitCostPrice"/>
            <xs:enumeration value="UnitListPrice"/>
            <xs:enumeration value="VolumeDiscountPrice"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="PriceCommonData">
        <xs:simpleContent>
            <xs:extension base="UnitPriceCommonData">
                <xs:attribute form="unqualified" name="ValueTypeCode" type="PriceTypeCode"
                    use="required"/>
                <xs:attribute default="false" form="unqualified" name="TaxIncludedInPriceFlag"
                    type="xs:boolean" use="optional"/>
                <xs:attribute default="true" form="unqualified" name="PriceOverrideFlag"
                    type="xs:boolean" use="optional">
                    <xs:annotation>
                        <xs:documentation>Indicates whether an item’s price can be overridden at
                            point of sale; assumes an exception occurred (e.g., no price in PLUFILE,
                            no entry, wrong price tag).</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="false" form="unqualified" name="QuantityPricingFlag"
                    type="xs:boolean" use="optional">
                    <xs:annotation>
                        <xs:documentation>Denotes whether the item is priced using Quantity Package
                            Price (Eg: 3 for $0.89)</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="QuantityCommonData">
        <xs:simpleContent>
            <xs:extension base="xs:decimal">
                <xs:attribute default="1" form="unqualified" name="Units" type="xs:decimal">
                    <xs:annotation>
                        <xs:documentation>The number of units sold, when selling bulk merchandise.
                            Eg: A sale of 20 Gallons of Gas: Quantity=20, Units=1, UnitOfMeasure=Ga
                            Eg: A sale of 3 cans of Beans: Quantity=3, Units=1, UnitOfMeasure=Ea
                            Sale of 6 pack of beer quantity = 1, units = 6
                            unitofmeasure=6pk</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="EA" form="unqualified" name="UnitOfMeasureCode"
                    type="UnitOfMeasureCodeCommonData" use="optional">
                    <xs:annotation>
                        <xs:documentation>The code used to specify the units in which a value is
                            being expressed, or manner in which a measurement has been taken.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="Scanned" form="unqualified" name="EntryMethod"
                    type="EntryMethodTypeCode" use="optional"/>
                <xs:attribute form="unqualified" name="Resolution">
                    <xs:annotation>
                        <xs:documentation>Indicate the number of significant digits.  When printing
                            a transaction with its weight, only the digits should be printed which
                            have significant resolution. e.g. a Scale with a resolution of 2 g would
                            print "0.820" - the last zero is intentional and correct but a scale
                            with 100g resolution would print "0.8" for a value of 0.800 - here the
                            last two zeroes must not be printed </xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:decimal">
                            <xs:minInclusive value="0.0"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute default="Sell" form="unqualified" name="Type" type="QuantityTypeCode"
                />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="QuantityTypeCode">
        <xs:union memberTypes="QuantityTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="QuantityTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Sell"/>
            <xs:enumeration value="Inventory"/>
            <xs:enumeration value="Waste"/>
            <xs:enumeration value="Label"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- TransactionGrossAmount is the total excluding discounts and surcharges without taxes (assuming tax is not included) -->
    <!-- TransactionNetAmount is the total including discounts and surcharges without taxes (assuming tax is not included) -->
    <!-- TransactionGrandAmount is the TransactionNetAmount + Taxes (assuming tax is not included) -->
    <!--So if tax is included then TransactionGrandAmount and TransactionNetAmount would be equal -->
    <!-- Another way to look at it, TransactionGrandAmount is the amount the customer pays. -->
    <!-- ItemRegistrationTime= previous accumulated sale mode time + ∑(end of item scan time) – (Start of item scan time) -->
    <!-- SecureTime= previous accumulated secure time + [(exit secure mode) – (enter secure mode)] -->
    <xs:simpleType name="RetailTransactionTotalType">
        <xs:union memberTypes="RetailTransactionTotalTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="RetailTransactionTotalTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="TransactionGrossAmount">
                <xs:annotation>
                    <xs:documentation>TransactionGrossAmount is the total excluding discounts and
                        surcharges without taxes (assuming tax is not included)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TransactionNetAmount">
                <xs:annotation>
                    <xs:documentation>TransactionNetAmount is the total including discounts and
                        surcharges without taxes (assuming tax is not included)       The net amount
                        doesn’t include added on taxes (luxury tax) but does include VAT taxes.
                        Grand Amount = Net Amount + Tax       206.25 = 165.00 + 41.25       This is
                        because VAT is included and no one ever see’s it.  It can be reported on the
                        bottom of the receipt but it is basically included in the price shown to the
                        customer.       There can also be a Gross Amount       Gross Amount = Net
                        Amount + Discounts – Surcharges.       So you could have a 10.00 euro item
                        with a 10% discount and included vat.       Gross Amount = 10.00       Net
                        Amount = 9.00       Grand Amount = 9.00 (amount the customer pays)
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TransactionTaxAmount"/>
            <xs:enumeration value="TransactionTaxIncluded"/>
            <xs:enumeration value="TransactionTaxSurcharge"/>
            <xs:enumeration value="TransactionGrandAmount">
                <xs:annotation>
                    <xs:documentation>TransactionGrandAmount is the TransactionNetAmount + Taxes
                        (assuming tax is not included)      So if tax is included then
                        TransactionGrandAmount and TransactionNetAmount would be equal   Another way
                        to look at it, TransactionGrandAmount is the amount the customer
                        pays</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TransactionTipAmount">
                <xs:annotation>
                    <xs:documentation>Total amount of the tip reported on this
                        transaction</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TransactionTaxExemptAmount">
                <xs:annotation>
                    <xs:documentation>Diplomats get no tax charged while his aide has a tax
                        reduction of 5%. There can be tax exempt  - people who have a tax exempt
                        status a. Old age b. Foreigner c. Non-profit organization d. Duty Free –
                        import or export </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TransactionTaxForgivenAmount"/>
            <xs:enumeration value="TransactionNonSalesAmount">
                <xs:annotation>
                    <xs:documentation>These are charges during a transaction that are not related to
                        regular sales. Can be things like pay ins, pay outs, rental fees, stamps,
                        .... Depends on how the retailer wants to account for these
                        items.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TransactionPurchaseQuantity">
                <xs:annotation>
                    <xs:documentation>This is the value of the number of items in a transaction. A
                        line is commonly found on the bottom of receipts, "number of items purchased
                        = X".      Does this include: voided items, returned items, packages (for
                        example if we sell tomatoes in a package). What is the business around this
                        counter : for example to print number of items on receipts so the supervisor
                        can count the items to verify it’s the correct amount? Yes if it's a package
                        of tomatoes, it would generally be a count increase of "1" per scannable
                        item. </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TransactionSubtotal"/>
            <xs:enumeration value="TransactionBalanceDueAmount"/>
            <xs:enumeration value="TransactionFoodstampTotalAmount"/>
            <xs:enumeration value="TransactionFoodstampBalanceDue"/>
            <xs:enumeration value="TransactionFoodstampBalanceDue"/>
            <xs:enumeration value="TransactionCouponTotal"/>
            <xs:enumeration value="TransactionCouponCount"/>
            <xs:enumeration value="TransactionDonationAmount"/>
            <xs:enumeration value="DiscountAmount">
                <xs:annotation>
                    <xs:documentation>The sum of all discounts either at the transaction or line
                        item level</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TransactionTotalSavings"/>
            <xs:enumeration value="TransactionTenderApplied"/>
            <xs:enumeration value="TransactionWeightTotal"/>
            <xs:enumeration value="TransactionItemCount"/>
            <xs:enumeration value="RingElapsedTime"/>
            <xs:enumeration value="TenderElapsedTime"/>
            <xs:enumeration value="IdleElapsedTime"/>
            <xs:enumeration value="LockElapsedTime"/>
            <xs:enumeration value="ItemRegistrationTime">
                <xs:annotation>
                    <xs:documentation>ItemRegTime= previous accumulated sale mode time + ∑(end of
                        item scan time) – (Start of item scan time) </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SecureTime">
                <xs:annotation>
                    <xs:documentation>Secure time is calculated according to cashier entering and
                        exiting secure mode, and will accumulate the duration during the cashier
                        sign on period</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SignOnTime">
                <xs:annotation>
                    <xs:documentation>Sign on time is calculated according to cashier sign in and
                        out events, and will accumulate the sign in duration of the cashier during
                        the shift.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SignOffTime">
                <xs:annotation>
                    <xs:documentation>The time when the operator signsoff the
                        workstation</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="SequenceNumberType">
        <xs:restriction base="xs:unsignedLong">
            <xs:minInclusive value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- 
		Sub Tender Type
	-->
    <xs:simpleType name="SubTenderTypeCodes">
        <xs:union memberTypes="SubTenderTypeCodesEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="SubTenderTypeCodesEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Amex"/>
            <xs:enumeration value="DinersClub"/>
            <xs:enumeration value="DiscoverCard"/>
            <xs:enumeration value="GoogleWallet"/>
            <xs:enumeration value="MasterCard"/>
            <xs:enumeration value="PayPal"/>
            <xs:enumeration value="Visa"/>
            <xs:enumeration value="Fleet">
                <xs:annotation>
                    <xs:documentation>Being Deprecated because this is a type of card which can be a
                        visa or master card or ... </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <!-- V1.2.0 
	- Added Mobile
-->
    <!--
		Enumerated type for Tender Type attribute
	-->
    <xs:simpleType name="TenderTypeCode">
        <xs:union memberTypes="TenderTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="TenderTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="AccountsReceivable"/>
            <xs:enumeration value="AirmilesConversion"/>
            <xs:enumeration value="CapitalBond"/>
            <xs:enumeration value="Cash"/>
            <xs:enumeration value="Check"/>
            <xs:enumeration value="CheckCard"/>
            <xs:enumeration value="CoPay"/>
            <xs:enumeration value="Coupon"/>
            <xs:enumeration value="CreditDebit"/>
            <xs:enumeration value="CustomerAccount"/>
            <xs:enumeration value="EBTCash"/>
            <xs:enumeration value="EBTFoodstamps"/>
            <xs:enumeration value="ElectronicTollCollection"/>
            <xs:enumeration value="FoodStamps"/>
            <xs:enumeration value="GiftCard"/>
            <xs:enumeration value="GiftCertificate"/>
            <xs:enumeration value="HouseAccount"/>
            <xs:enumeration value="InternationalMaestro"/>
            <xs:enumeration value="InternationalMoneyOrder"/>
            <xs:enumeration value="Loyalty"/>
            <xs:enumeration value="ManufacturerCoupon"/>
            <xs:enumeration value="Mobile"/>
            <xs:enumeration value="MoneyOrder"/>
            <xs:enumeration value="OnlinePayment">
                <xs:annotation>
                    <xs:documentation>Third party payment types such as Pay Pal or Google
                        Wallet</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PostalOrder"/>
            <xs:enumeration value="PurchaseOrder"/>
            <xs:enumeration value="RIFD"/>
            <xs:enumeration value="StaffDressAllowance"/>
            <xs:enumeration value="StoreAccount"/>
            <xs:enumeration value="StoredValue"/>
            <xs:enumeration value="TravelersCheck"/>
            <xs:enumeration value="UKMaestro"/>
            <xs:enumeration value="Voucher"/>
            <xs:enumeration value="WICCheck"/>
            <xs:enumeration value="WICCVV">
                <xs:annotation>
                    <xs:documentation>Women, Infant, Children Cash Value Voucher</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="WriteOff">
                <xs:annotation>
                    <xs:documentation>Used in a Drive Off transaction to indicate this amount is to
                        be written off</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="UnspentAmountType">
        <xs:annotation>
            <xs:documentation>The monetary value of the Voucher that has not been spent and not
                returned to the customer</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="AmountCommonData">
                <xs:attribute form="unqualified" name="Disposition"
                    type="POSLogVoucherUnspentDisposition">
                    <xs:annotation>
                        <xs:documentation>disposition of the unspent amount</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!--
        Enumerated type for Voucher Unspent Amount Disposition
    -->
    <xs:simpleType name="POSLogVoucherUnspentDisposition">
        <xs:union memberTypes="POSLogVoucherUnspentDispositionEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="POSLogVoucherUnspentDispositionEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="VoucherChange"/>
            <xs:enumeration value="CashChange"/>
            <xs:enumeration value="MixedChange"/>
            <xs:enumeration value="NoChange"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!-- 
        Complex & Simple types defining Kit or Combo sales & returns
    -->
    <xs:complexType name="MonetaryKindBase">
        <xs:annotation>
            <xs:documentation>A record of the denominations used in this tender line
                item.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" name="Kind" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The denomination being used</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Quantity">
                <xs:annotation>
                    <xs:documentation>The number of  the denomination being used</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="QuantityCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
    </xs:complexType>
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!-- Version 1.1.0 August 28, 2008
	- 	Updated with new countries 
		GG       Guernsey
		IM         Isle of Mann
		JE        Jersey
-->
    <!--
		Enumerated type for Operator Type attribute
	-->
    <xs:simpleType name="CountryTypeCode">
        <xs:union memberTypes="CountryCode TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="CountryCode">
        <xs:annotation>
            <xs:documentation>enum: ISO-3166 / UN/ECE REC 09 Codes</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="AF">
                <xs:annotation>
                    <xs:documentation>Afghanistan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AL">
                <xs:annotation>
                    <xs:documentation>Albania</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="DZ">
                <xs:annotation>
                    <xs:documentation>Algeria</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AS">
                <xs:annotation>
                    <xs:documentation>American Samoa</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AD">
                <xs:annotation>
                    <xs:documentation>Andorra</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AO">
                <xs:annotation>
                    <xs:documentation>Angola</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AI">
                <xs:annotation>
                    <xs:documentation>Anguilla</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AQ">
                <xs:annotation>
                    <xs:documentation>Antarctica</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AG">
                <xs:annotation>
                    <xs:documentation>Antigua And Barbuda</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AR">
                <xs:annotation>
                    <xs:documentation>Argentina</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AM">
                <xs:annotation>
                    <xs:documentation>Armenia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AW">
                <xs:annotation>
                    <xs:documentation>Aruba</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AU">
                <xs:annotation>
                    <xs:documentation>Australia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AT">
                <xs:annotation>
                    <xs:documentation>Austria</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AZ">
                <xs:annotation>
                    <xs:documentation>Azerbaijan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BS">
                <xs:annotation>
                    <xs:documentation>Bahamas</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BH">
                <xs:annotation>
                    <xs:documentation>Bahrain</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BD">
                <xs:annotation>
                    <xs:documentation>Bangladesh</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BB">
                <xs:annotation>
                    <xs:documentation>Barbados</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BY">
                <xs:annotation>
                    <xs:documentation>Belarus</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BE">
                <xs:annotation>
                    <xs:documentation>Belgium</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BZ">
                <xs:annotation>
                    <xs:documentation>Belize</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BJ">
                <xs:annotation>
                    <xs:documentation>Benin</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BM">
                <xs:annotation>
                    <xs:documentation>Bermuda</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BT">
                <xs:annotation>
                    <xs:documentation>Bhutan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BO">
                <xs:annotation>
                    <xs:documentation>Bolivia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BA">
                <xs:annotation>
                    <xs:documentation>Bosnia And Herzegovina</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BW">
                <xs:annotation>
                    <xs:documentation>Botswana</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BV">
                <xs:annotation>
                    <xs:documentation>Bouvet Island</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BR">
                <xs:annotation>
                    <xs:documentation>Brazil</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="IO">
                <xs:annotation>
                    <xs:documentation>British Indian Ocean Territory</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BN">
                <xs:annotation>
                    <xs:documentation>Brunei Darussalam</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BG">
                <xs:annotation>
                    <xs:documentation>Bulgaria</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BF">
                <xs:annotation>
                    <xs:documentation>Burkina Faso</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BI">
                <xs:annotation>
                    <xs:documentation>Burundi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KH">
                <xs:annotation>
                    <xs:documentation>Cambodia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CM">
                <xs:annotation>
                    <xs:documentation>Cameroon</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CA">
                <xs:annotation>
                    <xs:documentation>Canada</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CV">
                <xs:annotation>
                    <xs:documentation>Cape Verde</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KY">
                <xs:annotation>
                    <xs:documentation>Cayman Islands</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CF">
                <xs:annotation>
                    <xs:documentation>Central African Republic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TD">
                <xs:annotation>
                    <xs:documentation>Chad</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CL">
                <xs:annotation>
                    <xs:documentation>Chile</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CN">
                <xs:annotation>
                    <xs:documentation>China</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CX">
                <xs:annotation>
                    <xs:documentation>Christmas Island</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CC">
                <xs:annotation>
                    <xs:documentation>Cocos (Keeling) Islands</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CO">
                <xs:annotation>
                    <xs:documentation>Colombia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KM">
                <xs:annotation>
                    <xs:documentation>Comoros</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CG">
                <xs:annotation>
                    <xs:documentation>Congo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CD">
                <xs:annotation>
                    <xs:documentation>Congo, The Democratic Republic Of The</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CK">
                <xs:annotation>
                    <xs:documentation>Cook Islands</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CR">
                <xs:annotation>
                    <xs:documentation>Costa Rica</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CI">
                <xs:annotation>
                    <xs:documentation>Cote D'Ivoire</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="HR">
                <xs:annotation>
                    <xs:documentation>Croatia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CU">
                <xs:annotation>
                    <xs:documentation>Cuba</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CY">
                <xs:annotation>
                    <xs:documentation>Cyprus</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CZ">
                <xs:annotation>
                    <xs:documentation>Czech Republic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="DK">
                <xs:annotation>
                    <xs:documentation>Denmark</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="DJ">
                <xs:annotation>
                    <xs:documentation>Djibouti</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="DM">
                <xs:annotation>
                    <xs:documentation>Dominica</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="DO">
                <xs:annotation>
                    <xs:documentation>Dominican Republic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TP">
                <xs:annotation>
                    <xs:documentation>East Timor</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="EC">
                <xs:annotation>
                    <xs:documentation>Ecuador</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="EG">
                <xs:annotation>
                    <xs:documentation>Egypt</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SV">
                <xs:annotation>
                    <xs:documentation>El Salvador</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GQ">
                <xs:annotation>
                    <xs:documentation>Equatorial Guinea</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ER">
                <xs:annotation>
                    <xs:documentation>Eritrea</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="EE">
                <xs:annotation>
                    <xs:documentation>Estonia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ET">
                <xs:annotation>
                    <xs:documentation>Ethiopia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="FK">
                <xs:annotation>
                    <xs:documentation>Falkland Islands (Malvinas)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="FO">
                <xs:annotation>
                    <xs:documentation>Faroe Islands</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="FJ">
                <xs:annotation>
                    <xs:documentation>Fiji</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="FI">
                <xs:annotation>
                    <xs:documentation>Finland</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="FR">
                <xs:annotation>
                    <xs:documentation>France</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GF">
                <xs:annotation>
                    <xs:documentation>French Guiana</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PF">
                <xs:annotation>
                    <xs:documentation>French Polynesia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TF">
                <xs:annotation>
                    <xs:documentation>French Southern Territories</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GA">
                <xs:annotation>
                    <xs:documentation>Gabon</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GM">
                <xs:annotation>
                    <xs:documentation>Gambia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GE">
                <xs:annotation>
                    <xs:documentation>Georgia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="DE">
                <xs:annotation>
                    <xs:documentation>Germany</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GH">
                <xs:annotation>
                    <xs:documentation>Ghana</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GI">
                <xs:annotation>
                    <xs:documentation>Gibraltar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GR">
                <xs:annotation>
                    <xs:documentation>Greece</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GL">
                <xs:annotation>
                    <xs:documentation>Greenland</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GD">
                <xs:annotation>
                    <xs:documentation>Grenada</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GG">
                <xs:annotation>
                    <xs:documentation>Guernsey</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GP">
                <xs:annotation>
                    <xs:documentation>Guadeloupe</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GU">
                <xs:annotation>
                    <xs:documentation>Guam</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GT">
                <xs:annotation>
                    <xs:documentation>Guatemala</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GN">
                <xs:annotation>
                    <xs:documentation>Guinea</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GW">
                <xs:annotation>
                    <xs:documentation>Guinea-Bissau</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GY">
                <xs:annotation>
                    <xs:documentation>Guyana</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="HT">
                <xs:annotation>
                    <xs:documentation>Haiti</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="HM">
                <xs:annotation>
                    <xs:documentation>Heard Island And Mcdonald Islands</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="VA">
                <xs:annotation>
                    <xs:documentation>Holy See (Vatican City State)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="HN">
                <xs:annotation>
                    <xs:documentation>Honduras</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="HK">
                <xs:annotation>
                    <xs:documentation>Hong Kong</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="HU">
                <xs:annotation>
                    <xs:documentation>Hungary</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="IS">
                <xs:annotation>
                    <xs:documentation>Iceland</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="IN">
                <xs:annotation>
                    <xs:documentation>India</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ID">
                <xs:annotation>
                    <xs:documentation>Indonesia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="IR">
                <xs:annotation>
                    <xs:documentation>Iran, Islamic Republic Of</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="IQ">
                <xs:annotation>
                    <xs:documentation>Iraq</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="IE">
                <xs:annotation>
                    <xs:documentation>Ireland</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="IL">
                <xs:annotation>
                    <xs:documentation>Israel</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="IM">
                <xs:annotation>
                    <xs:documentation>Isle of Mann</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="IT">
                <xs:annotation>
                    <xs:documentation>Italy</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="JE">
                <xs:annotation>
                    <xs:documentation>Jersey</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="JM">
                <xs:annotation>
                    <xs:documentation>Jamaica</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="JP">
                <xs:annotation>
                    <xs:documentation>Japan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="JO">
                <xs:annotation>
                    <xs:documentation>Jordan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KZ">
                <xs:annotation>
                    <xs:documentation>Kazakstan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KE">
                <xs:annotation>
                    <xs:documentation>Kenya</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KI">
                <xs:annotation>
                    <xs:documentation>Kiribati</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KP">
                <xs:annotation>
                    <xs:documentation>Korea, Democratic People'S Republic Of</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KR">
                <xs:annotation>
                    <xs:documentation>Korea, Republic Of</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KW">
                <xs:annotation>
                    <xs:documentation>Kuwait</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KG">
                <xs:annotation>
                    <xs:documentation>Kyrgyzstan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LA">
                <xs:annotation>
                    <xs:documentation>Lao People'S Democratic Republic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LV">
                <xs:annotation>
                    <xs:documentation>Latvia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LB">
                <xs:annotation>
                    <xs:documentation>Lebanon</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LS">
                <xs:annotation>
                    <xs:documentation>Lesotho</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LR">
                <xs:annotation>
                    <xs:documentation>Liberia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LY">
                <xs:annotation>
                    <xs:documentation>Libyan Arab Jamahiriya</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LI">
                <xs:annotation>
                    <xs:documentation>Liechtenstein</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LT">
                <xs:annotation>
                    <xs:documentation>Lithuania</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LU">
                <xs:annotation>
                    <xs:documentation>Luxembourg</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MO">
                <xs:annotation>
                    <xs:documentation>Macau</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MK">
                <xs:annotation>
                    <xs:documentation>Macedonia, The Former Yugoslav Republic Of</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MG">
                <xs:annotation>
                    <xs:documentation>Madagascar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MW">
                <xs:annotation>
                    <xs:documentation>Malawi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MY">
                <xs:annotation>
                    <xs:documentation>Malaysia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MV">
                <xs:annotation>
                    <xs:documentation>Maldives</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ML">
                <xs:annotation>
                    <xs:documentation>Mali</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MT">
                <xs:annotation>
                    <xs:documentation>Malta</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MH">
                <xs:annotation>
                    <xs:documentation>Marshall Islands</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MQ">
                <xs:annotation>
                    <xs:documentation>Martinique</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MR">
                <xs:annotation>
                    <xs:documentation>Mauritania</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MU">
                <xs:annotation>
                    <xs:documentation>Mauritius</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="YT">
                <xs:annotation>
                    <xs:documentation>Mayotte</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MX">
                <xs:annotation>
                    <xs:documentation>Mexico</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="FM">
                <xs:annotation>
                    <xs:documentation>Micronesia, Federated States Of</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MD">
                <xs:annotation>
                    <xs:documentation>Moldova, Republic Of</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MC">
                <xs:annotation>
                    <xs:documentation>Monaco</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MN">
                <xs:annotation>
                    <xs:documentation>Mongolia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MS">
                <xs:annotation>
                    <xs:documentation>Montserrat</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MA">
                <xs:annotation>
                    <xs:documentation>Morocco</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MZ">
                <xs:annotation>
                    <xs:documentation>Mozambique</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MM">
                <xs:annotation>
                    <xs:documentation>Myanmar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NA">
                <xs:annotation>
                    <xs:documentation>Namibia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NR">
                <xs:annotation>
                    <xs:documentation>Nauru</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NP">
                <xs:annotation>
                    <xs:documentation>Nepal</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NL">
                <xs:annotation>
                    <xs:documentation>Netherlands</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AN">
                <xs:annotation>
                    <xs:documentation>Netherlands Antilles</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NC">
                <xs:annotation>
                    <xs:documentation>New Caledonia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NZ">
                <xs:annotation>
                    <xs:documentation>New Zealand</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NI">
                <xs:annotation>
                    <xs:documentation>Nicaragua</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NE">
                <xs:annotation>
                    <xs:documentation>Niger</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NG">
                <xs:annotation>
                    <xs:documentation>Nigeria</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NU">
                <xs:annotation>
                    <xs:documentation>Niue</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NF">
                <xs:annotation>
                    <xs:documentation>Norfolk Island</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MP">
                <xs:annotation>
                    <xs:documentation>Northern Mariana Islands</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NO">
                <xs:annotation>
                    <xs:documentation>Norway</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="OM">
                <xs:annotation>
                    <xs:documentation>Oman</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PK">
                <xs:annotation>
                    <xs:documentation>Pakistan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PW">
                <xs:annotation>
                    <xs:documentation>Palau</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PS">
                <xs:annotation>
                    <xs:documentation>Palestinian Territory, Occupied</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PA">
                <xs:annotation>
                    <xs:documentation>Panama</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PG">
                <xs:annotation>
                    <xs:documentation>Papua New Guinea</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PY">
                <xs:annotation>
                    <xs:documentation>Paraguay</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PE">
                <xs:annotation>
                    <xs:documentation>Peru</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PH">
                <xs:annotation>
                    <xs:documentation>Philippines</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PN">
                <xs:annotation>
                    <xs:documentation>Pitcairn</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PL">
                <xs:annotation>
                    <xs:documentation>Poland</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PT">
                <xs:annotation>
                    <xs:documentation>Portugal</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PR">
                <xs:annotation>
                    <xs:documentation>Puerto Rico</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="QA">
                <xs:annotation>
                    <xs:documentation>Qatar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="RE">
                <xs:annotation>
                    <xs:documentation>Reunion</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="RO">
                <xs:annotation>
                    <xs:documentation>Romania</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="RU">
                <xs:annotation>
                    <xs:documentation>Russian Federation</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="RW">
                <xs:annotation>
                    <xs:documentation>Rwanda</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SH">
                <xs:annotation>
                    <xs:documentation>Saint Helena</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KN">
                <xs:annotation>
                    <xs:documentation>Saint Kitts And Nevis</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LC">
                <xs:annotation>
                    <xs:documentation>Saint Lucia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PM">
                <xs:annotation>
                    <xs:documentation>Saint Pierre And Miquelon</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="VC">
                <xs:annotation>
                    <xs:documentation>Saint Vincent And The Grenadines</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="WS">
                <xs:annotation>
                    <xs:documentation>Samoa</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SM">
                <xs:annotation>
                    <xs:documentation>San Marino</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ST">
                <xs:annotation>
                    <xs:documentation>Sao Tome And Principe</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SA">
                <xs:annotation>
                    <xs:documentation>Saudi Arabia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SN">
                <xs:annotation>
                    <xs:documentation>Senegal</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SC">
                <xs:annotation>
                    <xs:documentation>Seychelles</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SL">
                <xs:annotation>
                    <xs:documentation>Sierra Leone</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SG">
                <xs:annotation>
                    <xs:documentation>Singapore</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SK">
                <xs:annotation>
                    <xs:documentation>Slovakia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SI">
                <xs:annotation>
                    <xs:documentation>Slovenia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SB">
                <xs:annotation>
                    <xs:documentation>Solomon Islands</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SO">
                <xs:annotation>
                    <xs:documentation>Somalia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ZA">
                <xs:annotation>
                    <xs:documentation>South Africa</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GS">
                <xs:annotation>
                    <xs:documentation>South Georgia And The South Sandwich
                        Islands</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ES">
                <xs:annotation>
                    <xs:documentation>Spain</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LK">
                <xs:annotation>
                    <xs:documentation>Sri Lanka</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SD">
                <xs:annotation>
                    <xs:documentation>Sudan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SR">
                <xs:annotation>
                    <xs:documentation>Suriname</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SJ">
                <xs:annotation>
                    <xs:documentation>Svalbard And Jan Mayen</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SZ">
                <xs:annotation>
                    <xs:documentation>Swaziland</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SE">
                <xs:annotation>
                    <xs:documentation>Sweden</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CH">
                <xs:annotation>
                    <xs:documentation>Switzerland</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SY">
                <xs:annotation>
                    <xs:documentation>Syrian Arab Republic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TW">
                <xs:annotation>
                    <xs:documentation>Taiwan, Province Of China</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TJ">
                <xs:annotation>
                    <xs:documentation>Tajikistan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TZ">
                <xs:annotation>
                    <xs:documentation>Tanzania, United Republic Of</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TH">
                <xs:annotation>
                    <xs:documentation>Thailand</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TG">
                <xs:annotation>
                    <xs:documentation>Togo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TK">
                <xs:annotation>
                    <xs:documentation>Tokelau</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TO">
                <xs:annotation>
                    <xs:documentation>Tonga</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TT">
                <xs:annotation>
                    <xs:documentation>Trinidad And Tobago</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TN">
                <xs:annotation>
                    <xs:documentation>Tunisia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TR">
                <xs:annotation>
                    <xs:documentation>Turkey</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TM">
                <xs:annotation>
                    <xs:documentation>Turkmenistan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TC">
                <xs:annotation>
                    <xs:documentation>Turks And Caicos Islands</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TV">
                <xs:annotation>
                    <xs:documentation>Tuvalu</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="UG">
                <xs:annotation>
                    <xs:documentation>Uganda</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="UA">
                <xs:annotation>
                    <xs:documentation>Ukraine</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AE">
                <xs:annotation>
                    <xs:documentation>United Arab Emirates</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GB">
                <xs:annotation>
                    <xs:documentation>United Kingdom</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="US">
                <xs:annotation>
                    <xs:documentation>United States</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="UM">
                <xs:annotation>
                    <xs:documentation>United States Minor Outlying Islands</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="UY">
                <xs:annotation>
                    <xs:documentation>Uruguay</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="UZ">
                <xs:annotation>
                    <xs:documentation>Uzbekistan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="VU">
                <xs:annotation>
                    <xs:documentation>Vanuatu</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="VE">
                <xs:annotation>
                    <xs:documentation>Venezuela</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="VN">
                <xs:annotation>
                    <xs:documentation>Viet Nam</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="VG">
                <xs:annotation>
                    <xs:documentation>Virgin Islands, British</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="VI">
                <xs:annotation>
                    <xs:documentation>Virgin Islands, U.S.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="WF">
                <xs:annotation>
                    <xs:documentation>Wallis And Futuna</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="EH">
                <xs:annotation>
                    <xs:documentation>Western Sahara</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="YE">
                <xs:annotation>
                    <xs:documentation>Yemen</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="YU">
                <xs:annotation>
                    <xs:documentation>Yugoslavia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ZM">
                <xs:annotation>
                    <xs:documentation>Zambia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ZW">
                <xs:annotation>
                    <xs:documentation>Zimbabwe</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="ReasonCodeCommonData">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="Description" type="xs:string" use="optional"/>
                <xs:attribute form="unqualified" name="Name" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!-- ====================== -->
    <!--       Library Schemas        -->
    <!-- ====================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="TenderForeignCurrencyBase">
        <xs:annotation>
            <xs:documentation>provides details about the foreign currency exchange rates,
                etc.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="DateTime" type="xs:dateTime"/>
            <xs:element form="qualified" minOccurs="0" name="CurrencyCode" type="CurrencyTypeCode">
                <xs:annotation>
                    <xs:documentation>To be depreciated - data now contained in
                        MonetaryAmountCommonData</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="OriginalFaceAmount">
                <xs:annotation>
                    <xs:documentation>the original amount in the foreign currency the being
                        converted to local currency.  For example, converting Yen to Dollars, this
                        amount would be the amount of Yen</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="MonetaryAmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ExchangeRate" type="DecimalCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="ServiceCharge">
                <xs:annotation>
                    <xs:documentation>The amount charged to make the conversion from the foreign
                        currency to the local currency</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="MonetaryAmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="POSLogTotalsBase">
        <xs:sequence>
            <xs:element form="qualified" name="Amount">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData">
                            <xs:attribute form="unqualified" name="Denomination" type="xs:string"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Count" type="xs:integer"/>
            <xs:element form="qualified" minOccurs="0" name="Reason">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="ReasonCodeCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ForeignCurrency"
                type="TenderForeignCurrencyBase"/>
            <xs:element form="qualified" minOccurs="0" name="TenderID">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="POSLogTenderID"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute form="unqualified" name="TenderType" type="TenderTypeCode"/>
        <xs:attribute form="unqualified" name="SubTenderType" type="SubTenderTypeCodes"/>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="TenderTotalBase">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" name="TenderTotal"
                type="POSLogTenderID"/>
            <xs:element form="qualified" minOccurs="0" name="Reason" type="ReasonCodeCommonData"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="POSLogTenderID">
        <xs:simpleContent>
            <xs:extension base="DecimalCommonData">
                <xs:attribute form="unqualified" name="TenderType" type="TenderTypeCode"
                    use="required"/>
                <xs:attribute form="unqualified" name="SubTenderType" type="SubTenderTypeCodes"
                    use="optional"/>
                <xs:attribute form="unqualified" name="Denomination" type="xs:string" use="optional"/>
                <xs:attribute form="unqualified" name="CountryCode" type="CountryTypeCode"
                    use="optional"/>
                <xs:attribute form="unqualified" name="Currency" type="CurrencyTypeCode"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!-- ============================ -->
    <!--             Derived Schemas             -->
    <!-- ============================ -->
    <!--  ============================ -->
    <!--                     BATCH                          -->
    <!--  ============================ -->
    <xs:complexType name="BatchBase">
        <xs:annotation>
            <xs:documentation> A summary of Transaction activity.  It can include the transaction
                detail for all transactions covered by the summary</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" name="BatchID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A unique identifier for this Batch.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="BusinessUnit"
                type="BusinessUnitCommonData">
                <xs:annotation>
                    <xs:documentation>The data in this batch is from this business
                        unit</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="FirstTransactionTimestamp"
                type="xs:dateTime">
                <xs:annotation>
                    <xs:documentation>The Date &amp; Time of the first transaction in this
                        batch</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="LastTransactionTimestamp"
                type="xs:dateTime">
                <xs:annotation>
                    <xs:documentation>The Date &amp; Time of the last transaction in this
                        batch.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="BatchCompleteTimestamp"
                type="xs:dateTime">
                <xs:annotation>
                    <xs:documentation>The Date &amp; Time the POS closed &amp; sent this
                        batch</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ActivitySummary"
                type="POSLogActivitySummary">
                <xs:annotation>
                    <xs:documentation>Summary of POSLog activity during this
                        Batch</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="POSLogActivitySummary">
        <xs:sequence>
            <xs:element form="qualified" name="TransactionCount" type="xs:integer">
                <xs:annotation>
                    <xs:documentation>The number of transactions in this Batch</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="TransactionAmount" type="xs:decimal">
                <xs:annotation>
                    <xs:documentation>The gross monetary total value of all transactions in this
                        Batch. </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                name="MerchandiseHierarchy" type="POSLogMerchandiseHierarchySummary"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="TenderTotals"
                type="POSLogTenderTotals"/>
            <xs:element form="qualified" minOccurs="0" name="FoodserviceActivitySummary"
                type="FoodServiceActivitySummaryType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="FoodServiceActivitySummaryType">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="AveragePartySales"
                type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The average sales amount per party </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="AveragePeopleSales"
                type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>Average sales amount per person</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="CertificationCount"
                type="CountCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="ForceClosure"
                type="FoodServiceSummaryType">
                <xs:annotation>
                    <xs:documentation>Captures information about checks that were open during the
                        day and were forcibly closed by the manager as part of the end-of-day
                        closure.  these checks were left open due to the poor service or quality of
                        foods, ec.  Since the checks cannot be left open  indefinitely, the manager
                        usually closes tehm at the end-of-day.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="ItemCancel"
                type="ItemCancelType"/>
            <xs:element form="qualified" minOccurs="0" name="OrderBillCount" type="CountCommonData">
                <xs:annotation>
                    <xs:documentation>The number of ordering slips.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PartyCount" type="CountCommonData">
                <xs:annotation>
                    <xs:documentation>The number of parties who visited store.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="PartySummary"
                type="PartySummaryType"/>
            <xs:element form="qualified" minOccurs="0" name="PeopleCount" type="CountCommonData">
                <xs:annotation>
                    <xs:documentation>The number of people who visited store.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="PeopleSummary"
                type="PeopleSummaryType"/>
            <xs:element form="qualified" minOccurs="0" name="POSReceiptCount" type="CountCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="ServiceCharge" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The total service charges included in this
                        batch</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="SlipReceiptCount"
                type="CountCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="SuspendedBill"
                type="FoodServiceSummaryType"/>
            <xs:element form="qualified" minOccurs="0" name="SuspendedBillCancel"
                type="FoodServiceSummaryType"/>
            <xs:element form="qualified" minOccurs="0" name="TableCharge" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The total Table Charges included in this
                        batch</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TransactionBillCancel"
                type="FoodServiceSummaryType">
                <xs:annotation>
                    <xs:documentation>TransactionBill expresses the collection of the order checks
                        in FoodService.  Several checks exist in one Transaction.
                        TransactionBillCansel totals the canceled order check
                        data.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="UnPaidBill"
                type="FoodServiceSummaryType"/>
            <xs:element form="qualified" minOccurs="0" name="Voids" type="FoodServiceSummaryType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="PartySummaryType">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="PartyName" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name for this particular party (group of individuals),
                        i.e. the "Wild" party of nine.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PartyCount" type="CountCommonData">
                <xs:annotation>
                    <xs:documentation>The number of parties who visited store.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PeopleCount" type="CountCommonData">
                <xs:annotation>
                    <xs:documentation>The number of people who visited store.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Amount" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The sum total of the sales.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TransactionCount"
                type="QuantityCommonData">
                <xs:annotation>
                    <xs:documentation>The number of transactions.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute form="unqualified" name="DestinationType"
            type="FoodServiceDestinationTypeCode"/>
        <xs:attribute form="unqualified" name="PartyType" type="PartyTypeCode"/>
    </xs:complexType>
    <xs:simpleType name="PartyTypeCode">
        <xs:union memberTypes="PartyTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="PartyTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Family"/>
            <xs:enumeration value="Couple"/>
            <xs:enumeration value="Single"/>
            <xs:enumeration value="Group"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="PeopleSummaryType">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="PeopleCount" type="CountCommonData">
                <xs:annotation>
                    <xs:documentation>The number of people who visited store.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Amount" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The sum total of the sales.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TransactionCount"
                type="CountCommonData">
                <xs:annotation>
                    <xs:documentation>The number of transactions.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute form="unqualified" name="LoyaltyLevelType" type="LoyaltyLevelTypeCode">
            <xs:annotation>
                <xs:documentation>Silver, Gold, Platinum</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="ItemCancelType">
        <xs:annotation>
            <xs:documentation>Items canceled before tender and delivery</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Amount" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The monetary value of cancel.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Count" type="CountCommonData">
                <xs:annotation>
                    <xs:documentation>Thecount of the number of cancel.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute form="unqualified" name="DeviceType" type="ItemCancelDeviceTypeCode">
            <xs:annotation>
                <xs:documentation>Equipment that it was canceled. For example, HandyTerminal, POS,
                    etc.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:simpleType name="ItemCancelDeviceTypeCode">
        <xs:union memberTypes="ItemCancelDeviceEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="ItemCancelDeviceEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="HandyTerminal"/>
            <xs:enumeration value="Workstation"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="FoodServiceSummaryType">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="PartyCount" type="CountCommonData">
                <xs:annotation>
                    <xs:documentation>The count of the number of parties who visited
                        store.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PeopleCount" type="CountCommonData">
                <xs:annotation>
                    <xs:documentation>The count of the number of people who visited
                        store.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Amount" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The monetary value of all Tender for
                        SalesAmount.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="TransactionCount" type="CountCommonData"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="VoidsSummaryType"/>
    <xs:complexType name="POSLogMerchandiseHierarchySummary">
        <xs:annotation>
            <xs:documentation> Summary of POSLog activity involving a particular
                MerchandiseHierarchy group in this Batch. </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="GroupID">
                <xs:annotation>
                    <xs:documentation>Unique identifier for the MerchandiseHierarchy group being
                        summarized </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="LevelID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The level of the Merchandise categorization Hierarchy to which
                        the group being summarized belongs</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="Amount" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The gross monetary tatal of all transactions for the nominated
                        MerchandiseHierarchy group, included in all transactions in the
                        summary.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="Quantity" type="QuantityCommonData">
                <xs:annotation>
                    <xs:documentation>The number of items in the MerchandiseHierarchy group,
                        included in all transactions in the summary.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="SalesAmount"
                type="SalesAmountSummaryType"/>
            <xs:element form="qualified" minOccurs="0" name="DiscountAmount"
                type="DiscountAmountSummaryType"/>
            <xs:element form="qualified" minOccurs="0" name="TaxAmount" type="TaxAmountSummaryType"/>
            <xs:element form="qualified" minOccurs="0" name="TaxableAmount"
                type="AmountQuantityType">
                <xs:annotation>
                    <xs:documentation>Summary for taxable items in the Merchandise Hierarchy
                        included in all transactions in the summary. </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="NonTaxableAmount"
                type="AmountQuantityType">
                <xs:annotation>
                    <xs:documentation>Summary for non-taxable items in the Merchandise Hierarchy
                        included in all transactions in the summary. </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TaxExemptAmount"
                type="AmountQuantityType">
                <xs:annotation>
                    <xs:documentation>Summary for tax exempt items in the Merchandise Hierarchy
                        included in all transactions in the summary. </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute form="unqualified" name="TypeCode" type="POSLogMerchandiseHierarchyTypeCode"/>
    </xs:complexType>
    <xs:complexType name="SalesAmountSummaryType">
        <xs:complexContent>
            <xs:extension base="AmountQuantityType">
                <xs:attribute form="unqualified" name="SalesTypeCode"
                    type="RetailTransactionTotalType"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="DiscountAmountSummaryType">
        <xs:complexContent>
            <xs:extension base="AmountQuantityType">
                <xs:attribute form="unqualified" name="DiscountTypeCode"
                    type="DiscountSummaryTypeCode"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="DiscountSummaryTypeCode">
        <xs:union memberTypes="DiscountSummaryEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:annotation>
        <xs:documentation>- SubTotalValueMinus - Total of the amount of money discounted from the
            amount of a subtotal - UnitValueMinus - The total of the amount of money discounted for
            every item - SubTotalPercentMinus - Total of the amount of money discounted from the
            amount of a subtotal of the case which inputted the amount of money for a discount not
            by the amount but by %-. - POSDepartmentValueMinus - The total of the case discounted
            not per item but per POS department. - FractionValueMinus - The total of the case which
            discounted fractions, such as 100yen or less etc. - TotalValueMinus - The total of the
            case discounted from the total amount.</xs:documentation>
    </xs:annotation>
    <xs:simpleType name="DiscountSummaryEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="SubTotalValueMinus"/>
            <xs:enumeration value="UnitValueMinus"/>
            <xs:enumeration value="SubTotalPercentMinus"/>
            <xs:enumeration value="POSDepartmentValueMinus"/>
            <xs:enumeration value="FactionValueMinus"/>
            <xs:enumeration value="TotalValueMinus"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="TaxAmountSummaryType">
        <xs:complexContent>
            <xs:extension base="AmountQuantityType">
                <xs:attribute form="unqualified" name="TaxTypeCode" type="TaxSummaryTypeCode"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="TaxSummaryTypeCode">
        <xs:union memberTypes="TaxSummaryEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="TaxSummaryEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="ConsumptionTax"/>
            <xs:enumeration value="ExcludedConsumptionTax"/>
            <xs:enumeration value="IncludedConsumptionTax"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="POSLogMerchandiseHierarchyTypeCode">
        <xs:union memberTypes="POSLogMerchandiseHierarchyEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="POSLogMerchandiseHierarchyEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Sales"/>
            <xs:enumeration value="Returns"/>
            <xs:enumeration value="Layaways"/>
            <xs:enumeration value="Orders"/>
            <xs:enumeration value="Voids"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="POSLogTenderTotals">
        <xs:annotation>
            <xs:documentation>Summary of POSLog activity involving a particular Tender type in this
                Batch. </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="AccountPayment"
                type="AmountQuantityType">
                <xs:annotation>
                    <xs:documentation>The number and monetary value of all Customer Account Payments
                        received for this TenderType in the summary. </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Amount" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The total amount reported in this Tender Totals
                        Node</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Change" type="AmountCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="Count" type="CountCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="Quantity" type="QuantityCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="Deposit" type="AmountQuantityType">
                <xs:annotation>
                    <xs:documentation>The number and monetary value of all Tender Deposits performed
                        for this TenderType in the summary.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Exchange" type="AmountQuantityType">
                <xs:annotation>
                    <xs:documentation>The number and monetary value of all Tender Exchanges
                        performed for this TenderType in the summary</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Loan" type="AmountQuantityType">
                <xs:annotation>
                    <xs:documentation>The number &amp; monetary value of all Tender Loans performed for
                        this TenderType in the summary.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="MonetaryKind" type="MonetaryKindBase">
                <xs:annotation>
                    <xs:documentation>In case of POS close, there is processing which scrutinizes
                        the money in Cash Drawer and inputs the number of sheets for every kind of
                        money.(The case not using the automatic calculation cash
                        Drawer)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PayIn" type="AmountQuantityType">
                <xs:annotation>
                    <xs:documentation>The number &amp; monetary value of all Tender Payins performed for
                        this TenderType in the summary. </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PayOut" type="AmountQuantityType">
                <xs:annotation>
                    <xs:documentation>The number &amp; monetary value of all Tender Payouts  performed
                        for this TenderType in the summary.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Pickup" type="AmountQuantityType">
                <xs:annotation>
                    <xs:documentation>The number &amp; monetary value of all Tender Pickups performed
                        for this TenderType in the summary</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="StampTax" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="UnspentAmount" type="UnspentAmountType"
            />
        </xs:sequence>
        <xs:attribute form="unqualified" name="TenderType" type="TenderTypeCode"/>
        <xs:attribute form="unqualified" name="SubTenderType" type="SubTenderTypeCodes"/>
        <xs:attribute form="unqualified" name="FaceValue" type="xs:string">
            <xs:annotation>
                <xs:documentation>FaceValue is used for the total for every kind of cash. 1-dollar
                    bill totals 100 and  5-dollar bill totals 50 ,etc. Japanese yen   There is  1
                    yen, 5 yen, 10 yen, 50 yen, 100 yen, 500 yen, 1000 yen, 2000 yen, 5000 yen, and
                    10000 yen kind. The cash Drawer which identifies and calculates a kind
                    automatically (as option) can be attached to POS, and the total for every kind
                    is possible.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="AmountQuantityType">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Amount" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The monetary value of Tender movements being reported
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Quantity" type="QuantityCommonData">
                <xs:annotation>
                    <xs:documentation> The number of Tender movements being reported
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <!-- *************************************************** -->
    <!--
		Complex & Enumerated types defining Retail Transaction Totals
	-->
    <!--   -->
    <!-- *************************************************** -->
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--      Base Schemas            -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--      Derived Schemas         -->
    <!-- ============================ -->
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!-- 
		Date Time Enumeration
	-->
    <xs:simpleType name="DateTimeType">
        <xs:union memberTypes="DateTimeTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="DateTimeTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Message"/>
            <xs:enumeration value="Activation"/>
            <xs:enumeration value="ActualStart"/>
            <xs:enumeration value="AvailableForSale"/>
            <xs:enumeration value="BestBefore"/>
            <xs:enumeration value="Birth"/>
            <xs:enumeration value="Business"/>
            <xs:enumeration value="Cancel"/>
            <xs:enumeration value="Current"/>
            <xs:enumeration value="CutBy"/>
            <xs:enumeration value="Dispatch"/>
            <xs:enumeration value="Effective"/>
            <xs:enumeration value="End"/>
            <xs:enumeration value="EnterFreezer"/>
            <xs:enumeration value="ExpectedDue"/>
            <xs:enumeration value="ExpectedStart"/>
            <xs:enumeration value="Expiration"/>
            <xs:enumeration value="GiftReceiptRefundExpiry"/>
            <xs:enumeration value="Historical"/>
            <xs:enumeration value="Kill"/>
            <xs:enumeration value="Pack"/>
            <xs:enumeration value="Packaging"/>
            <xs:enumeration value="PlanogramResetDue"/>
            <xs:enumeration value="Production"/>
            <xs:enumeration value="Receipt"/>
            <xs:enumeration value="RefundExpiry"/>
            <xs:enumeration value="SellBy"/>
            <xs:enumeration value="Slaughter"/>
            <xs:enumeration value="Start"/>
            <xs:enumeration value="StoreAvailableToTakeOrders"/>
            <xs:enumeration value="Transaction"/>
            <xs:enumeration value="UseBy"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="DateTimeCommonData">
        <xs:simpleContent>
            <xs:extension base="xs:dateTime">
                <xs:attribute default="Message" form="unqualified" name="TypeCode"
                    type="DateTimeType" use="optional">
                    <xs:annotation>
                        <xs:documentation>Identifies what kind of time to which this is referring.
                            such as birth, available to sell, business, etc.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute form="unqualified" name="Offset" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Gets the local time's offset from Coordinated Universal
                            Time (UTC), For example "+0.3.00"</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!--      Used to indicate the status of the authorization in case the network goes down in the middle of a transaction   -->
    <xs:simpleType name="OnlineAuthorizationStatusTypeCode">
        <xs:union memberTypes="OnlineAuthorizationStatusEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="OnlineAuthorizationStatusEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Online">
                <xs:annotation>
                    <xs:documentation>Occurs when the payment system is online for the entire
                        transaction</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Offline">
                <xs:annotation>
                    <xs:documentation>Occurs when the payment system is offline for the entire
                        transaction</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PartialOnline">
                <xs:annotation>
                    <xs:documentation>Occurs when the payment system goes offline during the
                        transaction.  That is part of the transaction gets pre-authorized but the
                        payment system goes offline before the transaction is
                        completed.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
        <!--
	 Online Status Types Enumeration
			    -->
    </xs:simpleType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!--  Major Version 6.0.0 2010/12/30
	- Split POSLog into components
	- Updated Receipt Number to have type code to expand it beyond a number to include bar codes, etc.
	 - Added Website to BusinessUnitComplexType -->
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <xs:complexType name="ChannelCommonData">
        <xs:sequence>
            <xs:element form="qualified" name="ChannelID" type="ChannelIDType"/>
            <xs:element form="qualified" name="TouchPointID" type="TouchPointIDType"/>
        </xs:sequence>
        <xs:attribute form="unqualified" name="CommunicationModeTypeCode"
            type="CommuicationModeTypeCode">
            <xs:annotation>
                <xs:documentation>Indicates the nature of communication that happens in the channel.
                    Valid values are:  SYNCHRONOUS   - two way like phone conversation ASYNCHRONOUS
                    - one or two way like email</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="ContentOriginTypeCode" type="ContentOriginTypeCode">
            <xs:annotation>
                <xs:documentation>Source of the creative content presented using the media.  Valid
                    values include:  3RD_PTY - created by ad agency or other external party
                    OWNED_MEDIA - created by retailer or product supplier USER_GENERATED - created
                    by customers, prospects, ex customers outside the organization with no editorial
                    control.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="OnLineOffLineTypeCode" type="OnlineOfflineTypeCode">
            <xs:annotation>
                <xs:documentation>Code that indicates if the media is ONLINE (internet based) or
                    OFFLINE (non-internet based).</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="TargetingTypeCode" type="TargetedTypeCode">
            <xs:annotation>
                <xs:documentation>A code that designates how the media is targeted. Valid values
                    include: MASS - broadcast one way TARGETED - Intended for a specifically defined
                    audience</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="ChannelIDType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="Description" type="xs:string"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="TouchPointIDType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="ManagedTypeCode"/>
                <xs:attribute form="unqualified" name="PhysicalDigitalCode"/>
                <xs:attribute form="unqualified" name="Name" type="xs:string"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="OnlineOfflineTypeCode">
        <xs:union memberTypes="OnlineOfflineTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="OnlineOfflineTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="OnLine"/>
            <xs:enumeration value="OffLine"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="ContentOriginTypeCode">
        <xs:union memberTypes="ContentOriginTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="ContentOriginTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="3rdParty"/>
            <xs:enumeration value="OwnedMedia"/>
            <xs:enumeration value="UserGenerated"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="CommuicationModeTypeCode">
        <xs:union memberTypes="CommuicationModeTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="CommuicationModeTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Synchronous"/>
            <xs:enumeration value="Asynchronous"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="TargetedTypeCode">
        <xs:union memberTypes="TargetedTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="TargetedTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Mass"/>
            <xs:enumeration value="Targeted"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="ManagedTypeCode">
        <xs:union memberTypes="ManagedTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="ManagedTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Retailer"/>
            <xs:enumeration value="NotRetailer"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="PhysicalDigitalCodeTypeCode">
        <xs:union memberTypes="PhysicalDigitalCodeTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="PhysicalDigitalCodeTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Physical"/>
            <xs:enumeration value="Digital"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
		Enumerated type for Horizontal Alignment Type attribute
	-->
    <xs:simpleType name="HorizontalImageAlignmentTypeCode">
        <xs:union memberTypes="HorizontalImageAlignmentTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="HorizontalImageAlignmentTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Left"/>
            <xs:enumeration value="Center"/>
            <xs:enumeration value="Right"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
		Enumerated type for Mapping Mode Type attribute
	-->
    <xs:simpleType name="MapModeTypeCode">
        <xs:union memberTypes="MapModeTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="MapModeTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="DOTS"/>
            <xs:enumeration value="TWIPS"/>
            <xs:enumeration value="ENGLISH"/>
            <xs:enumeration value="METRIC"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
		Enumerated type for Vertical ImageAlignmentType attribute
	-->
    <xs:simpleType name="VerticalImageAlignmentTypeCode">
        <xs:union memberTypes="VerticalImageAlignmentTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="VerticalImageAlignmentTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Top"/>
            <xs:enumeration value="Center"/>
            <xs:enumeration value="Bottom"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:attributeGroup name="ImageAttributeGroup">
        <xs:annotation>
            <xs:documentation>Group of attributes describing the characteristics of a particular
                image</xs:documentation>
        </xs:annotation>
        <xs:attribute form="unqualified" name="Height" type="DecimalCommonData"/>
        <xs:attribute form="unqualified" name="Width" type="DecimalCommonData"/>
        <xs:attribute form="unqualified" name="MappingMode" type="MapModeTypeCode"/>
        <xs:attribute form="unqualified" name="HorizontalAlignment"
            type="HorizontalImageAlignmentTypeCode"/>
        <xs:attribute form="unqualified" name="VerticalAlignment"
            type="VerticalImageAlignmentTypeCode"/>
    </xs:attributeGroup>
    <!-- 
		Address Types 
	-->
    <xs:simpleType name="AddressTypeCode">
        <xs:union memberTypes="AddressTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="AddressTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Home"/>
            <xs:enumeration value="Work"/>
            <xs:enumeration value="Delivery"/>
            <xs:enumeration value="Pickup"/>
            <xs:enumeration value="Billing"/>
            <xs:enumeration value="RetailStore"/>
            <xs:enumeration value="Warehouse"/>
            <xs:enumeration value="Administration"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- 
		Address locations 
	-->
    <xs:simpleType name="AddressLocationCode">
        <xs:union memberTypes="AddressLocationCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="AddressLocationCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Permanent"/>
            <xs:enumeration value="Winter"/>
            <xs:enumeration value="Summer"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
		Enumerated type for Address Line Type attribute
	-->
    <xs:simpleType name="AddressLineTypeCode">
        <xs:union memberTypes="AddressLineTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="AddressLineTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Street"/>
            <xs:enumeration value="RuralRoute"/>
            <xs:enumeration value="POBox"/>
            <xs:enumeration value="Unit"/>
            <xs:enumeration value="Apartment"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- 
		Territory 
	-->
    <xs:simpleType name="TerritoryTypeCode">
        <xs:union memberTypes="TerritoryTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="TerritoryTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="State"/>
            <xs:enumeration value="Province"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="AddressCommonData">
        <xs:sequence>
            <xs:element default="Home" form="qualified" maxOccurs="unbounded" minOccurs="0"
                name="TypeCode" type="AddressTypeCode">
                <xs:annotation>
                    <xs:documentation>defines the use of the address: home, business, billing, etc.
                        Allows for one address to satisfy multiple uses.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" name="AddressLine">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute default="Street" form="unqualified" name="TypeCode"
                                type="AddressLineTypeCode" use="optional">
                                <xs:annotation>
                                    <xs:documentation> describes the type of
                                        address</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute form="unqualified" name="RelativeOrder" type="xs:integer"
                                use="optional"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="City" type="xs:string"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Territory">
                <xs:annotation>
                    <xs:documentation>A state, provice, or other region within a
                        country</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute form="unqualified" name="TypeCode"
                                type="TerritoryTypeCode"/>
                            <xs:attribute form="unqualified" name="RelativeOrder" type="xs:integer"
                                use="optional"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PostalCode" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A code assigned by the postal authority and used for mail
                        delivery</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Country">
                <xs:annotation>
                    <xs:documentation>The name of a country or territory</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute form="unqualified" name="Code" type="CountryCode"
                                use="optional"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PostalCodeExtension" type="xs:string"/>
        </xs:sequence>
        <xs:attribute default="true" form="unqualified" name="PrimaryFlag" type="xs:boolean"
            use="optional"/>
        <xs:attribute default="Permanent" form="unqualified" name="AddressLocationType"
            type="AddressLocationCode" use="optional"/>
        <xs:attribute form="unqualified" name="AddressType" type="AddressTypeCode"/>
    </xs:complexType>
    <xs:complexType name="GeoPhysicalLocationCommonData">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Address">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="AddressCommonData"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="CrossStreetName"
                type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="Coordinates" type="CoordinatesType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="CoordinatesType">
        <xs:annotation>
            <xs:documentation>Identifys every location on the earth specified by the three
                coordinates of a spherical coordinate system aligned with the spin axis of the
                Earth</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" name="Latitude" type="LatLongType">
                <xs:annotation>
                    <xs:documentation>the angle at the centre of the coordinate system between any
                        point on the earth's surface and the plane of the equator. Lines joining
                        points of the same latitude are called parallels, and they trace concentric
                        circles on the surface of the earth. Each pole is 90 degrees: the north pole
                        90° N; the south pole 90° S. The 0° parallel of latitude is designated the
                        equator, an imaginary line that divides the globe into the Northern and
                        Southern Hemispheres </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="Longitude" type="LatLongType">
                <xs:annotation>
                    <xs:documentation>the angle east or west, at the centre of the coordinate
                        system, between any point on the earth's surface and the plane of an
                        arbitrary north-south line between the two geographical poles. Lines joining
                        points of the same longitude are called meridians. All meridians are halves
                        of great circles, and are not parallel: by definition they converge at the
                        north and south poles. The line passing through the (former) Royal
                        Observatory, Greenwich (near London in the UK) is the international
                        zero-longitude reference line, the Prime Meridian. The antipodal meridian of
                        Greenwich is both 180°W and 180°E.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute form="unqualified" name="CoordinateSystem" type="CoordinateSystemTypeCode">
            <xs:annotation>
                <xs:documentation>geographic coordinate system enables every location on the earth
                    to be specified by the three coordinates of a spherical coordinate system
                    aligned with the spin axis of the Earth</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <!-- Coordinate System Type Code-->
    <xs:simpleType name="CoordinateSystemTypeCode">
        <xs:union memberTypes="CoordinateSystemTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="CoordinateSystemTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Mercator"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="LatLongType">
        <xs:sequence>
            <xs:element form="qualified" name="Degrees" type="xs:int">
                <xs:annotation>
                    <xs:documentation>The degrees of longitude of a set of coordinates that is used
                        to identify a physical location.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="Minutes" type="xs:int">
                <xs:annotation>
                    <xs:documentation>The minutes of longitude of a set of coordinates that is used
                        to identify a physical location.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="Seconds" type="xs:integer">
                <xs:annotation>
                    <xs:documentation>The seconds of longitude of a set of coordinates that is used
                        to identify a physical location.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="Direction" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The direction of latitude of a set of coordinates that is used
                        to identify a physical location.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="LogoCommonData">
        <xs:choice>
            <xs:element form="qualified" name="FileName" type="xs:string"/>
            <xs:element form="qualified" name="LogoBinary" type="xs:base64Binary"/>
        </xs:choice>
        <xs:attribute form="unqualified" name="LogoFormat" type="LogoFormatTypeCode" use="optional">
            <xs:annotation>
                <xs:documentation>pdf, eps, Illustrator vs. Photoshop (State which
                    one)</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <!-- 
		Date Time Enumeration
	-->
    <xs:simpleType name="LogoFormatTypeCode">
        <xs:union memberTypes="LogoFormatTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="LogoFormatTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="EPS"/>
            <xs:enumeration value="PDF"/>
            <xs:enumeration value="TIF"/>
            <xs:enumeration value="BMP"/>
            <xs:enumeration value="GIF"/>
            <xs:enumeration value="JPG"/>
        </xs:restriction>
    </xs:simpleType>
    <!--Transaction Type Codes
	-->
    <xs:simpleType name="TransactionType">
        <xs:union memberTypes="TransactionTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="TransactionTypeEnumeration">
        <xs:restriction base="xs:string">
            <xs:enumeration value="SaleTransaction"/>
            <xs:enumeration value="ReturnTransaction"/>
            <xs:enumeration value="ExchangeTransaction"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--      Base Schemas            -->
    <!-- ============================ -->
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--      Base Schemas            -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--      Derived Schemas         -->
    <!-- ============================ -->
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!--       Enumerated type for Transaction Status attribute
Cancel - designates a transaction line or entire transaction that was reversed PRIOR to the tender of a transaction.
PostVoid - A non sales transaction that cancels a prior transaction during the same day. 
Void - This status designates a transaction line or entire transaction that was reversed as part of a tendered transaction, that is, it is being voided in its entirety, or it designates a transaction line that was reversed after the transaction was committed 
    -->
    <xs:simpleType name="TransactionStatusTypeCode">
        <xs:union memberTypes="TransactionStatusEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="TransactionStatusEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Authorized"/>
            <xs:enumeration value="Canceled"/>
            <xs:enumeration value="Delivered"/>
            <xs:enumeration value="Failed"/>
            <xs:enumeration value="Finished"/>
            <xs:enumeration value="InComplete">
                <xs:annotation>
                    <xs:documentation>This transaction was not fully completed.  For example the
                        customer drove off and forgot to pay for the fueling
                        component</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="InProcess"/>
            <xs:enumeration value="OutForDelivery"/>
            <xs:enumeration value="Packed"/>
            <xs:enumeration value="PartialDelivery"/>
            <xs:enumeration value="PartialShip"/>
            <xs:enumeration value="Picked"/>
            <xs:enumeration value="PostVoided"/>
            <xs:enumeration value="Projection"/>
            <xs:enumeration value="Replaced"/>
            <xs:enumeration value="Resumed"/>
            <xs:enumeration value="Returned"/>
            <xs:enumeration value="Revision"/>
            <xs:enumeration value="Shipped"/>
            <xs:enumeration value="Subtotal"/>
            <xs:enumeration value="Suspended"/>
            <xs:enumeration value="SuspendedDeleted"/>
            <xs:enumeration value="SuspendedRetrieved"/>
            <xs:enumeration value="Tendered"/>
            <xs:enumeration value="TransactionVoided"/>
            <xs:enumeration value="Totaled"/>
            <xs:enumeration value="Voided"/>
            <xs:enumeration value="Waste"/>
            <xs:enumeration value="Unknown"/>
            <xs:enumeration value="Updated"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!--
		Enumerated type for Customer Action Type attribute
	-->
    <xs:simpleType name="CustomerActionType">
        <xs:union memberTypes="CustomerActionEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="CustomerActionEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Add"/>
            <xs:enumeration value="Remove"/>
            <xs:enumeration value="Delete"/>
            <xs:enumeration value="Update"/>
            <xs:enumeration value="Create"/>
            <xs:enumeration value="Read"/>
            <xs:enumeration value="Report"/>
            <xs:enumeration value="Inactivate"/>
            <xs:enumeration value="Merge"/>
            <xs:enumeration value="Lookup"/>
            <xs:enumeration value="Purchase"/>
            <xs:enumeration value="Authenticate"/>
            <xs:enumeration value="GetAffiliations"/>
            <xs:enumeration value="ValidateSerializedOffer"/>
            <xs:enumeration value="RecordCustomerPurchase"/>
            <xs:enumeration value="CheckForSuggestion"/>
            <xs:enumeration value="CheckForTargetedOffer"/>
            <xs:enumeration value="PointInquiry"/>
            <xs:enumeration value="PointsRedemption"/>
            <xs:enumeration value="PointsRedemptionReversal"/>
            <xs:enumeration value="PointsEarningsReversal"/>
            <xs:enumeration value="PointsAdjustment"/>
            <xs:enumeration value="FeeInquiry"/>
            <xs:enumeration value="Enroll"/>
            <xs:enumeration value="EnrollmentQuery"/>
            <xs:enumeration value="EnrollmentCancel"/>
            <xs:enumeration value="SubscribeToCampaign"/>
            <xs:enumeration value="UnsubscribeFromCampaign"/>
            <xs:enumeration value="CouponRedemptionUpload"/>
            <xs:enumeration value="IncrementQualifiedCounter"/>
            <xs:enumeration value="LookupQualification"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <xs:complexType name="TaxGroupIDCommonData">
        <xs:annotation>
            <xs:documentation>A unique retailer assigned identifier for the Tax
                Group</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="Name" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The name of the tax group.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================ -->
    <!--                      TAX  Certificate         -->
    <!--  ============================ -->
    <xs:complexType name="TaxCertificateCommonData">
        <xs:annotation>
            <xs:documentation>A document that certifies that a Customer holds a special tax status
                that may exempt or reduce the amount of tax that is withheld by a
                Seller.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Number" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The certificate number assigned to a purchaser by a Tax
                        Authority exempting the purchaser from tax in that
                        authority.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="HolderName" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name of the individual or organization that holds the tax
                        exemption certificate.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="FormNumber" type="xs:string">
                <xs:annotation>
                    <xs:documentation>An identifier of the form for the
                        Certificate</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="JurisdictionID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The Jurisdiction in which the Certificate
                        applies</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="IssueDate" type="xs:date">
                <xs:annotation>
                    <xs:documentation>The date that the Certificate was issued to the
                        holde</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ExpirationDate" type="xs:date">
                <xs:annotation>
                    <xs:documentation>The date that the Certificate expires.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="TaxGroupID"
                type="TaxGroupIDCommonData">
                <xs:annotation>
                    <xs:documentation>A unique retailer assigned identifier for the Tax
                        Group</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute form="unqualified" name="TypeCode" type="TaxCertificateTypeCode"/>
    </xs:complexType>
    <xs:simpleType name="TaxCertificateTypeCode">
        <xs:union memberTypes="TaxCertificateTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="TaxCertificateTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Exemption"/>
            <xs:enumeration value="DirectPayPermit"/>
            <xs:enumeration value="ZeroRate"/>
            <xs:enumeration value="NetExporter"/>
            <xs:enumeration value="ReverseCharge"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!-- -->
    <xs:simpleType name="TaxJurisdictionTypeCode">
        <xs:union memberTypes="TaxJurisdictionTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="TaxJurisdictionTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="EconomicCommunity"/>
            <xs:enumeration value="Country"/>
            <xs:enumeration value="State"/>
            <xs:enumeration value="Province"/>
            <xs:enumeration value="County"/>
            <xs:enumeration value="City"/>
            <xs:enumeration value="District"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- -->
    <xs:simpleType name="TaxRegistrationTypeCode">
        <xs:union memberTypes="TaxRegistrationTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="TaxRegistrationTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="VATRegistration"/>
            <xs:enumeration value="FederalEmployerIdentificationNumber"/>
            <xs:enumeration value="TaxIdentifierNumber"/>
            <xs:enumeration value="SocialSecurityNumber"/>
            <xs:enumeration value="BusinessNumber"/>
            <xs:enumeration value="StateIdentificationNumber"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
		Version 1.1.0 - 20081031
		- Added Use Tax

		Version 1.0.0
		Enumerated type for Tax Type attribute
	-->
    <xs:simpleType name="TaxTypeCode">
        <xs:union memberTypes="TaxTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="TaxTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Sales"/>
            <xs:enumeration value="VAT"/>
            <xs:enumeration value="GST"/>
            <xs:enumeration value="PST"/>
            <xs:enumeration value="HST"/>
            <xs:enumeration value="Excise"/>
            <xs:enumeration value="UseTax"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="TaxRegistrationType">
        <xs:annotation>
            <xs:documentation>A Tax Registration identifies the registration of a party as a
                taxpayer within a particular taxing jurisdiction</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Number" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The certificate number assigned to a purchaser by a Tax
                        Authority exempting the purchaser from tax in that
                        authority.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                name="RegistrationAsName" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name of the individual or organization under which the
                        registration is known</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Jurisdiction"
                type="TaxJurisdictionType">
                <xs:annotation>
                    <xs:documentation>Set of Tax Jurisdictions for which the Tax Registration
                        applies</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute form="unqualified" name="TypeCode" type="TaxRegistrationTypeCode"/>
        <xs:attribute form="unqualified" name="TaxType" type="TaxTypeCode"/>
    </xs:complexType>
    <xs:complexType name="TaxJurisdictionType">
        <xs:annotation>
            <xs:documentation>A Tax Jurisdiction is a geographical area within which a Tax Authority
                imposes taxes</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="JurisdictionID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A unique identifier of a Tax Jurisdiction</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="JurisdictionCode" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A standard code that identifies a Tax
                        Jurisdiction</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A name that identifies a Tax Jurisdiction</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute form="unqualified" name="TypeCode" type="TaxJurisdictionTypeCode">
            <xs:annotation>
                <xs:documentation>A code that identifies the type of Tax
                    Jurisdiction</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <!--
		Name part locations types
	-->
    <xs:simpleType name="LocationTypeCode">
        <xs:union memberTypes="LocationTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="LocationTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="First"/>
            <xs:enumeration value="Middle"/>
            <xs:enumeration value="Last"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
		Name part types
	-->
    <xs:simpleType name="NameTypeCode">
        <xs:union memberTypes="NameTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="NameTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="GivenName"/>
            <xs:enumeration value="OtherGivenName"/>
            <xs:enumeration value="FamilyName"/>
            <xs:enumeration value="Patronymic"/>
            <xs:enumeration value="Nickname"/>
            <xs:enumeration value="Alias"/>
            <xs:enumeration value="Initial"/>
            <xs:enumeration value="PreferredName"/>
            <xs:enumeration value="Prefecture"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="NameCommonData">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Salutation">
                <xs:annotation>
                    <xs:documentation>Extra words that don't form part of the person's name but are
                        normally printed before the FirstName as a courtesy title. For instance, Mr.
                        Ms., Miss, Dr., Prof. etc.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute form="unqualified" name="RelativeOrder" type="xs:integer"
                                use="optional"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Name">
                <xs:annotation>
                    <xs:documentation>The individual parts of the name</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute form="unqualified" name="Location" type="LocationTypeCode"/>
                            <xs:attribute form="unqualified" name="TypeCode" type="NameTypeCode"/>
                            <xs:attribute form="unqualified" name="RelativeOrder" type="xs:integer"
                                use="optional"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Suffix">
                <xs:annotation>
                    <xs:documentation>Extra words that don't form part of the person's name but are
                        normally printed after the LastName to help identify the person. Example
                        values include, Sr, Jr, III</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute form="unqualified" name="RelativeOrder" type="xs:integer"
                                use="optional"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="SortingName" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A culturally sensitive version of the person's name that is
                        used when producing a sorted list of names. Examples: Jones, W S, McGrigor,
                        S F, Tryggvi, T</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="MailingName" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A culturally sensitive version of the person's name that is
                        used when contacting them Examples: Bill Jones, Stuey McGrigor, Trygvi
                        Thordarson</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="OfficialName" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A culturally sensitive version of the person's name that is
                        used for all legal documents. Examples: William Stephen Jones, Stuart Fergus
                        McGrigor, Tryggvi Magnus Thordarson</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="WorkerCommonData">
        <xs:sequence>
            <xs:element form="qualified" name="WorkerID" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="Name">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="NameCommonData"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- Minor Version 1.5.0 2010/12/31
	- Added Website
	- Added ContactPreference
-->
    <!-- 
		Gender 
	-->
    <xs:simpleType name="GenderTypeCode">
        <xs:union memberTypes="GenderTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="GenderTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Male"/>
            <xs:enumeration value="Female"/>
            <xs:enumeration value="Boy"/>
            <xs:enumeration value="Girl"/>
            <xs:enumeration value="Men"/>
            <xs:enumeration value="Women"/>
            <xs:enumeration value="Unisex"/>
            <xs:enumeration value="Unknown"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="CustomerDemographicCommonData">
        <xs:sequence>
            <xs:element form="qualified" name="DemographicID" type="xs:string"/>
            <xs:element form="qualified" name="DemographicName" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="IDDemographicDataPairCommonData">
        <xs:sequence>
            <xs:element form="qualified" name="CustomerID" type="xs:string"/>
            <xs:element form="qualified" name="CustomerDemographic"
                type="CustomerDemographicCommonData"/>
        </xs:sequence>
    </xs:complexType>
    <!-- 
		Telephone locations 
	-->
    <xs:simpleType name="TelephoneTypeCode">
        <xs:union memberTypes="TelephoneTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="TelephoneTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Home"/>
            <xs:enumeration value="Home2"/>
            <xs:enumeration value="Mobile"/>
            <xs:enumeration value="Work"/>
            <xs:enumeration value="Work2"/>
            <xs:enumeration value="WorkFax"/>
            <xs:enumeration value="HomeFax"/>
            <xs:enumeration value="Pager"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="TelephoneCommonData">
        <xs:annotation>
            <xs:documentation>Approved - Telephone Common Data May be home, cell, business, fax,
                pager, … (Repeatable)</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="AreaCode" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A code that identifies a geographic grouping of telephone
                        numbers within the US and Canada</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="LocalNumber" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="ExtensionNumber" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Addtional numbers required to reach a person, extension, or
                        voice mailbox</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ITUCountryCode" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A code assigned by the ITU representing a country or other
                        region International Telephone Unit</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute default="true" form="unqualified" name="PrimaryFlag" type="xs:boolean"
            use="optional">
            <xs:annotation>
                <xs:documentation>Indicates this is the primary phone number</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute default="Home" form="unqualified" name="TypeCode" type="TelephoneTypeCode"
            use="optional">
            <xs:annotation>
                <xs:documentation>A category or telephone (number) types (cell, fax, voice,
                    etc.)Enumeration - Mobile, Office, Home, Fax</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <!-- 
		email type codes 
	-->
    <xs:simpleType name="EMailTypeCode">
        <xs:union memberTypes="EMailTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="EMailTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Home"/>
            <xs:enumeration value="Work"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="EMailCommonData">
        <xs:sequence>
            <xs:element form="qualified" name="EMailAddress" type="xs:string">
                <xs:annotation>
                    <xs:documentation>An electronic address for sending messages</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute default="true" form="unqualified" name="PrimaryFlag" type="xs:boolean"
            use="optional">
            <xs:annotation>
                <xs:documentation>Indicates this is the primary email contact</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute default="Home" form="unqualified" name="TypeCode" type="EMailTypeCode"
            use="optional"/>
    </xs:complexType>
    <xs:complexType name="CustomerCommonData">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="CustomerID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A unique identifier for a customer.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Name">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="NameCommonData"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Address">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="AddressCommonData"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TelephoneNumber">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="TelephoneCommonData"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="EMail">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="EMailCommonData"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Website"
                type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="PrivacyOptOut" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Typically eMail, Phone, Mail</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="BirthDayMonth" type="xs:gMonthDay"/>
            <xs:element form="qualified" minOccurs="0" name="BirthYear" type="xs:gYear"/>
        </xs:sequence>
        <xs:attribute default="Male" form="unqualified" name="Gender" type="GenderTypeCode"
            use="optional"/>
        <xs:attribute form="unqualified" name="ContactPreference" type="ContactPreferenceTypeCode"
            use="optional"/>
    </xs:complexType>
    <!-- Contact Preference -->
    <xs:simpleType name="ContactPreferenceTypeCode">
        <xs:union memberTypes="ContactPreferenceTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="ContactPreferenceTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Phone"/>
            <xs:enumeration value="E-mail"/>
            <xs:enumeration value="Mail"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="CustomerBase">
        <xs:complexContent>
            <xs:extension base="CustomerCommonData"/>
        </xs:complexContent>
    </xs:complexType>
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="CustomerDomainSpecific">
        <xs:complexContent>
            <xs:extension base="CustomerBase">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="SequenceNumber"
                        type="SequenceNumberType"/>
                    <xs:element form="qualified" minOccurs="0" name="BeginDateTime"
                        type="DateTimeCommonData"/>
                    <xs:element form="qualified" minOccurs="0" name="EndDateTime"
                        type="DateTimeCommonData"/>
                    <xs:element form="qualified" minOccurs="0" name="CustomerDemographic"
                        type="CustomerDemographicCommonData"/>
                    <xs:element form="qualified" minOccurs="0"
                        name="IDDemographicDataPairCommonData"
                        type="IDDemographicDataPairCommonData"/>
                    <xs:element form="qualified" minOccurs="0" name="Worker">
                        <xs:complexType>
                            <xs:complexContent>
                                <xs:extension base="WorkerCommonData"/>
                            </xs:complexContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="CustomerName">
                        <xs:complexType>
                            <xs:complexContent>
                                <xs:extension base="NameCommonData"/>
                            </xs:complexContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="AffiliatedOrganization">
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="BusinessUnitCommonData"/>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="LocalRequirements" type="RetailTransactionLocalRequirements"/>
                    <xs:element form="qualified" minOccurs="0" name="Age" type="xs:decimal">
                        <xs:annotation>
                            <xs:documentation>The current actual or estimated age of the
                                customer</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="Map" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Bitmap image of a map to the Addess</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="Note" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>General all-purpose note about the
                                Customer</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="Gender" type="xs:string"/>
                    <xs:element form="qualified" minOccurs="0" name="AccountNumber" type="xs:string"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Privacy"
                        type="CustomerPrivacyType">
                        <xs:annotation>
                            <xs:documentation>Identifies the contact method through which the
                                customer does not want to be contacted</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="Locale" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>A code denoting where the Customer is
                                located</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="TaxCertificate" type="TaxCertificateCommonData">
                        <xs:annotation>
                            <xs:documentation>A document that certifies that a Customer holds a
                                special tax status that may exempt or reduce the amount of tax that
                                is withheld by a Seller.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="TaxRegistration" type="TaxRegistrationType">
                        <xs:annotation>
                            <xs:documentation>A Tax Registration identifies the registration of a
                                party as a taxpayer within a particular taxing
                                jurisdiction</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="TaxExemptionReason"
                        type="xs:string">
                        <xs:annotation>
                            <xs:documentation>A code denoting why the Customer is granted a Tax
                                Exemption</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
                        processContents="lax"/>
                    <!-- Customer Account Number -->
                </xs:sequence>
                <xs:attribute default="Read" form="unqualified" name="Action"
                    type="CustomerActionType" use="optional"/>
                <xs:attribute default="false" form="unqualified" name="BusinessCustomerFlag"
                    type="xs:boolean" use="optional">
                    <xs:annotation>
                        <xs:documentation>Indicates this customer is a business</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute form="unqualified" name="EntryMethod" type="EntryMethodTypeCode">
                    <xs:annotation>
                        <xs:documentation>The method by which the customer information was input,
                            scanned, keyed, ...</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute form="unqualified" name="CancelFlag" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Indicates this customer content was removed prior to
                            tendering - delivering</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--  -->
    <xs:complexType name="RetailTransactionLocalRequirements">
        <xs:sequence>
            <xs:element form="qualified" name="Name" type="xs:string"/>
            <xs:element form="qualified" name="Value" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <!--
		Complex & Enumerated types defining Customer Privacy
	-->
    <xs:simpleType name="CustomerPrivacyType">
        <xs:union memberTypes="CustomerPrivacyTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="CustomerPrivacyTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="eMail"/>
            <xs:enumeration value="Phone"/>
            <xs:enumeration value="Mail"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--             Library Schemas              -->
    <!-- ============================ -->
    <!--
		Enumerated type for  CommonData Language attribute
	-->
    <xs:simpleType name="LanguageCode">
        <xs:union memberTypes="LanguageCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="LanguageCodeEnumeration">
        <xs:annotation>
            <xs:documentation>derived from ISO-639-2 language codes</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="aar">
                <xs:annotation>
                    <xs:documentation>Afar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="abk">
                <xs:annotation>
                    <xs:documentation>Abkhazian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ace">
                <xs:annotation>
                    <xs:documentation>Achinese</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ach">
                <xs:annotation>
                    <xs:documentation>Acoli</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ada">
                <xs:annotation>
                    <xs:documentation>Adangme</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="afa">
                <xs:annotation>
                    <xs:documentation>Afro-Asiatic (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="afh">
                <xs:annotation>
                    <xs:documentation>Afrihili</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="afr">
                <xs:annotation>
                    <xs:documentation>Afrikaans</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="aka">
                <xs:annotation>
                    <xs:documentation>Akan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="akk">
                <xs:annotation>
                    <xs:documentation>Akkadian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="alb">
                <xs:annotation>
                    <xs:documentation>Albanian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ale">
                <xs:annotation>
                    <xs:documentation>Aleut</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="alg">
                <xs:annotation>
                    <xs:documentation>Algonquian languages</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="amh">
                <xs:annotation>
                    <xs:documentation>Amharic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ang">
                <xs:annotation>
                    <xs:documentation>English, Old (ca.450-1100)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="apa">
                <xs:annotation>
                    <xs:documentation>Apache languages</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ara">
                <xs:annotation>
                    <xs:documentation>Arabic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="arc">
                <xs:annotation>
                    <xs:documentation>Aramaic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="arm">
                <xs:annotation>
                    <xs:documentation>Armenian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="arn">
                <xs:annotation>
                    <xs:documentation>Araucanian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="arp">
                <xs:annotation>
                    <xs:documentation>Arapaho</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="art">
                <xs:annotation>
                    <xs:documentation>Artificial (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="arw">
                <xs:annotation>
                    <xs:documentation>Arawak</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="asm">
                <xs:annotation>
                    <xs:documentation>Assamese</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ath">
                <xs:annotation>
                    <xs:documentation>Athapascan languages</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="aus">
                <xs:annotation>
                    <xs:documentation>Australian languages</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ava">
                <xs:annotation>
                    <xs:documentation>Avaric</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ave">
                <xs:annotation>
                    <xs:documentation>Avestan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="awa">
                <xs:annotation>
                    <xs:documentation>Awadhi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="aym">
                <xs:annotation>
                    <xs:documentation>Aymara</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="aze">
                <xs:annotation>
                    <xs:documentation>Azerbaijani</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bad">
                <xs:annotation>
                    <xs:documentation>Banda</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bai">
                <xs:annotation>
                    <xs:documentation>Bamileke languages</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bak">
                <xs:annotation>
                    <xs:documentation>Bashkir</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bal">
                <xs:annotation>
                    <xs:documentation>Baluchi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bam">
                <xs:annotation>
                    <xs:documentation>Bambara</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ban">
                <xs:annotation>
                    <xs:documentation>Balinese</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="baq">
                <xs:annotation>
                    <xs:documentation>Basque</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bas">
                <xs:annotation>
                    <xs:documentation>Basa</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bat">
                <xs:annotation>
                    <xs:documentation>Baltic (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bej">
                <xs:annotation>
                    <xs:documentation>Beja</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bel">
                <xs:annotation>
                    <xs:documentation>Belarusian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bem">
                <xs:annotation>
                    <xs:documentation>Bemba</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ben">
                <xs:annotation>
                    <xs:documentation>Bengali</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ber">
                <xs:annotation>
                    <xs:documentation>Berber (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bho">
                <xs:annotation>
                    <xs:documentation>Bhojpuri</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bih">
                <xs:annotation>
                    <xs:documentation>Bihari</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bik">
                <xs:annotation>
                    <xs:documentation>Bikol</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bin">
                <xs:annotation>
                    <xs:documentation>Bini</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bis">
                <xs:annotation>
                    <xs:documentation>Bislama</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bla">
                <xs:annotation>
                    <xs:documentation>Siksika</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bnt">
                <xs:annotation>
                    <xs:documentation>Bantu (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bod">
                <xs:annotation>
                    <xs:documentation>Tibetan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bos">
                <xs:annotation>
                    <xs:documentation>Bosnian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bra">
                <xs:annotation>
                    <xs:documentation>Braj</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bre">
                <xs:annotation>
                    <xs:documentation>Breton</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="btk">
                <xs:annotation>
                    <xs:documentation>Batak (Indonesia)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bua">
                <xs:annotation>
                    <xs:documentation>Buriat</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bug">
                <xs:annotation>
                    <xs:documentation>Buginese</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bul">
                <xs:annotation>
                    <xs:documentation>Bulgarian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bur">
                <xs:annotation>
                    <xs:documentation>Burmese</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="cad">
                <xs:annotation>
                    <xs:documentation>Caddo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="cai">
                <xs:annotation>
                    <xs:documentation>Central American Indian (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="car">
                <xs:annotation>
                    <xs:documentation>Carib</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="cat">
                <xs:annotation>
                    <xs:documentation>Catalan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="cau">
                <xs:annotation>
                    <xs:documentation>Caucasian (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ceb">
                <xs:annotation>
                    <xs:documentation>Cebuano</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="cel">
                <xs:annotation>
                    <xs:documentation>Celtic (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ces">
                <xs:annotation>
                    <xs:documentation>Czech</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="cha">
                <xs:annotation>
                    <xs:documentation>Chamorro</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="chb">
                <xs:annotation>
                    <xs:documentation>Chibcha</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="che">
                <xs:annotation>
                    <xs:documentation>Chechen</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="chg">
                <xs:annotation>
                    <xs:documentation>Chagatai</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="chi">
                <xs:annotation>
                    <xs:documentation>Chinese</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="chk">
                <xs:annotation>
                    <xs:documentation>Chuukese</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="chm">
                <xs:annotation>
                    <xs:documentation>Mari</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="chn">
                <xs:annotation>
                    <xs:documentation>Chinook jargon</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="cho">
                <xs:annotation>
                    <xs:documentation>Choctaw</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="chp">
                <xs:annotation>
                    <xs:documentation>Chipewyan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="chr">
                <xs:annotation>
                    <xs:documentation>Cherokee</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="chu">
                <xs:annotation>
                    <xs:documentation>Church Slavic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="chv">
                <xs:annotation>
                    <xs:documentation>Chuvash</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="chy">
                <xs:annotation>
                    <xs:documentation>Cheyenne</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="cmc">
                <xs:annotation>
                    <xs:documentation>Chamic languages</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="cop">
                <xs:annotation>
                    <xs:documentation>Coptic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="cor">
                <xs:annotation>
                    <xs:documentation>Cornish</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="cos">
                <xs:annotation>
                    <xs:documentation>Corsican</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="cpe">
                <xs:annotation>
                    <xs:documentation>Creoles and pidgins, English-based (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="cpf">
                <xs:annotation>
                    <xs:documentation>Creoles and pidgins, French-based (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="cpp">
                <xs:annotation>
                    <xs:documentation>Creoles and pidgins, Portuguese-based
                        (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="cre">
                <xs:annotation>
                    <xs:documentation>Cree</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="crp">
                <xs:annotation>
                    <xs:documentation>Creoles and pidgins(Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="cus">
                <xs:annotation>
                    <xs:documentation>Cushitic (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="cym">
                <xs:annotation>
                    <xs:documentation>Welsh</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="cze">
                <xs:annotation>
                    <xs:documentation>Czech</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="dak">
                <xs:annotation>
                    <xs:documentation>Dakota</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="dan">
                <xs:annotation>
                    <xs:documentation>Danish</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="day">
                <xs:annotation>
                    <xs:documentation>Dayak</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="del">
                <xs:annotation>
                    <xs:documentation>Delaware</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="den">
                <xs:annotation>
                    <xs:documentation>Slave (Athapascan)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="deu">
                <xs:annotation>
                    <xs:documentation>German</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="dgr">
                <xs:annotation>
                    <xs:documentation>Dogrib</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="din">
                <xs:annotation>
                    <xs:documentation>Dinka</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="div">
                <xs:annotation>
                    <xs:documentation>Divehi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="doi">
                <xs:annotation>
                    <xs:documentation>Dogri</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="dra">
                <xs:annotation>
                    <xs:documentation>Dravidian (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="dua">
                <xs:annotation>
                    <xs:documentation>Duala</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="dum">
                <xs:annotation>
                    <xs:documentation>Dutch, Middle (ca. 1050-1350)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="dut">
                <xs:annotation>
                    <xs:documentation>Dutch</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="dyu">
                <xs:annotation>
                    <xs:documentation>Dyula</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="dzo">
                <xs:annotation>
                    <xs:documentation>Dzongkha</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="efi">
                <xs:annotation>
                    <xs:documentation>Efik</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="egy">
                <xs:annotation>
                    <xs:documentation>Egyptian (Ancient)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="eka">
                <xs:annotation>
                    <xs:documentation>Ekajuk</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ell">
                <xs:annotation>
                    <xs:documentation>Greek, Modern (1453-)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="elx">
                <xs:annotation>
                    <xs:documentation>Elamite</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="eng">
                <xs:annotation>
                    <xs:documentation>English</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="enm">
                <xs:annotation>
                    <xs:documentation>English, Middle (1100-1500)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="epo">
                <xs:annotation>
                    <xs:documentation>Esperanto</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="est">
                <xs:annotation>
                    <xs:documentation>Estonian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="eus">
                <xs:annotation>
                    <xs:documentation>Basque</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ewe">
                <xs:annotation>
                    <xs:documentation>Ewe</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ewo">
                <xs:annotation>
                    <xs:documentation>Ewondo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="fan">
                <xs:annotation>
                    <xs:documentation>Fang</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="fao">
                <xs:annotation>
                    <xs:documentation>Faroese</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="fas">
                <xs:annotation>
                    <xs:documentation>Persian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="fat">
                <xs:annotation>
                    <xs:documentation>Fanti</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="fij">
                <xs:annotation>
                    <xs:documentation>Fijian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="fin">
                <xs:annotation>
                    <xs:documentation>Finnish</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="fiu">
                <xs:annotation>
                    <xs:documentation>Finno-Ugrian (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="fon">
                <xs:annotation>
                    <xs:documentation>Fon</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="fra">
                <xs:annotation>
                    <xs:documentation>French</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="fre">
                <xs:annotation>
                    <xs:documentation>French</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="frm">
                <xs:annotation>
                    <xs:documentation>French, Middle (ca.1400-1600)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="fro">
                <xs:annotation>
                    <xs:documentation>French, Old (842-ca.1400)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="fry">
                <xs:annotation>
                    <xs:documentation>Frisian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ful">
                <xs:annotation>
                    <xs:documentation>Fulah</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="fur">
                <xs:annotation>
                    <xs:documentation>Friulian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="gaa">
                <xs:annotation>
                    <xs:documentation>Ga</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="gay">
                <xs:annotation>
                    <xs:documentation>Gayo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="gba">
                <xs:annotation>
                    <xs:documentation>Gbaya</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="gem">
                <xs:annotation>
                    <xs:documentation>Germanic (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="geo">
                <xs:annotation>
                    <xs:documentation>Georgian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ger">
                <xs:annotation>
                    <xs:documentation>German</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="gez">
                <xs:annotation>
                    <xs:documentation>Geez</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="gil">
                <xs:annotation>
                    <xs:documentation>Gilbertese</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="gla">
                <xs:annotation>
                    <xs:documentation>Gaelic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="gla">
                <xs:annotation>
                    <xs:documentation>Scottish Gaelic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="gle">
                <xs:annotation>
                    <xs:documentation>Irish</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="glg">
                <xs:annotation>
                    <xs:documentation>Gallegan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="glv">
                <xs:annotation>
                    <xs:documentation>Manx</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="gmh">
                <xs:annotation>
                    <xs:documentation>German, Middle High (ca.1050-1500)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="goh">
                <xs:annotation>
                    <xs:documentation>German, Old High (ca.750-1050)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="gon">
                <xs:annotation>
                    <xs:documentation>Gondi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="gor">
                <xs:annotation>
                    <xs:documentation>Gorontalo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="got">
                <xs:annotation>
                    <xs:documentation>Gothic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="grb">
                <xs:annotation>
                    <xs:documentation>Grebo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="grc">
                <xs:annotation>
                    <xs:documentation>Greek, Ancient (to 1453)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="gre">
                <xs:annotation>
                    <xs:documentation>Greek, Modern (1453-)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="grn">
                <xs:annotation>
                    <xs:documentation>Guarani</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="guj">
                <xs:annotation>
                    <xs:documentation>Gujarati</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="gwi">
                <xs:annotation>
                    <xs:documentation>Gwich´in</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="hai">
                <xs:annotation>
                    <xs:documentation>Haida</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="hau">
                <xs:annotation>
                    <xs:documentation>Hausa</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="haw">
                <xs:annotation>
                    <xs:documentation>Hawaiian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="heb">
                <xs:annotation>
                    <xs:documentation>Hebrew</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="her">
                <xs:annotation>
                    <xs:documentation>Herero</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="hil">
                <xs:annotation>
                    <xs:documentation>Hiligaynon</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="him">
                <xs:annotation>
                    <xs:documentation>Himachali</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="hin">
                <xs:annotation>
                    <xs:documentation>Hindi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="hit">
                <xs:annotation>
                    <xs:documentation>Hittite</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="hmn">
                <xs:annotation>
                    <xs:documentation>Hmong</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="hmo">
                <xs:annotation>
                    <xs:documentation>Hiri Motu</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="hrv">
                <xs:annotation>
                    <xs:documentation>Croatian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="hun">
                <xs:annotation>
                    <xs:documentation>Hungarian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="hup">
                <xs:annotation>
                    <xs:documentation>Hupa</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="hye">
                <xs:annotation>
                    <xs:documentation>Armenian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="iba">
                <xs:annotation>
                    <xs:documentation>Iban</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ibo">
                <xs:annotation>
                    <xs:documentation>Igbo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ice">
                <xs:annotation>
                    <xs:documentation>Icelandic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ijo">
                <xs:annotation>
                    <xs:documentation>Ijo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="iku">
                <xs:annotation>
                    <xs:documentation>Inuktitut</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ile">
                <xs:annotation>
                    <xs:documentation>Interlingue</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ilo">
                <xs:annotation>
                    <xs:documentation>Iloko</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ina">
                <xs:annotation>
                    <xs:documentation>Interlingua (International Auxiliary Language
                        Association)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="inc">
                <xs:annotation>
                    <xs:documentation>Indic (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ind">
                <xs:annotation>
                    <xs:documentation>Indonesian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ine">
                <xs:annotation>
                    <xs:documentation>Indo-European (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ipk">
                <xs:annotation>
                    <xs:documentation>Inupiaq</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ira">
                <xs:annotation>
                    <xs:documentation>Iranian (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="iro">
                <xs:annotation>
                    <xs:documentation>Iroquoian languages</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="isl">
                <xs:annotation>
                    <xs:documentation>Icelandic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ita">
                <xs:annotation>
                    <xs:documentation>Italian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="jav">
                <xs:annotation>
                    <xs:documentation>Javanese</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="jpn">
                <xs:annotation>
                    <xs:documentation>Japanese</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="jpr">
                <xs:annotation>
                    <xs:documentation>Judeo-Persian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="jrb">
                <xs:annotation>
                    <xs:documentation>Judeo-Arabic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kaa">
                <xs:annotation>
                    <xs:documentation>Kara-Kalpak</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kab">
                <xs:annotation>
                    <xs:documentation>Kabyle</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kac">
                <xs:annotation>
                    <xs:documentation>Kachin</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kal">
                <xs:annotation>
                    <xs:documentation>Kalaallisut</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kam">
                <xs:annotation>
                    <xs:documentation>Kamba</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kan">
                <xs:annotation>
                    <xs:documentation>Kannada</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kar">
                <xs:annotation>
                    <xs:documentation>Karen</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kas">
                <xs:annotation>
                    <xs:documentation>Kashmiri</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kat">
                <xs:annotation>
                    <xs:documentation>Georgian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kau">
                <xs:annotation>
                    <xs:documentation>Kanuri</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kaw">
                <xs:annotation>
                    <xs:documentation>Kawi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kaz">
                <xs:annotation>
                    <xs:documentation>Kazakh</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kha">
                <xs:annotation>
                    <xs:documentation>Khasi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="khi">
                <xs:annotation>
                    <xs:documentation>Khoisan (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="khm">
                <xs:annotation>
                    <xs:documentation>Khmer</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kho">
                <xs:annotation>
                    <xs:documentation>Khotanese</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kik">
                <xs:annotation>
                    <xs:documentation>Gikuyu</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kik">
                <xs:annotation>
                    <xs:documentation>Kikuyu</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kin">
                <xs:annotation>
                    <xs:documentation>Kinyarwanda</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kir">
                <xs:annotation>
                    <xs:documentation>Kirghiz</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kmb">
                <xs:annotation>
                    <xs:documentation>Kimbundu</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kok">
                <xs:annotation>
                    <xs:documentation>Konkani</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kom">
                <xs:annotation>
                    <xs:documentation>Komi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kon">
                <xs:annotation>
                    <xs:documentation>Kongo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kor">
                <xs:annotation>
                    <xs:documentation>Korean</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kos">
                <xs:annotation>
                    <xs:documentation>Kosraean</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kpe">
                <xs:annotation>
                    <xs:documentation>Kpelle</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kro">
                <xs:annotation>
                    <xs:documentation>Kru</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kru">
                <xs:annotation>
                    <xs:documentation>Kurukh</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kua">
                <xs:annotation>
                    <xs:documentation>Kuanyama</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kum">
                <xs:annotation>
                    <xs:documentation>Kumyk</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kur">
                <xs:annotation>
                    <xs:documentation>Kurdish</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="kut">
                <xs:annotation>
                    <xs:documentation>Kutenai</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="lad">
                <xs:annotation>
                    <xs:documentation>Ladino</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="lah">
                <xs:annotation>
                    <xs:documentation>Lahnda</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="lam">
                <xs:annotation>
                    <xs:documentation>Lamba</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="lao">
                <xs:annotation>
                    <xs:documentation>Lao</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="lat">
                <xs:annotation>
                    <xs:documentation>Latin</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="lav">
                <xs:annotation>
                    <xs:documentation>Latvian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="lez">
                <xs:annotation>
                    <xs:documentation>Lezghian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="lin">
                <xs:annotation>
                    <xs:documentation>Lingala</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="lit">
                <xs:annotation>
                    <xs:documentation>Lithuanian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="lol">
                <xs:annotation>
                    <xs:documentation>Mongo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="loz">
                <xs:annotation>
                    <xs:documentation>Lozi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ltz">
                <xs:annotation>
                    <xs:documentation>Letzeburgesch</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="lua">
                <xs:annotation>
                    <xs:documentation>Luba-Lulua</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="lub">
                <xs:annotation>
                    <xs:documentation>Luba-Katanga</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="lug">
                <xs:annotation>
                    <xs:documentation>Ganda</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="lui">
                <xs:annotation>
                    <xs:documentation>Luiseno</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="lun">
                <xs:annotation>
                    <xs:documentation>Lunda</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="luo">
                <xs:annotation>
                    <xs:documentation>Luo (Kenya and Tanzania)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="lus">
                <xs:annotation>
                    <xs:documentation>Lushai</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mac">
                <xs:annotation>
                    <xs:documentation>Macedonian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mad">
                <xs:annotation>
                    <xs:documentation>Madurese</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mag">
                <xs:annotation>
                    <xs:documentation>Magahi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mah">
                <xs:annotation>
                    <xs:documentation>Marshall</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mai">
                <xs:annotation>
                    <xs:documentation>Maithili</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mak">
                <xs:annotation>
                    <xs:documentation>Makasar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mal">
                <xs:annotation>
                    <xs:documentation>Malayalam</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="man">
                <xs:annotation>
                    <xs:documentation>Mandingo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mao">
                <xs:annotation>
                    <xs:documentation>Maori</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="map">
                <xs:annotation>
                    <xs:documentation>Austronesian (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mar">
                <xs:annotation>
                    <xs:documentation>Marathi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mas">
                <xs:annotation>
                    <xs:documentation>Masai</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="may">
                <xs:annotation>
                    <xs:documentation>Malay</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mdr">
                <xs:annotation>
                    <xs:documentation>Mandar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="men">
                <xs:annotation>
                    <xs:documentation>Mende</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mga">
                <xs:annotation>
                    <xs:documentation>Irish, Middle (900-1200)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mic">
                <xs:annotation>
                    <xs:documentation>Micmac</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="min">
                <xs:annotation>
                    <xs:documentation>Minangkabau</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mis">
                <xs:annotation>
                    <xs:documentation>Miscellaneous languages</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mkd">
                <xs:annotation>
                    <xs:documentation>Macedonian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mkh">
                <xs:annotation>
                    <xs:documentation>Mon-Khmer (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mlg">
                <xs:annotation>
                    <xs:documentation>Malagasy</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mlt">
                <xs:annotation>
                    <xs:documentation>Maltese</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mnc">
                <xs:annotation>
                    <xs:documentation>Manchu</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mni">
                <xs:annotation>
                    <xs:documentation>Manipuri</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mno">
                <xs:annotation>
                    <xs:documentation>Manobo languages</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="moh">
                <xs:annotation>
                    <xs:documentation>Mohawk</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mol">
                <xs:annotation>
                    <xs:documentation>Moldavian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mon">
                <xs:annotation>
                    <xs:documentation>Mongolian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mos">
                <xs:annotation>
                    <xs:documentation>Mossi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mri">
                <xs:annotation>
                    <xs:documentation>Maori</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="msa">
                <xs:annotation>
                    <xs:documentation>Malay</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mul">
                <xs:annotation>
                    <xs:documentation>Multiple languages</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mun">
                <xs:annotation>
                    <xs:documentation>Munda languages</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mus">
                <xs:annotation>
                    <xs:documentation>Creek</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mwr">
                <xs:annotation>
                    <xs:documentation>Marwari</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mya">
                <xs:annotation>
                    <xs:documentation>Burmese</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="myn">
                <xs:annotation>
                    <xs:documentation>Mayan languages</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nah">
                <xs:annotation>
                    <xs:documentation>Nahuatl</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nai">
                <xs:annotation>
                    <xs:documentation>North American Indian (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nau">
                <xs:annotation>
                    <xs:documentation>Nauru</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nav">
                <xs:annotation>
                    <xs:documentation>Navajo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nbl">
                <xs:annotation>
                    <xs:documentation>Ndebele, South</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nde">
                <xs:annotation>
                    <xs:documentation>Ndebele, North</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ndo">
                <xs:annotation>
                    <xs:documentation>Ndonga</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nds">
                <xs:annotation>
                    <xs:documentation>German, Low</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nds">
                <xs:annotation>
                    <xs:documentation>Low German</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nds">
                <xs:annotation>
                    <xs:documentation>Low Saxon</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nds">
                <xs:annotation>
                    <xs:documentation>Saxon, Low</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nep">
                <xs:annotation>
                    <xs:documentation>Nepali</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="new">
                <xs:annotation>
                    <xs:documentation>Newari</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nia">
                <xs:annotation>
                    <xs:documentation>Nias</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nic">
                <xs:annotation>
                    <xs:documentation>Niger-Kordofanian (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="niu">
                <xs:annotation>
                    <xs:documentation>Niuean</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nld">
                <xs:annotation>
                    <xs:documentation>Dutch</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nno">
                <xs:annotation>
                    <xs:documentation>Norwegian Nynorsk</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nno">
                <xs:annotation>
                    <xs:documentation>Nynorsk, Norwegian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nob">
                <xs:annotation>
                    <xs:documentation>Bokmål, Norwegian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nob">
                <xs:annotation>
                    <xs:documentation>Norwegian Bokmål</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="non">
                <xs:annotation>
                    <xs:documentation>Norse, Old</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nor">
                <xs:annotation>
                    <xs:documentation>Norwegian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nso">
                <xs:annotation>
                    <xs:documentation>Sotho, Northern</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nub">
                <xs:annotation>
                    <xs:documentation>Nubian languages</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nya">
                <xs:annotation>
                    <xs:documentation>Chichewa</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nya">
                <xs:annotation>
                    <xs:documentation>Nyanja</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nym">
                <xs:annotation>
                    <xs:documentation>Nyamwezi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nyn">
                <xs:annotation>
                    <xs:documentation>Nyankole</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nyo">
                <xs:annotation>
                    <xs:documentation>Nyoro</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="nzi">
                <xs:annotation>
                    <xs:documentation>Nzima</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="oci">
                <xs:annotation>
                    <xs:documentation>Occitan (post 1500)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="oci">
                <xs:annotation>
                    <xs:documentation>Provençal</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="oji">
                <xs:annotation>
                    <xs:documentation>Ojibwa</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ori">
                <xs:annotation>
                    <xs:documentation>Oriya</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="orm">
                <xs:annotation>
                    <xs:documentation>Oromo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="osa">
                <xs:annotation>
                    <xs:documentation>Osage</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="oss">
                <xs:annotation>
                    <xs:documentation>Ossetian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="oss">
                <xs:annotation>
                    <xs:documentation>Ossetic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ota">
                <xs:annotation>
                    <xs:documentation>Turkish, Ottoman (1500-1928)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="oto">
                <xs:annotation>
                    <xs:documentation>Otomian languages</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="paa">
                <xs:annotation>
                    <xs:documentation>Papuan (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="pag">
                <xs:annotation>
                    <xs:documentation>Pangasinan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="pal">
                <xs:annotation>
                    <xs:documentation>Pahlavi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="pam">
                <xs:annotation>
                    <xs:documentation>Pampanga</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="pan">
                <xs:annotation>
                    <xs:documentation>Panjabi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="pap">
                <xs:annotation>
                    <xs:documentation>Papiamento</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="pau">
                <xs:annotation>
                    <xs:documentation>Palauan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="peo">
                <xs:annotation>
                    <xs:documentation>Persian, Old (ca.600-400)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="per">
                <xs:annotation>
                    <xs:documentation>Persian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="phi">
                <xs:annotation>
                    <xs:documentation>Philippine (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="phn">
                <xs:annotation>
                    <xs:documentation>Phoenician</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="pli">
                <xs:annotation>
                    <xs:documentation>Pali</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="pol">
                <xs:annotation>
                    <xs:documentation>Polish</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="pon">
                <xs:annotation>
                    <xs:documentation>Pohnpeian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="por">
                <xs:annotation>
                    <xs:documentation>Portuguese</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="pra">
                <xs:annotation>
                    <xs:documentation>Prakrit languages</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="pro">
                <xs:annotation>
                    <xs:documentation>Provençal, Old (to 1500)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="pus">
                <xs:annotation>
                    <xs:documentation>Pushto</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="que">
                <xs:annotation>
                    <xs:documentation>Quechua</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="raj">
                <xs:annotation>
                    <xs:documentation>Rajasthani</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="rap">
                <xs:annotation>
                    <xs:documentation>Rapanui</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="rar">
                <xs:annotation>
                    <xs:documentation>Rarotongan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="roa">
                <xs:annotation>
                    <xs:documentation>Romance (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="roh">
                <xs:annotation>
                    <xs:documentation>Raeto-Romance</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="rom">
                <xs:annotation>
                    <xs:documentation>Romany</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ron">
                <xs:annotation>
                    <xs:documentation>Romanian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="rum">
                <xs:annotation>
                    <xs:documentation>Romanian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="run">
                <xs:annotation>
                    <xs:documentation>Rundi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="rus">
                <xs:annotation>
                    <xs:documentation>Russian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sad">
                <xs:annotation>
                    <xs:documentation>Sandawe</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sag">
                <xs:annotation>
                    <xs:documentation>Sango</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sah">
                <xs:annotation>
                    <xs:documentation>Yakut</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sai">
                <xs:annotation>
                    <xs:documentation>South American Indian (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sal">
                <xs:annotation>
                    <xs:documentation>Salishan languages</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sam">
                <xs:annotation>
                    <xs:documentation>Samaritan Aramaic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="san">
                <xs:annotation>
                    <xs:documentation>Sanskrit</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sas">
                <xs:annotation>
                    <xs:documentation>Sasak</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sat">
                <xs:annotation>
                    <xs:documentation>Santali</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="scc">
                <xs:annotation>
                    <xs:documentation>Serbian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sco">
                <xs:annotation>
                    <xs:documentation>Scots</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="scr">
                <xs:annotation>
                    <xs:documentation>Croatian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sel">
                <xs:annotation>
                    <xs:documentation>Selkup</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sem">
                <xs:annotation>
                    <xs:documentation>Semitic (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sga">
                <xs:annotation>
                    <xs:documentation>Irish, Old (to 900)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sgn">
                <xs:annotation>
                    <xs:documentation>Sign languages</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="shn">
                <xs:annotation>
                    <xs:documentation>Shan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sid">
                <xs:annotation>
                    <xs:documentation>Sidamo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sin">
                <xs:annotation>
                    <xs:documentation>Sinhalese</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sio">
                <xs:annotation>
                    <xs:documentation>Siouan languages</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sit">
                <xs:annotation>
                    <xs:documentation>Sino-Tibetan (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sla">
                <xs:annotation>
                    <xs:documentation>Slavic (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="slk">
                <xs:annotation>
                    <xs:documentation>Slovak</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="slo">
                <xs:annotation>
                    <xs:documentation>Slovak</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="slv">
                <xs:annotation>
                    <xs:documentation>Slovenian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sme">
                <xs:annotation>
                    <xs:documentation>Northern Sami</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="smi">
                <xs:annotation>
                    <xs:documentation>Sami languages (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="smo">
                <xs:annotation>
                    <xs:documentation>Samoan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sna">
                <xs:annotation>
                    <xs:documentation>Shona</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="snd">
                <xs:annotation>
                    <xs:documentation>Sindhi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="snk">
                <xs:annotation>
                    <xs:documentation>Soninke</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sog">
                <xs:annotation>
                    <xs:documentation>Sogdian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="som">
                <xs:annotation>
                    <xs:documentation>Somali</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="son">
                <xs:annotation>
                    <xs:documentation>Songhai</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sot">
                <xs:annotation>
                    <xs:documentation>Sotho, Southern</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="spa">
                <xs:annotation>
                    <xs:documentation>Castilian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="spa">
                <xs:annotation>
                    <xs:documentation>Spanish</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sqi">
                <xs:annotation>
                    <xs:documentation>Albanian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="srd">
                <xs:annotation>
                    <xs:documentation>Sardinian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="srp">
                <xs:annotation>
                    <xs:documentation>Serbian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="srr">
                <xs:annotation>
                    <xs:documentation>Serer</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ssa">
                <xs:annotation>
                    <xs:documentation>Nilo-Saharan (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ssw">
                <xs:annotation>
                    <xs:documentation>Swati</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="suk">
                <xs:annotation>
                    <xs:documentation>Sukuma</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sun">
                <xs:annotation>
                    <xs:documentation>Sundanese</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sus">
                <xs:annotation>
                    <xs:documentation>Susu</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="sux">
                <xs:annotation>
                    <xs:documentation>Sumerian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="swa">
                <xs:annotation>
                    <xs:documentation>Swahili</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="swe">
                <xs:annotation>
                    <xs:documentation>Swedish</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="syr">
                <xs:annotation>
                    <xs:documentation>Syriac</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tah">
                <xs:annotation>
                    <xs:documentation>Tahitian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tai">
                <xs:annotation>
                    <xs:documentation>Tai (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tam">
                <xs:annotation>
                    <xs:documentation>Tamil</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tat">
                <xs:annotation>
                    <xs:documentation>Tatar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tel">
                <xs:annotation>
                    <xs:documentation>Telugu</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tem">
                <xs:annotation>
                    <xs:documentation>Timne</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ter">
                <xs:annotation>
                    <xs:documentation>Tereno</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tet">
                <xs:annotation>
                    <xs:documentation>Tetum</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tgk">
                <xs:annotation>
                    <xs:documentation>Tajik</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tgl">
                <xs:annotation>
                    <xs:documentation>Tagalog</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tha">
                <xs:annotation>
                    <xs:documentation>Thai</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tib">
                <xs:annotation>
                    <xs:documentation>Tibetan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tig">
                <xs:annotation>
                    <xs:documentation>Tigre</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tir">
                <xs:annotation>
                    <xs:documentation>Tigrinya</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tiv">
                <xs:annotation>
                    <xs:documentation>Tiv</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tkl">
                <xs:annotation>
                    <xs:documentation>Tokelau</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tli">
                <xs:annotation>
                    <xs:documentation>Tlingit</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tmh">
                <xs:annotation>
                    <xs:documentation>Tamashek</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tog">
                <xs:annotation>
                    <xs:documentation>Tonga (Nyasa)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ton">
                <xs:annotation>
                    <xs:documentation>Tonga (Tonga Islands)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tpi">
                <xs:annotation>
                    <xs:documentation>Tok Pisin</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tsi">
                <xs:annotation>
                    <xs:documentation>Tsimshian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tsn">
                <xs:annotation>
                    <xs:documentation>Tswana</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tso">
                <xs:annotation>
                    <xs:documentation>Tsonga</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tuk">
                <xs:annotation>
                    <xs:documentation>Turkmen</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tum">
                <xs:annotation>
                    <xs:documentation>Tumbuka</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tur">
                <xs:annotation>
                    <xs:documentation>Turkish</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tut">
                <xs:annotation>
                    <xs:documentation>Altaic (Other)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tvl">
                <xs:annotation>
                    <xs:documentation>Tuvalu</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="twi">
                <xs:annotation>
                    <xs:documentation>Twi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="tyv">
                <xs:annotation>
                    <xs:documentation>Tuvinian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="uga">
                <xs:annotation>
                    <xs:documentation>Ugaritic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="uig">
                <xs:annotation>
                    <xs:documentation>Uighur</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ukr">
                <xs:annotation>
                    <xs:documentation>Ukrainian</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="umb">
                <xs:annotation>
                    <xs:documentation>Umbundu</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="und">
                <xs:annotation>
                    <xs:documentation>Undetermined</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="urd">
                <xs:annotation>
                    <xs:documentation>Urdu</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="uzb">
                <xs:annotation>
                    <xs:documentation>Uzbek</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="vai">
                <xs:annotation>
                    <xs:documentation>Vai</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ven">
                <xs:annotation>
                    <xs:documentation>Venda</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="vie">
                <xs:annotation>
                    <xs:documentation>Vietnamese</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="vol">
                <xs:annotation>
                    <xs:documentation>Volapük</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="vot">
                <xs:annotation>
                    <xs:documentation>Votic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="wak">
                <xs:annotation>
                    <xs:documentation>Wakashan languages</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="wal">
                <xs:annotation>
                    <xs:documentation>Walamo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="war">
                <xs:annotation>
                    <xs:documentation>Waray</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="was">
                <xs:annotation>
                    <xs:documentation>Washo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="wel">
                <xs:annotation>
                    <xs:documentation>Welsh</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="wen">
                <xs:annotation>
                    <xs:documentation>Sorbian languages</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="wol">
                <xs:annotation>
                    <xs:documentation>Wolof</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="xho">
                <xs:annotation>
                    <xs:documentation>Xhosa</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="yao">
                <xs:annotation>
                    <xs:documentation>Yao</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="yap">
                <xs:annotation>
                    <xs:documentation>Yapese</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="yid">
                <xs:annotation>
                    <xs:documentation>Yiddish</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="yor">
                <xs:annotation>
                    <xs:documentation>Yoruba</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ypk">
                <xs:annotation>
                    <xs:documentation>Yupik languages</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="zap">
                <xs:annotation>
                    <xs:documentation>Zapotec</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="zen">
                <xs:annotation>
                    <xs:documentation>Zenaga</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="zha">
                <xs:annotation>
                    <xs:documentation>Chuang</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="zha">
                <xs:annotation>
                    <xs:documentation>Zhuang</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="zho">
                <xs:annotation>
                    <xs:documentation>Chinese</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="znd">
                <xs:annotation>
                    <xs:documentation>Zande</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="zul">
                <xs:annotation>
                    <xs:documentation>Zulu</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="zun">
                <xs:annotation>
                    <xs:documentation>Zuni</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <!--
		Enumerated type for Description Type Codes attribute
	-->
    <xs:simpleType name="DescriptionTypeCode">
        <xs:union memberTypes="DescriptionTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="DescriptionTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Long"/>
            <xs:enumeration value="Short"/>
            <xs:enumeration value="Web"/>
            <xs:enumeration value="Supplier"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="DescriptionCommonData">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute default="eng" form="unqualified" name="Language" type="LanguageCode"
                    use="optional">
                    <xs:annotation>
                        <xs:documentation>The language used in this description</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="Short" form="unqualified" name="TypeCode"
                    type="DescriptionTypeCode">
                    <xs:annotation>
                        <xs:documentation>the type of this description, long, short, web,
                            etc.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--             Derived Schemas             -->
    <!-- ============================ -->
    <xs:complexType name="ApprovalBase">
        <xs:sequence>
            <xs:element form="qualified" name="SequenceNumber" type="SequenceNumberType"/>
            <xs:element form="qualified" name="ApproverID">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="OperatorCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="LineApprovalCode" type="xs:string"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Description"
                type="DescriptionCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="EntryMethod" type="EntryMethodTypeCode"/>
            <xs:element form="qualified" minOccurs="0" name="ApprovalDateTime" type="xs:dateTime"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
    </xs:complexType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="RestrictionValidationBase">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="QuestionText" type="xs:string"/>
            <xs:choice minOccurs="0">
                <xs:element form="qualified" name="QuestionAnswer" type="xs:string"/>
                <xs:element form="qualified" name="Address">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="AddressCommonData"/>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
            </xs:choice>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                name="OperatorBypassApproval" type="ApprovalBase">
                <xs:annotation>
                    <xs:documentation>Does this need approval to bypass the
                        restriction?</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                name="SalesRestrictionValidation" type="SalesRestrictionValidationType">
                <xs:annotation>
                    <xs:documentation>Was this validated and against what rule?</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute form="unqualified" name="OperatorByPassFlag" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>Did the Operator Bypass this Restriction
                    Validation?</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="CustomerQuestionID"
            type="RetailTransactionRestrictionValidationQuestion">
            <xs:annotation>
                <xs:documentation>An enumeration of possible questions types to ask a customer for
                    validation</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="EntryMethod" type="EntryMethodTypeCode">
            <xs:annotation>
                <xs:documentation>Denotes how the Answer to the question was
                    entered</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="SalesRestrictionValidationType">
        <xs:attribute form="unqualified" name="ValidationFlag" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>Was the proper validation provided and
                    verified.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="RuleID" type="xs:string">
            <xs:annotation>
                <xs:documentation>What rule was validated</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <!--
        Enumerated type for Restriction@ValidationQuestion
    -->
    <xs:simpleType name="RetailTransactionRestrictionValidationQuestion">
        <xs:union
            memberTypes="RetailTransactionRestrictionValidationQuestionEnumeration TypeCodeExtension"
        />
    </xs:simpleType>
    <xs:simpleType name="RetailTransactionRestrictionValidationQuestionEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="CustomerIDType"/>
            <xs:enumeration value="CustomerID"/>
            <xs:enumeration value="CustomerBirthDate"/>
            <xs:enumeration value="NumberOfVisits"/>
            <xs:enumeration value="LastVisitDate"/>
            <xs:enumeration value="LastAmountSpend"/>
            <xs:enumeration value="CustomerAddress"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="SurveyCommonData">
        <xs:annotation>
            <xs:documentation>Survey question put on the receipt</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="SurveyCode" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The code which ties this customer/receipt to the
                        survey</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Description"
                type="DescriptionCommonData">
                <xs:annotation>
                    <xs:documentation>Survey information in a variety of different
                        languages.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute form="unqualified" name="SurveyLink" type="xs:string">
            <xs:annotation>
                <xs:documentation>This is a link to the location of the survey</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <!-- 
	Version 2 20080902
	- Added Count to reflect the various ways for which this date is accounted.
-->
    <xs:complexType name="BusinessDayDateType">
        <xs:annotation>
            <xs:documentation>The date in the accounting period when this transaction was recorded.
                Note: business day date can either be a date or be a count of the number of
                accounting days from the start of the accounting period.  Accounting days can span
                multiple calendar days.  Normally if this is a date then when it spans multiple
                calendar days, it is the first calendar date.</xs:documentation>
        </xs:annotation>
        <xs:choice>
            <xs:element form="qualified" name="Date" type="xs:date">
                <xs:annotation>
                    <xs:documentation>Accounting Date for this transaction</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="Count" type="xs:int">
                <xs:annotation>
                    <xs:documentation>Count of this day from the start of this accounting
                        period.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:simpleType name="OrganizationTypeCodeEnumeration">
        <xs:union memberTypes="OrganizationTypeCodeList TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="OrganizationTypeCodeList">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Corporation"/>
            <xs:enumeration value="OperatingCompany">
                <xs:annotation>
                    <xs:documentation> separate legal entity which conducts retail operations for
                        the retail enterprise in some geographical location. It may be treated as a
                        division internally - yet it is still a separate legal
                        entity</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Concept">
                <xs:annotation>
                    <xs:documentation>a unique line of business within a
                        corporation</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="RevenueCenter">
                <xs:annotation>
                    <xs:documentation>Any area of a store from which particular revenues can be said
                        to derive</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Region"/>
            <xs:enumeration value="Department">
                <xs:annotation>
                    <xs:documentation>A grouping of items with similar point of sale control and
                        processing attributes. This entity type may also be used to control sales
                        that are not properly identified at the item-level.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Division">
                <xs:annotation>
                    <xs:documentation>an administrative unit in a large store which certain retail
                        functions have been grouped</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="District"/>
            <xs:enumeration value="Zone"/>
            <xs:enumeration value="DistributionCenter">
                <xs:annotation>
                    <xs:documentation>A warehouse or other storage facility that receives
                        merchandise in bulk from Suppliers and supplies merchandise to RetailStores.
                        It may be co-located at the same Site as a RetailStore or
                        AdministrativeCenter.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AdministrationCenter">
                <xs:annotation>
                    <xs:documentation>A group of offices at which the retail enterprise conducts
                        administrative (non-selling) operations. May be co-located at a Site with
                        RetailStore, DistributionCenter, or InventoryLocation.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="RetailStore">
                <xs:annotation>
                    <xs:documentation>A retail outlet that sells merchandise and services through
                        either a physical location, catalog, web page or other channel. It may or
                        may not be identical to a Site. It may be co-located at the same Site as a
                        DistributionCenter, InventoryLocation or
                        AdministrativeCenter.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="OrganizationHierarchyCommonData">
        <xs:annotation>
            <xs:documentation>organizational hierarchy so that destination can be targeted to
                individual location, region, division etc, not to be confused with reporting the
                entire hierarchy as is done with the Organizational Hierarchy Structure - i.e. an
                instance of an organization hierarchy at a particular level.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="Level" type="OrganizationTypeCodeEnumeration"
                    use="optional">
                    <xs:annotation>
                        <xs:documentation>Defines the various components of a retail enterprise from
                            the corporation down to the retail store</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute form="unqualified" name="ID" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>the ranking of the level in the hierarchy.  For example a
                            region can be a second level in one organization and at a third level in
                            another </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!--
	        Enumerated type for TransactionLink@ReasonCode attribute
	 -->
    <xs:simpleType name="TransactionLinkReasonTypeCode">
        <xs:union memberTypes="TransactionLinkReasonEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="TransactionLinkReasonEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Resume"/>
            <xs:enumeration value="DeferredBill"/>
            <xs:enumeration value="Return"/>
            <xs:enumeration value="LayAway"/>
            <xs:enumeration value="Voided"/>
            <xs:enumeration value="ReceiptReprint"/>
            <xs:enumeration value="Reservation"/>
            <xs:enumeration value="SuggestedItem"/>
            <xs:enumeration value="RetrospectiveLoyalty"/>
            <xs:enumeration value="PaidOut"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="TransactionLinkCommonData">
        <xs:sequence>
            <xs:choice maxOccurs="unbounded">
                <xs:element form="qualified" name="TransactionID" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>A universally unique identifier (UUID) for the Transaction
                            that records a Transaction.  It can be generated in the database or
                            external to the database.  This is used as the primary key in the Data
                            Model.       </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:sequence>
                    <xs:element form="qualified" name="BusinessUnit">
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="BusinessUnitCommonData"/>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element form="qualified" name="WorkstationID">
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="WorkstationIDCommonData"/>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element form="qualified" name="BusinessDayDate">
                        <xs:complexType>
                            <xs:complexContent>
                                <xs:extension base="BusinessDayDateType"/>
                            </xs:complexContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="OrganizationalHierarchy">
                        <xs:annotation>
                            <xs:documentation>Used to help identify business units with the same
                                number but in different organizations</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="OrganizationHierarchyCommonData"/>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element form="qualified" name="SequenceNumber" type="SequenceNumberType">
                        <xs:annotation>
                            <xs:documentation>This is the sequence number of the original
                                transaction</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:choice>
            <xs:element form="qualified" minOccurs="0" name="LineItemSequenceNumber"
                type="SequenceNumberType"/>
            <xs:element form="qualified" minOccurs="0" name="BeginDateTime"
                type="DateTimeCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="EndDateTime" type="DateTimeCommonData"
            />
        </xs:sequence>
        <xs:attribute default="Return" form="unqualified" name="ReasonCode"
            type="TransactionLinkReasonTypeCode" use="optional"/>
        <xs:attribute default="Scanned" form="unqualified" name="EntryMethod"
            type="EntryMethodTypeCode" use="optional"/>
        <xs:attribute form="unqualified" name="SourceFlag" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>When multiple systems work together to create this transaction,
                    this identifies which link started the transaction.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--       Library Schemas                    -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!--
		Complex & Enumerated types defining Retail Transaction Totals
	-->
    <xs:complexType name="TransactionTotalBase">
        <xs:simpleContent>
            <xs:extension base="xs:decimal">
                <xs:attribute default="TransactionGrossAmount" form="unqualified" name="TotalType"
                    type="RetailTransactionTotalType" use="optional">
                    <xs:annotation>
                        <xs:documentation>Type definition of this total element</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="Sale" form="unqualified" name="TypeCode"
                    type="TotalSalesTypeCode">
                    <xs:annotation>
                        <xs:documentation>Defines the direction the money flows either from the
                            customer to the store (sale) or from the store to the customer
                            (return)</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="Actual" form="unqualified" name="Type"
                    type="RetailTransactionTotalSubType" use="optional"/>
                <xs:attribute default="false" form="unqualified" name="HALOFlag" type="xs:boolean"
                    use="optional">
                    <xs:annotation>
                        <xs:documentation>High Amount Lockout - A flag denoting if this transaction
                            total is within the system defined HALO limits</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute form="unqualified" name="CurrencyCode" type="CurrencyTypeCode"
                    use="optional"/>
                <xs:attribute default="1" form="unqualified" name="Units" type="xs:decimal">
                    <xs:annotation>
                        <xs:documentation>The number of units sold, when selling bulk merchandise.
                            Eg: A sale of 20 Gallons of Gas: Quantity=20, Units=1, UnitOfMeasure=Ga
                            Eg: A sale of 3 cans of Beans: Quantity=3, Units=1, UnitOfMeasure=Ea
                            Sale of 6 pack of beer quantity = 1, units = 6
                            unitofmeasure=6pk</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="EA" form="unqualified" name="UnitOfMeasureCode"
                    type="UnitOfMeasureCodeCommonData" use="optional">
                    <xs:annotation>
                        <xs:documentation>The code used to specify the units in which a value is
                            being expressed, or manner in which a measurement has been taken.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="TotalSalesTypeCode">
        <xs:union memberTypes="TotalSalesTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="TotalSalesTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Sale"/>
            <xs:enumeration value="Return"/>
            <xs:enumeration value="PreAuthorize"/>
        </xs:restriction>
    </xs:simpleType>
    <!--   -->
    <xs:simpleType name="RetailTransactionTotalSubType">
        <xs:union memberTypes="RetailTransactionTotalSubTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="RetailTransactionTotalSubTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Estimated"/>
            <xs:enumeration value="Actual"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================= -->
    <!--         RETAIL TRANSACTION             -->
    <!--  ============================ -->
    <!-- ============================ -->
    <!--             Library Schemas              -->
    <!-- ============================ -->
    <xs:simpleType name="EntryModeTypeCode">
        <xs:union memberTypes="EntryModeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="EntryModeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Normal"/>
            <xs:enumeration value="Manager"/>
            <xs:enumeration value="Maintenance"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
		 Version 1.1.0
		- Added Tapped to support Contactless Payment
		- Added Waved to support Contactless Payment
	-->
    <!-- 
		Entry Method Enumerations 
	-->
    <xs:simpleType name="EntryMethodTypeTypeCode">
        <xs:union memberTypes="EntryMethodTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="EntryMethodTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Item"/>
            <xs:enumeration value="Price"/>
            <xs:enumeration value="Quantity"/>
            <xs:enumeration value="Tender"/>
            <xs:enumeration value="GiftCard"/>
            <xs:enumeration value="RainCheck"/>
            <xs:enumeration value="ExtendedAmount"/>
            <xs:enumeration value="ActualSalesUnitPrice"/>
            <xs:enumeration value="Tax"/>
            <xs:enumeration value="Tare"/>
            <xs:enumeration value="Warranty"/>
            <xs:enumeration value="Deposits"/>
            <xs:enumeration value="Fees"/>
            <xs:enumeration value="TableCharge"/>
            <xs:enumeration value="RetailPriceModifier"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="EntryMethodCommonData">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="TypeCode" type="EntryMethodTypeTypeCode"/>
                <xs:attribute form="unqualified" name="Type" type="EntryMethodTypeTypeCode"/>
                <xs:attribute form="unqualified" name="WorkstationType" type="WorkstationIDTypeCode"
                />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="TaxPhysicalLocationType">
        <xs:annotation>
            <xs:documentation>Used by the tax service in claculating taxes for this
                transaction</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="GeoPhysicalLocationCommonData">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="TaxRegionID" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>A code that identifies the Tax Region in which the
                                Physical Location is situated.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="BusinessUnit"
                        type="BusinessUnitCommonData"/>
                </xs:sequence>
                <xs:attribute form="unqualified" name="TypeCode" type="TaxPhysicalLocationTypeCode"
                />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--
        Enumerated type for Tax Physical Locations Type Codes attribute
    -->
    <xs:simpleType name="TaxPhysicalLocationTypeCode">
        <xs:union memberTypes="TaxPhysicalLocationTypesEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="TaxPhysicalLocationTypesEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="BillTo"/>
            <xs:enumeration value="Destination"/>
            <xs:enumeration value="Order"/>
            <xs:enumeration value="OrderAcceptance"/>
            <xs:enumeration value="Return"/>
            <xs:enumeration value="Selling"/>
            <xs:enumeration value="ShipFrom"/>
            <xs:enumeration value="ShipTo"/>
            <xs:enumeration value="Situs"/>
            <xs:enumeration value="Tax"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- 
		Minor Release V1.1.0 - Oct 2007
		- Added ElectronicValueReaderWriter
	-->
    <xs:simpleType name="UnifiePOSTypeCode">
        <xs:union memberTypes="UnifiedPOSTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="UnifiedPOSTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Belt"/>
            <xs:enumeration value="BillAcceptor"/>
            <xs:enumeration value="BillDispenser"/>
            <xs:enumeration value="Biometrics"/>
            <xs:enumeration value="BumpBar"/>
            <xs:enumeration value="CashChanger"/>
            <xs:enumeration value="CashDrawer"/>
            <xs:enumeration value="CAT"/>
            <xs:enumeration value="CheckScanner"/>
            <xs:enumeration value="CoinAcceptor"/>
            <xs:enumeration value="CoinDispenser"/>
            <xs:enumeration value="ElectronicJournal"/>
            <xs:enumeration value="ElectronicValueReaderWriter"/>
            <xs:enumeration value="FiscalPrinter"/>
            <xs:enumeration value="Gate"/>
            <xs:enumeration value="HardTotals"/>
            <xs:enumeration value="ImageScanner"/>
            <xs:enumeration value="ItemDispenser"/>
            <xs:enumeration value="Keylock"/>
            <xs:enumeration value="Light"/>
            <xs:enumeration value="LineDisplay"/>
            <xs:enumeration value="MagneticStripeReader"/>
            <xs:enumeration value="MICR"/>
            <xs:enumeration value="MotionSensor"/>
            <xs:enumeration value="PinPad"/>
            <xs:enumeration value="PointcardReaderWriter"/>
            <xs:enumeration value="POSKeyboard"/>
            <xs:enumeration value="POSPower"/>
            <xs:enumeration value="POSPrinter"/>
            <xs:enumeration value="RemoteOrderDisplay"/>
            <xs:enumeration value="RFIDScanner"/>
            <xs:enumeration value="Scale"/>
            <xs:enumeration value="Scanner"/>
            <xs:enumeration value="SignatureCapture"/>
            <xs:enumeration value="SmartCardReader"/>
            <xs:enumeration value="ToneIndicator"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- Major Version 6.0.0 2010/12/29
    - Split POSLog into components
	- added survey question complex type -->
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!--
		Enumerated type for  CommonData Action Type Codes attribute
	-->
    <xs:simpleType name="ActionCommonDataTypeCodes">
        <xs:union memberTypes="ActionCommonDataTypeCodesEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="ActionCommonDataTypeCodesEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Add"/>
            <xs:enumeration value="Adjust"/>
            <xs:enumeration value="Begin"/>
            <xs:enumeration value="Calculate"/>
            <xs:enumeration value="Cancel"/>
            <xs:enumeration value="Complete"/>
            <xs:enumeration value="Create"/>
            <xs:enumeration value="Delete"/>
            <xs:enumeration value="Delivered"/>
            <xs:enumeration value="Dispatch"/>
            <xs:enumeration value="Donate"/>
            <xs:enumeration value="Error"/>
            <xs:enumeration value="Lookup"/>
            <xs:enumeration value="Initiate"/>
            <xs:enumeration value="Inquiry"/>
            <xs:enumeration value="Instruction"/>
            <xs:enumeration value="Information"/>
            <xs:enumeration value="Packed"/>
            <xs:enumeration value="PartialCancel"/>
            <xs:enumeration value="PartialComplete"/>
            <xs:enumeration value="Picked"/>
            <xs:enumeration value="Read"/>
            <xs:enumeration value="Refusal"/>
            <xs:enumeration value="Remove"/>
            <xs:enumeration value="Request"/>
            <xs:enumeration value="Replace"/>
            <xs:enumeration value="Reserve"/>
            <xs:enumeration value="Return"/>
            <xs:enumeration value="Search"/>
            <xs:enumeration value="Settle"/>
            <xs:enumeration value="Shipped"/>
            <xs:enumeration value="Subtract"/>
            <xs:enumeration value="Suggest"/>
            <xs:enumeration value="Update"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- 
		Severity Type Codes
	-->
    <xs:simpleType name="SeverityCodeType">
        <xs:union memberTypes="SeverityCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="SeverityCodeEnumeration">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Information"/>
            <xs:enumeration value="Warning"/>
            <xs:enumeration value="Error"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="BusinessErrorCommonData">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="ErrorID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>UUID identifying this particular instance of the
                        error</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Code" type="xs:string">
                <xs:annotation>
                    <xs:documentation>used to describe the error condition.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Description"
                type="DescriptionCommonData">
                <xs:annotation>
                    <xs:documentation>Any information about the  error.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="RelatedErrorID"
                type="xs:string">
                <xs:annotation>
                    <xs:documentation>The Message ID of any other messages which relate to this
                        error.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute default="Information" form="unqualified" name="Severity"
            type="SeverityCodeType" use="optional">
            <xs:annotation>
                <xs:documentation>Describes how bad is the error, Information, Warning,
                    Error</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="ContactCommonData">
        <xs:sequence>
            <xs:element form="qualified" name="Name">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="NameCommonData"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Address">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="AddressCommonData"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Telephone">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="TelephoneCommonData"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="EMail"
                type="EMailCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="Website" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <!-- 
		Merchandise Hierarchy Level Enumerations 
	-->
    <xs:simpleType name="MerchandiseHierarchyLevelTypeCode">
        <xs:union memberTypes="MerchandiseHierarchyLevelEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="MerchandiseHierarchyLevelEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Division"/>
            <xs:enumeration value="Group"/>
            <xs:enumeration value="SubGroup"/>
            <xs:enumeration value="MajorDepartment"/>
            <xs:enumeration value="Department"/>
            <xs:enumeration value="SubDepartment"/>
            <xs:enumeration value="MajorClass"/>
            <xs:enumeration value="Class"/>
            <xs:enumeration value="SubClass"/>
            <xs:enumeration value="Category"/>
            <xs:enumeration value="SubCategory"/>
            <xs:enumeration value="Style"/>
            <xs:enumeration value="SKU"/>
            <xs:enumeration value="UPC"/>
            <xs:enumeration value="EPC"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="MerchandiseHierarchyCommonData">
        <xs:annotation>
            <xs:documentation>This is an instance of a merchandise hierarchy structure for     a
                particular level</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="Level"
                    type="MerchandiseHierarchyLevelTypeCode" use="optional"/>
                <xs:attribute form="unqualified" name="ID" type="xs:string" use="optional"/>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="UUIDCommonData">
        <xs:annotation>
            <xs:documentation>Globally unique identifier</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="AssetFileName" type="xs:string"/>
                <xs:attribute form="unqualified" name="AssetFileFormat" type="xs:string"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <xs:complexType name="ModificationBase">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Name" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="Quantity" type="QuantityCommonData"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute default="AddsTo" form="unqualified" name="Action"
            type="ModificationActionTypeCode" use="optional">
            <xs:annotation>
                <xs:documentation>Describes what is being done to the item with this
                    modification.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <!--
		Enumerated type for Modification Action attribute
		- Serving Instructions - i.e. serve the coffee with the desert
		- Special Instructions - cook this item (steak) well done.
		- Preparation Instructions being removed from foodservice.
	-->
    <xs:simpleType name="ModificationActionTypeCode">
        <xs:union memberTypes="ModificationActionEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="ModificationActionEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="IsPartOf"/>
            <xs:enumeration value="AddsTo"/>
            <xs:enumeration value="IsRemovedFrom"/>
            <xs:enumeration value="Void"/>
            <xs:enumeration value="PreparationInstructions"/>
            <xs:enumeration value="ServingInstructions"/>
            <xs:enumeration value="SpecialInstructions"/>
            <xs:enumeration value="QualifyingPurchase"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <xs:complexType name="IDCommonData">
        <xs:annotation>
            <xs:documentation>Unique number for this item </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="Name" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="StoreStructureHierarchyCommonData">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="Level" type="xs:string"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!-- ============================ -->
    <!--      Base Schemas            -->
    <!-- ============================ -->
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--      Base Schemas                        -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--      Derived Schemas                    -->
    <!-- ============================ -->
    <!--  ============================ -->
    <!--    FOODSERVICE Base                    -->
    <!--  ============================ -->
    <!--
		Complex & Simple types defining Hospitality data
	-->
    <xs:complexType name="FoodServiceBase">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="TableSection" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The location of the table within the
                        restaurant</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="TableID"
                type="xs:string">
                <xs:annotation>
                    <xs:documentation>The unique number of the table being served by this
                        transaction</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="SeatID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Identifies the particular sear for a particular customer. can
                        be alphanumeric.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PartyName" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The name for this particular party (group of individuals),
                        i.e. the "Wild" party of nine.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PartySize" type="xs:unsignedShort">
                <xs:annotation>
                    <xs:documentation>The number of people being served in one group.  NOTE: this
                        may encompass multiple tables</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Tray"
                type="TrayType">
                <xs:annotation>
                    <xs:documentation>The structure which reports the information about a tray in a
                        cafeteria type environment, such as, TentID, Items on the tray, total for
                        the tray</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="CheckInTime" type="xs:dateTime">
                <xs:annotation>
                    <xs:documentation>Speed of Service measurement. The time a customer sets down at
                        a table</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="CheckOutTime" type="xs:dateTime">
                <xs:annotation>
                    <xs:documentation>Speed of Service measurement. The time a customer left the
                        table</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="OrderTime" type="xs:dateTime">
                <xs:annotation>
                    <xs:documentation>Speed of Service measurement. The time the customer ordered
                        their food.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="DelayDateTime" type="xs:dateTime">
                <xs:annotation>
                    <xs:documentation>Delay starting the food service transaction until the
                        nominated time.  A kitchen display system can use this to schedule
                        work</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="CookStartTime" type="xs:dateTime">
                <xs:annotation>
                    <xs:documentation>The time the cooking of the food began</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="CookEndTime" type="xs:dateTime">
                <xs:annotation>
                    <xs:documentation>The time the cooking was finished.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ServeTime" type="xs:dateTime">
                <xs:annotation>
                    <xs:documentation>Speed of Service measurement. The time the customer was
                        served</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Gratuity" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>he monetary amount of the gratuity that accompanies the
                        hospitality transaction.  For example, the amount given to the doorman in a
                        hotel, or the waiter in a restaurant.  This may or may not be a tip.  It can
                        be the additional charge for a party of more than  'X' people. (Japan)The n%
                        of the amount of served meal is added as service charge, which is substitute
                        for tip in Europe and the Unites States</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TableCharge" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>charged when the private dining room was used.
                        (Japan)</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute form="unqualified" name="DestinationType"
            type="FoodServiceDestinationTypeCode">
            <xs:annotation>
                <xs:documentation>An indication to where the food service transaction is to be
                    consumed.  May have an impact on taxes</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="SalesMetrics" type="POSLogSalesMetrics"
            use="optional">
            <xs:annotation>
                <xs:documentation>An indication if the items on this order were suggested by the
                    operator (up selling).  Used to measure the performance of an operator, the
                    performance of marketing, possible operator commissions, etc.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="ProcessMode" type="POSLogProcessMode" use="optional">
            <xs:annotation>
                <xs:documentation>An indication of the priority of the food order.  If it is delayed
                    then the Delay Date Time tells when to start preparation.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="TrayType">
        <xs:sequence>
            <xs:element form="qualified" name="TentID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The number on the Tray Tent given to the customer to identify
                        to which table the  specially prepared food is to be
                        delivered</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Description"
                type="DescriptionCommonData"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Total"
                type="TransactionTotalBase"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="LineItem"
                type="LineItemDomainSpecific"/>
        </xs:sequence>
    </xs:complexType>
    <!--
        Enumerated type for Sales Metrics attribute
    -->
    <xs:simpleType name="POSLogSalesMetrics">
        <xs:union memberTypes="POSLogSalesMetricsEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="POSLogSalesMetricsEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Normal"/>
            <xs:enumeration value="Suggested"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ====================== -->
    <!--       Library Schemas        -->
    <!-- ====================== -->
    <xs:complexType name="CountryOfOriginCommonData">
        <xs:annotation>
            <xs:documentation>Country Of Origin, Country of Origin Labeling The requirements to
                provide information regarding the origin of Fresh Item. This information includes
                but is not limited to: Wild or Farmed Origin of birth, where raised and processed
                Requirements vary by Country, in the US; requirements are to put a label on at the
                lot level. European countries are much more stringent and require the ability to
                identify more details.   </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="CountryCode">
                <xs:attribute form="unqualified" name="TypeCode" type="CountryOfOriginTypeCode"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!--
	-->
    <xs:simpleType name="CountryOfOriginTypeCode">
        <xs:union memberTypes="CountryOfOriginTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="CountryOfOriginTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Birth"/>
            <xs:enumeration value="Fattening"/>
            <xs:enumeration value="Growing"/>
            <xs:enumeration value="InitialProcessing"/>
            <xs:enumeration value="Nurturing"/>
            <xs:enumeration value="Origin"/>
            <xs:enumeration value="Packaging"/>
            <xs:enumeration value="Processing"/>
            <xs:enumeration value="Slaughter"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
		Enumerated type for Fee Type attribute
	-->
    <xs:simpleType name="FeeTypeCode">
        <xs:union memberTypes="FeeTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="FeeTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Paid"/>
            <xs:enumeration value="Owe"/>
            <xs:enumeration value="Refunded"/>
            <xs:enumeration value="Amount"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="FeeCommonData">
        <xs:simpleContent>
            <xs:extension base="MonetaryAmountCommonData">
                <xs:attribute default="Paid" form="unqualified" name="TypeCode" type="FeeTypeCode"
                    use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!--
		Enumerated type for Customer Action Type attribute
	-->
    <xs:simpleType name="LoyaltyAccountActionType">
        <xs:union memberTypes="LoyaltyAccountActionEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="LoyaltyAccountActionEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Add"/>
            <xs:enumeration value="Authenticate"/>
            <xs:enumeration value="Remove"/>
            <xs:enumeration value="Delete"/>
            <xs:enumeration value="Update"/>
            <xs:enumeration value="Create"/>
            <xs:enumeration value="Read"/>
            <xs:enumeration value="Inactivate"/>
            <xs:enumeration value="Merge"/>
            <xs:enumeration value="Lookup"/>
            <xs:enumeration value="GetAffiliations"/>
            <xs:enumeration value="Enroll"/>
            <xs:enumeration value="EnrollmentQuery"/>
            <xs:enumeration value="EnrollmentCancel"/>
            <xs:enumeration value="Void"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="PercentageCommonData">
        <xs:annotation>
            <xs:documentation> natural, non-negative percentage    type</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal">
            <xs:totalDigits value="5"/>
            <xs:fractionDigits value="5"/>
            <xs:minInclusive value="0"/>
            <xs:maxInclusive value="100"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:annotation>
        <xs:documentation>This is to report non-financial areas where negative balances can be
            accrued such as a points balance.</xs:documentation>
    </xs:annotation>
    <xs:simpleType name="BalanceCommonData">
        <xs:restriction base="xs:decimal">
            <xs:maxInclusive value="99999999.999999"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
		Enumerated type for Points Type attribute
	-->
    <xs:simpleType name="PointsTypeCode">
        <xs:union memberTypes="PointsTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="PointsTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Credited"/>
            <xs:enumeration value="Debited"/>
            <xs:enumeration value="Balance"/>
            <xs:enumeration value="Assigned"/>
            <xs:enumeration value="PointsEarned"/>
            <xs:enumeration value="Redeemed"/>
            <xs:enumeration value="TotalRedeemed"/>
            <xs:enumeration value="Reversal"/>
            <xs:enumeration value="PointsAdjustment"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="PointsCommonData">
        <xs:simpleContent>
            <xs:extension base="BalanceCommonData">
                <xs:attribute default="Credited" form="unqualified" name="Type"
                    type="PointsTypeCode"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="LoyaltyAccountCommonData">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="CustomerID" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="LoyaltyAccount"
                type="LoyaltyAccountType"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="LoyaltyProgram"
                type="LoyaltyAccountType"/>
            <xs:element form="qualified" minOccurs="0" name="LoyaltyCard" type="LoyaltyCardType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="LoyaltyAdjustmentType">
        <xs:annotation>
            <xs:documentation>report an change to an existing loyalty program</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="AdjustmentID" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="Points" type="PointsCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="ReasonCode" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="Description"
                type="DescriptionCommonData"/>
            <xs:choice minOccurs="0">
                <xs:element form="qualified" name="LoyaltyProgramID" type="LoyaltyProgramIDType">
                    <xs:annotation>
                        <xs:documentation>(Membership ID) A artificial, unique identifier for a
                            loyalty program</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="LoyaltyAccountID" type="LoyaltyAccountIDType">
                    <xs:annotation>
                        <xs:documentation>Organizational Affiliation (AARP) - Frequent Flyer
                            Account</xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="LoyaltyCardType">
        <xs:sequence>
            <xs:element form="qualified" name="PrimaryAccountNumber" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="IssueSequence" type="xs:integer"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="LoyaltyAccountType">
        <xs:annotation>
            <xs:documentation>A type of CUSTOMER ACCOUNT established purely for the purposes of
                tracking a customer's activity over a period of time and based on the volume of NET
                sales to provide an award to the customer in the form of a gift or special
                discount.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="LoyaltyProgramID"
                type="LoyaltyProgramIDType">
                <xs:annotation>
                    <xs:documentation>(Membership ID) A artificial, unique identifier for a loyalty
                        program</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="LoyaltyAccountID"
                type="LoyaltyAccountIDType">
                <xs:annotation>
                    <xs:documentation>Organizational Affiliation (AARP) - Frequent Flyer
                        Account</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="EffectiveDate" type="xs:date"/>
            <xs:element form="qualified" minOccurs="0" name="ExpirationDate" type="xs:date"/>
            <xs:element form="qualified" minOccurs="0" name="CumulativeNetSalesAmount"
                type="MonetaryAmountCommonData"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Points"
                type="PointsCommonData"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Redemption"
                type="RedemptionType">
                <xs:annotation>
                    <xs:documentation>Loyalty redemption against a particular loyalty
                        account</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Fees">
                <xs:annotation>
                    <xs:documentation>Fees associated with a loyalty account, such as club
                        membership.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="FeeCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="TermsID"
                type="TermsIDType">
                <xs:annotation>
                    <xs:documentation>Terms and conditions associated with a promotional
                        program.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="QualifiedItemID"
                type="ItemIDCommonData">
                <xs:annotation>
                    <xs:documentation>This identifies the items used in this count from the basket
                        as qualified purchases towards the target </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="IncrementalCount"
                type="QuantityCommonData">
                <xs:annotation>
                    <xs:documentation>Count from current basket</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="CurrentCount" type="QuantityCommonData">
                <xs:annotation>
                    <xs:documentation>Count after increment</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TargetCount" type="QuantityCommonData">
                <xs:annotation>
                    <xs:documentation>Count needed to achieve the next goal</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="OfferID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Identifies the promotion or offer to which this counter is
                        associated </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Adjustment"
                type="LoyaltyAdjustmentType">
                <xs:annotation>
                    <xs:documentation>A change in the account</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute form="unqualified" name="Action" type="LoyaltyAccountActionType"/>
    </xs:complexType>
    <xs:complexType name="LoyaltyAccountIDType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="Name" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Name of this Loyalty Account</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute form="unqualified" name="Description" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Description of this Loyalty Account</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute form="unqualified" name="IdentificationType"
                    type="IdentificationTypeCode"/>
                <xs:attribute form="unqualified" name="IdentificationSupportType"
                    type="IdentificationSupportTypeCode"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="LoyaltyProgramIDType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="Name" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Name of this Loyalty Program</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute form="unqualified" name="Description" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Description of this loyalty program</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="RedemptionType">
        <xs:annotation>
            <xs:documentation>Loyalty redemption against a particular loyalty
                account</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="BusinessUnitID"
                type="BusinessUnitCommonData">
                <xs:annotation>
                    <xs:documentation>Identifier for the store where the redemption took
                        place</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="GiftCertificateSerialNumber"
                type="xs:string">
                <xs:annotation>
                    <xs:documentation>The serial number that uniquely identifies a Gift
                        Certificate</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Points"
                type="PointsCommonData">
                <xs:annotation>
                    <xs:documentation>Points being redeemed</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                name="MerchandiseHierarchy">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="MerchandiseHierarchyCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="ItemID"
                type="xs:string">
                <xs:annotation>
                    <xs:documentation>Id for the item on which this loyalty is being
                        redeemed</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TypeCode" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="TermsIDType">
        <xs:annotation>
            <xs:documentation>Terms and conditions associated with a promotional
                program.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="Name" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The Name assigned to this set of terms</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute form="unqualified" name="Description" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>A human readable description of the terms and
                            conditions.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="IdentificationTypeCode">
        <xs:union memberTypes="IdentificationTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="IdentificationTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="PAN"/>
            <xs:enumeration value="ISOTrack2"/>
            <xs:enumeration value="BarCode"/>
            <xs:enumeration value="AccountNumber"/>
            <xs:enumeration value="PhoneNumber"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="IdentificationSupportTypeCode">
        <xs:union memberTypes="IdentificationSupportTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="IdentificationSupportTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="NoCard"/>
            <xs:enumeration value="LoyaltyCard"/>
            <xs:enumeration value="HybridCard"/>
            <xs:enumeration value="LinkedCard"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
        Enumerated type Percent@Action
    -->
    <xs:simpleType name="RetailPriceModifierPercentAction">
        <xs:union memberTypes="RetailPriceModifierPercentActionEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="RetailPriceModifierPercentActionEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Add"/>
            <xs:enumeration value="Subtract"/>
            <xs:enumeration value="For"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="RoundingDirectionCommonDataTypeCodes">
        <xs:union memberTypes="RoundingDirectionCommonDataTypeCodesEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="RoundingDirectionCommonDataTypeCodesEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Up"/>
            <xs:enumeration value="Down"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="RoundingCommonData">
        <xs:simpleContent>
            <xs:extension base="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The amount rounded, for example if the total is 2.68 EUR and
                        it is rounded to 2.70 EUR, then the rounding amount is .02
                        EUR</xs:documentation>
                </xs:annotation>
                <xs:attribute form="unqualified" name="RoundingDirection"
                    type="RoundingDirectionCommonDataTypeCodes">
                    <xs:annotation>
                        <xs:documentation>Identifies if this round was up to the next higher or down
                            to the next lower multiple.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute form="unqualified" name="Multiple" type="xs:decimal">
                    <xs:annotation>
                        <xs:documentation>In some countries, amounts are rounded to multiples of a
                            currency, i.e. multiples of a nickel or a dollar.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute form="unqualified" name="Threshold">
                    <xs:annotation>
                        <xs:documentation>If above this threshold then round up to the nearest
                            multiple.  If below this threshold then round down to the nearest
                            multiple</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:decimal">
                            <xs:minInclusive value="0.0"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="TicketSerialNumberType">
        <xs:simpleContent>
            <xs:extension base="ItemIDCommonData">
                <xs:attribute form="unqualified" name="Section" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>the section which contains the row which contains the seat
                            for this event</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute form="unqualified" name="Row" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The row which contains the seat for this
                            event</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute form="unqualified" name="Seat" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The individual seat for this ticketed
                            event</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="TicketCommonData">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="SerialNumber"
                type="TicketSerialNumberType">
                <xs:annotation>
                    <xs:documentation>The unique ID for this ticket</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="EventContentID"
                type="EventContentIDType">
                <xs:annotation>
                    <xs:documentation>Content being shown at the event</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute form="unqualified" name="PrintedTicketName" type="xs:string">
            <xs:annotation>
                <xs:documentation>Ticket name printed on actual ticket.  This could be as simple
                    like "Adult" or complex like "ADMAT3D".</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="TicketPriceScheme" type="xs:string">
            <xs:annotation>
                <xs:documentation>Price scheme of the ticket; gives extra information on the ticket
                    price.   A price scheme contains a set of tickets at specific prices, so you can
                    just assign a pricing scheme to a performance instead of having to assign
                    individual tickets. Examples might be:  "Matinee", "IMAX"</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="EventID" type="xs:string">
            <xs:annotation>
                <xs:documentation>ID of the event for which the ticket was purchased.  For a movie
                    theatre, this would contain the POS created performance id (uniquely identified
                    that performance in the POS).</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="EventName" type="xs:string">
            <xs:annotation>
                <xs:documentation>Name of event</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="EventBusinessDate" type="xs:date">
            <xs:annotation>
                <xs:documentation>Business date on which the event takes place</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="EventDateTime" type="xs:dateTime">
            <xs:annotation>
                <xs:documentation>Calendar date and time on which the event occurs. Note: The event
                    date can differ from the event business date.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="EventLocation" type="xs:string">
            <xs:annotation>
                <xs:documentation>Where the event is taking place (e.g. Auditorium number for a
                    movie theatre)</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="EventContentIDType">
        <xs:annotation>
            <xs:documentation>Content being shown at the event</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="Print" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>If there are multple copies of the content, which one is
                            this.  Note: Could hold the CPL in the future for digital
                            prints</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <xs:complexType name="AssociateBase">
        <xs:sequence>
            <xs:element form="qualified" name="AssociateID" type="OperatorCommonData">
                <xs:annotation>
                    <xs:documentation>identifier for the Associate </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Commission">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element form="qualified" minOccurs="0" name="Percentage"
                            type="PercentageCommonData"/>
                        <xs:element form="qualified" minOccurs="0" name="Amount"
                            type="AmountCommonData"/>
                    </xs:sequence>
                    <xs:attribute form="unqualified" name="CommissionOverrideFlag" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation> A flag denoting that the sale may have qualified for
                                the  commission, but the worker doesn't get it for some reason, i.e.
                                They are a manager.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute default="Add" form="unqualified" name="Action"
                        type="ActionCommonDataTypeCodes" use="optional"/>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Action">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element form="qualified" name="DateTime" type="xs:dateTime">
                            <xs:annotation>
                                <xs:documentation>When was the action performed</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute default="PlacingOrder" form="unqualified"
                        name="AssociateActionCodes" type="RetailTransactionAssociateAction"
                        use="optional">
                        <xs:annotation>
                            <xs:documentation>The Action being taken by this particular worker
                                within the context of this Retail Transaction.  One worker may
                                perfrom multiple different actions within one
                                transaction.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Spiff"
                type="SpiffType">
                <xs:annotation>
                    <xs:documentation>Bonus money paid by a vendor or a retailer to sales people for
                        selling specially designated merchandise.  spiff in a slang dictionary of
                        1859: "the percentage allowed by drapers to their young men when they effect
                        sale of old fashioned or undesirable stock". It seems to be connected with
                        the use of the word in that period to mean a dandy or somebody smartly
                        dressed (hence spiffy, and to spiff up - to improve the appearance of a
                        place or a person), but nobody seems to have been able to disentangle the
                        threads of which came first, or what influenced what, or where the word
                        originally came from. It’s certainly not an acronym, as words formed from
                        the initial letters of other words are rare before the
                        1930s.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute default="false" form="unqualified" name="CommissionGivenFlag"
            type="xs:boolean" use="optional"/>
    </xs:complexType>
    <!--
		Enumerated type for Associate@Action
	-->
    <xs:simpleType name="RetailTransactionAssociateAction">
        <xs:union memberTypes="RetailTransactionAssociateActionEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="RetailTransactionAssociateActionEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="PlacingOrder"/>
            <xs:enumeration value="CompletingOrder"/>
            <xs:enumeration value="DeliveringOrder"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="SpiffType">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Amount">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Percent" type="PercentageCommonData"/>
        </xs:sequence>
    </xs:complexType>
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--             Library Schemas              -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--             Derived Schemas             -->
    <!-- ============================ -->
    <!--
		Enumeration for disposal methods
	-->
    <xs:simpleType name="DisposalMethodTypeCode">
        <xs:union memberTypes="DisposalMethodTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="DisposalMethodTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Undecided"/>
            <xs:enumeration value="WriteOff"/>
            <xs:enumeration value="ReturnToStock"/>
            <xs:enumeration value="Transform"/>
            <xs:enumeration value="Repair"/>
            <xs:enumeration value="ReturnToManufacturer"/>
            <xs:enumeration value="ReturnToSupplier"/>
            <xs:enumeration value="Waste"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
        Complex & Simple types defining how a return is to be disposed of
    -->
    <xs:complexType name="DisposalBase">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="NewItemID" type="ItemIDCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="EPC" type="xs:string"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Reference"
                type="xs:string"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
            <xs:element form="qualified" minOccurs="0" name="RecallID" type="xs:string"/>
        </xs:sequence>
        <xs:attribute form="unqualified" name="Method" type="DisposalMethodTypeCode" use="required">
            <xs:annotation>
                <xs:documentation>Describes what to do with the returned item</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="SaleBase">
        <xs:complexContent>
            <xs:extension base="ItemDomainSpecific">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="Disposal" type="DisposalBase"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!-- 
        Return by customer to retailer
    -->
    <xs:complexType name="ReturnBase">
        <xs:complexContent>
            <xs:extension base="ItemDomainSpecific">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="Disposal" type="DisposalBase">
                        <xs:annotation>
                            <xs:documentation>Describes what to do with the returned
                                item</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="OperatorBypassApproval" type="ApprovalBase"/>
                    <xs:element form="qualified" minOccurs="0" name="To"
                        type="BusinessUnitCommonData">
                        <xs:annotation>
                            <xs:documentation>A unique identifier for the retail store, to where the
                                item will be returned. </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="Reason">
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="ReasonCodeCommonData"/>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--      Base Schemas            -->
    <!-- ============================ -->
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--      Base Schemas            -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--      Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================= -->
    <!--                    Order Quantity                 -->
    <!--  ============================= -->
    <xs:complexType name="OrderQuantityBase">
        <xs:simpleContent>
            <xs:extension base="QuantityCommonData">
                <xs:attribute form="unqualified" name="TypeCode" type="OrderQuantityTypeCodes"
                    use="optional">
                    <xs:annotation>
                        <xs:documentation>The number of ordered items that have been packed/shipped
                            in preparation for shipping</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!--
	 	OrderQuantity Type Codes
	 -->
    <xs:simpleType name="OrderQuantityTypeCodes">
        <xs:union memberTypes="OrderQuantityTypeCodesEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="OrderQuantityTypeCodesEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Picked"/>
            <xs:enumeration value="Shipped"/>
            <xs:enumeration value="Changed"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--      Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================= -->
    <!--  ============================= -->
    <!--
        CustomerOrder - Purchase of item that must be ordered by retailer for customer
        and will be delivered to customer by retailer when it is available. (backordered items)
    -->
    <xs:complexType name="CustomerOrderForDeliveryBase">
        <xs:complexContent>
            <xs:extension base="ItemDomainSpecific">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="Delivery" type="DeliveryBase"/>
                    <xs:element form="qualified" minOccurs="0" name="InventoryReservationID"
                        type="xs:string"/>
                    <xs:element form="qualified" minOccurs="0" name="From">
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="BusinessUnitCommonData"/>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="AccountNumber" type="xs:string"/>
                    <xs:element form="qualified" minOccurs="0" name="Deposit" type="xs:decimal"/>
                    <xs:element form="qualified" minOccurs="0" name="OrderQuantity"
                        type="OrderQuantityBase"/>
                </xs:sequence>
                <xs:attribute default="New" form="unqualified" name="OrderStatus"
                    type="OrderStatusTypeCode" use="optional">
                    <xs:annotation>
                        <xs:documentation>defines the status of this customer
                            order</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute form="unqualified" name="PreviousOrderStatus"
                    type="OrderStatusTypeCode" use="optional">
                    <xs:annotation>
                        <xs:documentation>A string denoting the state of the customer order before
                            it was changed by this control transaction.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="false" form="unqualified" name="StatusChangedFlag"
                    type="xs:boolean" use="optional">
                    <xs:annotation>
                        <xs:documentation>A flag denoting that the status of the line item has been
                            changed</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <xs:simpleType name="OrderStatusTypeCode">
        <xs:union memberTypes="OrderStatusEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="OrderStatusEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Canceled"/>
            <xs:enumeration value="Completed"/>
            <xs:enumeration value="Filled"/>
            <xs:enumeration value="Future"/>
            <xs:enumeration value="New"/>
            <xs:enumeration value="Printed"/>
            <xs:enumeration value="Partial"/>
            <xs:enumeration value="Return"/>
            <xs:enumeration value="Voided"/>
            <xs:enumeration value="Undefined"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--      Base Schemas            -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--      Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================= -->
    <!--  ============================= -->
    <!--
        CustomerOrder - Purchase of item that must be ordered by retailer for customer
        and will be picked up by the customer from the retailer when it is available. (backordered items)
    -->
    <xs:complexType name="CustomerOrderForPickupBase">
        <xs:complexContent>
            <xs:extension base="ItemDomainSpecific">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="Pickup" type="PickupBase"/>
                    <xs:element form="qualified" minOccurs="0" name="InventoryReservationID"
                        type="xs:string"/>
                    <xs:element form="qualified" minOccurs="0" name="From">
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="BusinessUnitCommonData"/>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="AccountNumber" type="xs:string"/>
                    <xs:element form="qualified" minOccurs="0" name="Deposit" type="xs:decimal"/>
                    <xs:element form="qualified" minOccurs="0" name="OrderQuantity"
                        type="OrderQuantityBase"/>
                </xs:sequence>
                <xs:attribute default="New" form="unqualified" name="OrderStatus"
                    type="OrderStatusTypeCode" use="optional">
                    <xs:annotation>
                        <xs:documentation>defines the status of this customer
                            order</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="New" form="unqualified" name="PreviousOrderStatus"
                    type="OrderStatusTypeCode" use="optional">
                    <xs:annotation>
                        <xs:documentation>A string denoting the state of the customer order before
                            it was changed by this control transaction.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="false" form="unqualified" name="StatusChangedFlag"
                    type="xs:boolean" use="optional">
                    <xs:annotation>
                        <xs:documentation>A flag denoting that the status of the line item has been
                            changed</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!-- 
        Complex & Simple types defining Kit or Combo sales & returns
    -->
    <xs:complexType name="KitMemberChoiceBase">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Sale" type="SaleBase"/>
            <xs:element form="qualified" minOccurs="0" name="Return" type="ReturnBase"/>
        </xs:sequence>
    </xs:complexType>
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--      Base Schemas            -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--      Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================= -->
    <!--  ============================= -->
    <!--
        Layaway (payment over time)
    -->
    <xs:complexType name="LayawayBase">
        <xs:complexContent>
            <xs:extension base="ItemDomainSpecific">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="InventoryReservationID"
                        type="xs:string"/>
                    <xs:element form="qualified" minOccurs="0" name="AccountNumber" type="xs:string"/>
                    <xs:element form="qualified" minOccurs="0" name="Deposit"
                        type="AmountCommonData"/>
                </xs:sequence>
                <xs:attribute default="false" form="unqualified" name="OverrideFlag"
                    type="xs:boolean" use="optional"/>
                <xs:attribute default="New" form="unqualified" name="Status"
                    type="LayawayStatusTypeCode" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- 
        Enumerated type for Layaway Status
    -->
    <xs:simpleType name="LayawayStatusTypeCode">
        <xs:union memberTypes="LayawayStatusTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="LayawayStatusTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="New"/>
            <xs:enumeration value="Expired"/>
            <xs:enumeration value="Completed"/>
            <xs:enumeration value="Deleted"/>
            <xs:enumeration value="Void"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="PreviousLayawayBase">
        <xs:complexContent>
            <xs:extension base="ItemDomainSpecific">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="AccountNumber" type="xs:string"/>
                    <xs:element form="qualified" minOccurs="0" name="AmountRemaining">
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="AmountCommonData"/>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
                <xs:attribute default="InProgress" form="unqualified" name="Action"
                    type="PreviousLayawayActionTypeCode" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="PreviousLayawayActionTypeCode">
        <xs:union memberTypes="PreviousLayawayActionTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="PreviousLayawayActionTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Completed"/>
            <xs:enumeration value="InProgress"/>
            <xs:enumeration value="Cancelled"/>
            <xs:enumeration value="Returnable"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--      Base Schemas            -->
    <!-- ============================ -->
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--             Library Schemas              -->
    <!-- ============================ -->
    <xs:simpleType name="ServiceLevelCode">
        <xs:annotation>
            <xs:documentation>enum codes from ANSI X12, Data Element 284:  Code indicating the level
                of transportation service or the billing service offered by the transportation
                carrier</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="01">
                <xs:annotation>
                    <xs:documentation>Bulk Commodity Train</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="09">
                <xs:annotation>
                    <xs:documentation>Premium Surface</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="3D">
                <xs:annotation>
                    <xs:documentation>Three Day Service</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="9A">
                <xs:annotation>
                    <xs:documentation>9 A.M.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AC">
                <xs:annotation>
                    <xs:documentation>Air Cargo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AE">
                <xs:annotation>
                    <xs:documentation>Air Economy</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AM">
                <xs:annotation>
                    <xs:documentation>A.M.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BC">
                <xs:annotation>
                    <xs:documentation>Business Class</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CB">
                <xs:annotation>
                    <xs:documentation>Consignee Billing Service</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CE">
                <xs:annotation>
                    <xs:documentation>Courier Express</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CG">
                <xs:annotation>
                    <xs:documentation>Ground</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CX">
                <xs:annotation>
                    <xs:documentation>Express Service</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="D1">
                <xs:annotation>
                    <xs:documentation>Delivery Scheduled Next Day by Cartage
                        Agent</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="D2">
                <xs:annotation>
                    <xs:documentation>Delivery scheduled second day by cartage
                        agent</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="D3">
                <xs:annotation>
                    <xs:documentation>Delivery scheduled third day by cartage
                        agent</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="DC">
                <xs:annotation>
                    <xs:documentation>Delivery Confirmation</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="DF">
                <xs:annotation>
                    <xs:documentation>Deferred Service</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="DR">
                <xs:annotation>
                    <xs:documentation>Delivery Confirmation Return</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="DS">
                <xs:annotation>
                    <xs:documentation>Door Service</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="DT">
                <xs:annotation>
                    <xs:documentation>Delivery Notification Only</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ES">
                <xs:annotation>
                    <xs:documentation>Expedited Service</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ET">
                <xs:annotation>
                    <xs:documentation>Proof of Delivery (POD) with Signature</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="FC">
                <xs:annotation>
                    <xs:documentation>First Class</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="G2">
                <xs:annotation>
                    <xs:documentation>Standard Service</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GP">
                <xs:annotation>
                    <xs:documentation>Express Service Plus</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GT">
                <xs:annotation>
                    <xs:documentation>Tracking - Ground</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="IA">
                <xs:annotation>
                    <xs:documentation>IATA</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="IE">
                <xs:annotation>
                    <xs:documentation>Expedited Service - Worldwide</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="IX">
                <xs:annotation>
                    <xs:documentation>Express Service - Worldwide</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ME">
                <xs:annotation>
                    <xs:documentation>Metro</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MW">
                <xs:annotation>
                    <xs:documentation>Multiweight</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ND">
                <xs:annotation>
                    <xs:documentation>Next Day Air</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NF">
                <xs:annotation>
                    <xs:documentation>Next Flight Out</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NH">
                <xs:annotation>
                    <xs:documentation>Next Day Hundred Weight</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NM">
                <xs:annotation>
                    <xs:documentation>Next Morning</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NS">
                <xs:annotation>
                    <xs:documentation>Not Served</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ON">
                <xs:annotation>
                    <xs:documentation>Overnight</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PA">
                <xs:annotation>
                    <xs:documentation>Primary Service Area - Next Day by 10:30
                        A.M.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PB">
                <xs:annotation>
                    <xs:documentation>Priority Mail</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PC">
                <xs:annotation>
                    <xs:documentation>Primary Service Area - Next Day By 9:30 AM</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PI">
                <xs:annotation>
                    <xs:documentation>Priority Mail Insured</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PM">
                <xs:annotation>
                    <xs:documentation>PM</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PN">
                <xs:annotation>
                    <xs:documentation>Primary Service Area - Next Day by Noon</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PO">
                <xs:annotation>
                    <xs:documentation>P.O. Box/Zip Code</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PR">
                <xs:annotation>
                    <xs:documentation>Primary Service Area - Next Day by 5:00
                        P.M.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PS">
                <xs:annotation>
                    <xs:documentation>Primary Service Area - Second Day by Noon</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="R1">
                <xs:annotation>
                    <xs:documentation>Passenger Service</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="R2">
                <xs:annotation>
                    <xs:documentation>Quality Intermodal High Speed 70 Miles Per Hour
                        (MPH)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="R3">
                <xs:annotation>
                    <xs:documentation>Other Intermodal and Stack Service</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="R4">
                <xs:annotation>
                    <xs:documentation>60 Miles Per Hour (MPH) Service</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="R5">
                <xs:annotation>
                    <xs:documentation>Manifest Freight</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="R6">
                <xs:annotation>
                    <xs:documentation>Circus Train</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="R7">
                <xs:annotation>
                    <xs:documentation>Work Train</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="R8">
                <xs:annotation>
                    <xs:documentation>Commuter Service</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="RS">
                <xs:annotation>
                    <xs:documentation>Authorized Return Service</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SA">
                <xs:annotation>
                    <xs:documentation>Same Day</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SC">
                <xs:annotation>
                    <xs:documentation>Second Day Air</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SD">
                <xs:annotation>
                    <xs:documentation>Saturday</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SE">
                <xs:annotation>
                    <xs:documentation>Second Day</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SG">
                <xs:annotation>
                    <xs:documentation>Standard Ground</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SH">
                <xs:annotation>
                    <xs:documentation>Second Day Hundred Weight</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SI">
                <xs:annotation>
                    <xs:documentation>Standard Ground Hundred Weight</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SM">
                <xs:annotation>
                    <xs:documentation>Second Morning</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SP">
                <xs:annotation>
                    <xs:documentation>Saturday Pickup</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ST">
                <xs:annotation>
                    <xs:documentation>Standard Class</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ZZ">
                <xs:annotation>
                    <xs:documentation>Mutually Defined</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <!--
		Enumerated type for Points Type attribute
	-->
    <xs:simpleType name="DeliverySequenceOrderTypeCode">
        <xs:union memberTypes="DeliverySequenceOrderTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="DeliverySequenceOrderTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="First"/>
            <xs:enumeration value="Second"/>
            <xs:enumeration value="Third"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--             Derived Schemas             -->
    <!-- ============================ -->
    <xs:complexType name="PreferredLocationBase">
        <xs:annotation>
            <xs:documentation>The Place where the customer preferrs the delivery</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                name="PreferredDateTime" type="xs:dateTime"/>
            <xs:element form="qualified" minOccurs="0" name="PreferredAddress">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="AddressCommonData"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="SpecialInstructions" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Information on where to put the item, for example "under the
                        chair" or "with the neighbor"</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="EstimatedDateTime" type="xs:dateTime"/>
        </xs:sequence>
        <xs:attribute form="unqualified" name="DeliverySequenceOrder"
            type="DeliverySequenceOrderTypeCode">
            <xs:annotation>
                <xs:documentation>The order of the preferred locations.  1 is the first preferred, 2
                    is the next preferred if not able to deliver to 1.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="Name" type="xs:string">
            <xs:annotation>
                <xs:documentation>Description of the location  for example, Minneapolis-St Paul
                    Airport</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <!-- ============================ -->
    <!--      Base Schemas            -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--      Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================= -->
    <!--  ============================= -->
    <xs:complexType name="PickupBase">
        <xs:complexContent>
            <xs:extension base="CustomerCommonData">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="PreferredDateTime"
                        type="xs:dateTime"/>
                    <xs:element form="qualified" minOccurs="0" name="ActualDateTime"
                        type="xs:dateTime"/>
                    <xs:element form="qualified" minOccurs="0" name="Method" type="xs:string"/>
                    <xs:element form="qualified" minOccurs="0" name="Notes" type="xs:string"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="PreferredLocation" type="PreferredLocationBase"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- ============================ -->
    <!--      Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================= -->
    <!--  ============================= -->
    <!-- 
        Return by customer for delivery by customer to retailer
    -->
    <xs:complexType name="ReturnForDeliveryBase">
        <xs:complexContent>
            <xs:extension base="ItemDomainSpecific">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="Disposal" type="DisposalBase"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="OperatorBypassApproval" type="ApprovalBase"/>
                    <xs:element form="qualified" minOccurs="0" name="To">
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="BusinessUnitCommonData"/>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="Reason">
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="ReasonCodeCommonData"/>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="Delivery" type="DeliveryBase"/>
                </xs:sequence>
                <xs:attribute default="Return" form="unqualified" name="OrderStatus"
                    type="OrderStatusTypeCode" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--      Base Schemas            -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--      Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================= -->
    <!--  ============================= -->
    <!-- 
        Return by customer for pickup by retailer
    -->
    <xs:complexType name="ReturnForPickupBase">
        <xs:complexContent>
            <xs:extension base="ItemDomainSpecific">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="Disposal" type="DisposalBase"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="OperatorBypassApproval" type="ApprovalBase"/>
                    <xs:element form="qualified" minOccurs="0" name="To">
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="BusinessUnitCommonData"/>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="Reason"
                        type="ReasonCodeCommonData"/>
                    <xs:element form="qualified" minOccurs="0" name="Pickup" type="PickupBase"/>
                </xs:sequence>
                <xs:attribute default="Return" form="unqualified" name="OrderStatus"
                    type="OrderStatusTypeCode" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <!--
		Enumerated type for Inventory Location Codes attribute
	-->
    <xs:simpleType name="InventoryLocationCodes">
        <xs:union memberTypes="InventoryLocationCodesEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="InventoryLocationCodesEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Bin"/>
            <xs:enumeration value="Shelf"/>
            <xs:enumeration value="EndCap"/>
            <xs:enumeration value="Pickface"/>
            <xs:enumeration value="Inspection"/>
            <xs:enumeration value="Dock"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="InventoryLocationCommonData">
        <xs:annotation>
            <xs:documentation>A physical place the retailer stores merchandise. It may be co-located
                at a Site with RetailStore, DistributionCenter, or AdministrativeCenter. It does not
                include containers, ships and trucks that are in transit.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="BusinessUnit">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="BusinessUnitCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="SellingLocation"
                type="xs:string">
                <xs:annotation>
                    <xs:documentation>An area of floor space or shelf space within the RetailStore
                        to which sales can be assigned. This may be assigned to or rented to a
                        Vendor</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="ExactLocation">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute form="unqualified" name="Level" type="xs:string"
                                use="optional"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute default="Shelf" form="unqualified" name="Location"
            type="InventoryLocationCodes" use="optional"/>
    </xs:complexType>
    <!-- ============================ -->
    <!--      Base Schemas            -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--             Library Schemas              -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--             Derived Schemas             -->
    <!-- ============================ -->
    <xs:complexType name="DeliveryBase">
        <xs:complexContent>
            <xs:extension base="CustomerCommonData">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="PreferredDateTime"
                        type="xs:dateTime">
                        <xs:annotation>
                            <xs:documentation>The date the customer would like to have the delivery
                                made Being Deprecated in favor of the one in Preferred Location
                                Type</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="ActualDateTime"
                        type="xs:dateTime">
                        <xs:annotation>
                            <xs:documentation>The actual date the delivery was
                                made</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="DueDate" type="xs:date">
                        <xs:annotation>
                            <xs:documentation>The date the delivery must be made by.  Deals mostly
                                with COD purchases</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="ActualShipDateTime"
                        type="xs:dateTime">
                        <xs:annotation>
                            <xs:documentation>The actual date the shipment took place from the
                                supplier</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="ExpectedShipmentDate"
                        type="xs:date">
                        <xs:annotation>
                            <xs:documentation>The anticipated date that the Item will be sent from
                                it’s physical location to the Customer.  </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="ActualDeliveryDateTime"
                        type="xs:dateTime">
                        <xs:annotation>
                            <xs:documentation>The actual date and time the item was
                                delivered.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="Method" type="xs:string"/>
                    <xs:element form="qualified" minOccurs="0" name="PaymentMethod" type="xs:string"/>
                    <xs:element form="qualified" minOccurs="0" name="AmountToCollect"
                        type="xs:decimal"/>
                    <xs:element form="qualified" minOccurs="0" name="Notes" type="xs:string"/>
                    <xs:element form="qualified" minOccurs="0" name="TrackingNumber"
                        type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The identifier placed on the package containing the
                                item(s) to aid in tracking the package</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="Courier" type="CourierBase">
                        <xs:annotation>
                            <xs:documentation>Name of the company delivering the
                                package</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="ShippingFee">
                        <xs:annotation>
                            <xs:documentation>Monetary amount of any shipping charge that is made
                                for the delivery</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="MonetaryAmountCommonData"/>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="Quantity">
                        <xs:annotation>
                            <xs:documentation>This quantity is delivered to this
                                destination</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="QuantityCommonData"/>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="ReceivingBusinessUnit">
                        <xs:annotation>
                            <xs:documentation>When a COD payment is received by the enterprise, this
                                is the business unit which receives the payment</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="BusinessUnitCommonData"/>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="PreferredLocation" type="PreferredLocationBase">
                        <xs:annotation>
                            <xs:documentation>The Place where the customer preferrs teh
                                delivery</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="CourierBase">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="TypeCode" type="CourierType" use="optional"/>
                <xs:attribute form="unqualified" name="ServiceLevelCode" type="ServiceLevelCode"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="CourierType">
        <xs:union memberTypes="CourierTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="CourierTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Express"/>
            <xs:enumeration value="Ground"/>
            <xs:enumeration value="Overnight"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--      Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================= -->
    <!--                     P O S L O G                     -->
    <!--  ============================= -->
    <!--
        Sale For Delivery by retailer to customer
    -->
    <xs:complexType name="SaleForDeliveryBase">
        <xs:complexContent>
            <xs:extension base="ItemDomainSpecific">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="Delivery" type="DeliveryBase"/>
                    <xs:element form="qualified" minOccurs="0" name="InventoryReservationID"
                        type="xs:string">
                        <xs:annotation>
                            <xs:documentation>A unique identifier for an inventory reservation, that
                                was made as part of POS processing of the line
                                item.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="From"
                        type="BusinessUnitCommonData">
                        <xs:annotation>
                            <xs:documentation>The retail store, from which the item being sold will
                                be taken when delivered or picked up.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="InventoryLocation" type="InventoryLocationCommonData"/>
                </xs:sequence>
                <xs:attribute default="New" form="unqualified" name="OrderStatus"
                    type="OrderStatusTypeCode" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--      Base Schemas            -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--      Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================= -->
    <!--  ============================= -->
    <!--
        Sale for Pickup by customer at retailer
    -->
    <xs:complexType name="SaleForPickupBase">
        <xs:complexContent>
            <xs:extension base="ItemDomainSpecific">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="Pickup" type="PickupBase"/>
                    <xs:element form="qualified" minOccurs="0" name="InventoryReservationID"
                        type="xs:string"/>
                    <xs:element form="qualified" minOccurs="0" name="From"
                        type="BusinessUnitCommonData"/>
                </xs:sequence>
                <xs:attribute default="New" form="unqualified" name="OrderStatus"
                    type="OrderStatusTypeCode" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!-- this the where other domain specific choices belong -->
    <xs:complexType name="KitMemberChoiceDomainSpecific">
        <xs:complexContent>
            <xs:extension base="KitMemberChoiceBase">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="SaleForDelivery"
                        type="SaleForDeliveryBase"/>
                    <xs:element form="qualified" minOccurs="0" name="SaleForPickup"
                        type="SaleForPickupBase"/>
                    <xs:element form="qualified" minOccurs="0" name="ReturnForDelivery"
                        type="ReturnForDeliveryBase"/>
                    <xs:element form="qualified" minOccurs="0" name="ReturnForPickup"
                        type="ReturnForPickupBase"/>
                    <xs:element form="qualified" minOccurs="0" name="Layaway" type="LayawayBase"/>
                    <xs:element form="qualified" minOccurs="0" name="CustomerOrderForDelivery"
                        type="CustomerOrderForDeliveryBase"/>
                    <xs:element form="qualified" minOccurs="0" name="CustomerOrderForPickup"
                        type="CustomerOrderForPickupBase"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!-- 
        Complex & Simple types defining Kit or Combo sales & returns
    -->
    <xs:complexType name="KitMemberBase">
        <xs:complexContent>
            <xs:extension base="KitMemberChoiceDomainSpecific">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="SequenceNumber"
                        type="SequenceNumberType"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="DateTime"
                        type="DateTimeCommonData"/>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
                        processContents="lax"/>
                </xs:sequence>
                <xs:attribute default="IsPartOf" form="unqualified" name="Action" type="KitAction"
                    use="optional"/>
                <xs:attribute form="unqualified" name="Name" type="xs:string" use="optional"/>
                <xs:attribute form="unqualified" name="EntryMethod" type="EntryMethodTypeCode"/>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="KitAction">
        <xs:union memberTypes="KitActionEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="KitActionEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="IsPartOf"/>
            <xs:enumeration value="AddsTo"/>
            <xs:enumeration value="IsRemovedFrom"/>
            <xs:enumeration value="Void"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!-- 
        Complex & Simple types defining Kit or Combo sales & returns
    -->
    <xs:complexType name="KitBase">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" name="Member">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:restriction base="KitMemberBase">
                            <xs:sequence>
                                <xs:sequence>
                                    <xs:element form="qualified" minOccurs="0" name="Sale"
                                        type="SaleBase"/>
                                    <xs:element form="qualified" minOccurs="0" name="Return"
                                        type="ReturnBase"/>
                                </xs:sequence>
                                <xs:sequence>
                                    <xs:element form="qualified" minOccurs="0"
                                        name="SaleForDelivery" type="SaleForDeliveryBase"/>
                                    <xs:element form="qualified" minOccurs="0" name="SaleForPickup"
                                        type="SaleForPickupBase"/>
                                    <xs:element form="qualified" minOccurs="0"
                                        name="ReturnForDelivery" type="ReturnForDeliveryBase"/>
                                    <xs:element form="qualified" minOccurs="0"
                                        name="ReturnForPickup" type="ReturnForPickupBase"/>
                                    <xs:element form="qualified" minOccurs="0" name="Layaway"
                                        type="LayawayBase"/>
                                    <xs:element form="qualified" minOccurs="0"
                                        name="CustomerOrderForDelivery"
                                        type="CustomerOrderForDeliveryBase"/>
                                    <xs:element form="qualified" minOccurs="0"
                                        name="CustomerOrderForPickup"
                                        type="CustomerOrderForPickupBase"/>
                                </xs:sequence>
                                <xs:sequence>
                                    <xs:element form="qualified" minOccurs="0" name="SequenceNumber"
                                        type="SequenceNumberType"/>
                                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                                        name="DateTime" type="DateTimeCommonData"/>
                                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
                                        processContents="lax"/>
                                </xs:sequence>
                            </xs:sequence>
                        </xs:restriction>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="ParentChildType">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="ItemID">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="ItemIDCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="LotNumber" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--      Base Schemas            -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--      Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="ReceiptImageType">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="ReceiptLine"
                type="ReceiptLineType"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Image">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:base64Binary">
                            <xs:attribute form="unqualified" name="TypeCode" type="ImageTypeCode"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attributeGroup ref="ImageAttributeGroup"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="ReceiptLineType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="Language" type="LanguageCode"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="ImageTypeCode">
        <xs:union memberTypes="ImageTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="ImageTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="HTML"/>
            <xs:enumeration value="JPG"/>
            <xs:enumeration value="PDF"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!--
		Enumerated type for Tax At Source Type attribute
	-->
    <xs:simpleType name="TaxAtSourceTypeCode">
        <xs:union memberTypes="TaxAtSourceTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="TaxAtSourceTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="TaxedAtOrigin"/>
            <xs:enumeration value="TaxedAtDestination"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
		Enumerated type for Tax Sub Type attribute
	-->
    <xs:simpleType name="TaxSubTypeCode">
        <xs:union memberTypes="TaxSubTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="TaxSubTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Standard"/>
            <xs:enumeration value="Luxury"/>
            <xs:enumeration value="Exempt"/>
            <xs:enumeration value="ZeroRated"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!--                      TAX Exempt              -->
    <!--  ============================ -->
    <xs:complexType name="TaxExemptionBase">
        <xs:sequence>
            <xs:element form="qualified" name="CustomerExemptionID" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="ExemptTaxableAmount">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" name="ExemptTaxAmount">
                <xs:annotation>
                    <xs:documentation>The monetary value of the retail transaction line that would
                        normally be taxable but, because of special circumstances, is not.  For
                        example, the sale of machinery is normally subject to sales tax.  However,
                        when the machinery is used in manufacturing, some taxing jurisdictions
                        consider the sale exempt.  A certificate is usually required for an
                        exemption to apply</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ReasonCode" type="xs:string"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                name="OperatorBypassApproval" type="ApprovalBase"/>
            <xs:element form="qualified" minOccurs="0" name="CertificateNumber" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="CertificateHolderName" type="xs:string"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!--                      TAX Override             -->
    <!--  ============================ -->
    <xs:complexType name="TaxOverrideBase">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="CustomerOverrideID" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="TaxableAmount">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" name="OriginalPercent" type="xs:decimal">
                <xs:annotation>
                    <xs:documentation>The tax rate percentage that is being
                        overriden</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="OriginalTaxAmount">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" name="NewTaxPercent" type="xs:decimal"/>
            <xs:element form="qualified" name="NewTaxAmount">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ReasonCode" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="CertificateNumber" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="CertificateHolderName" type="xs:string"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                name="OperatorBypassApproval" type="ApprovalBase"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================ -->
    <!--                      TAX                              -->
    <!--  ============================ -->
    <!-- 
    Tax LineItem for RetailTransaction
    -->
    <xs:complexType name="TaxBase">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="SequenceNumber"
                type="SequenceNumberType"/>
            <xs:element form="qualified" minOccurs="0" name="TaxAuthority" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A Tax Authority administers Taxes for one or more Tax
                        Jurisdictions.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TaxableAmount">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData">
                            <xs:attribute form="unqualified" name="TaxIncludedInTaxableAmountFlag"
                                type="xs:boolean">
                                <xs:annotation>
                                    <xs:documentation>Is the Tax Included in this taxable
                                        amount?</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TaxablePercentage"
                type="PercentageCommonData">
                <xs:annotation>
                    <xs:documentation>The percentage of the item's price that is taxable.  For
                        example, if one sells a book with a CD, the book may be taxable but the CD
                        isn't.  Therefore the taxable percentage in this example could be
                        50%</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Amount" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The monetary amount of Tax calculated by applying the
                        appropriate Tax Rules.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Percent" type="PercentageCommonData">
                <xs:annotation>
                    <xs:documentation>The percentage of the taxable portion of the taxable amount
                        that is being collected as tax by this Line Item.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ReasonCode" type="ReasonCodeCommonData"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="TaxRuleID"
                type="xs:string">
                <xs:annotation>
                    <xs:documentation>The ID for the Rule under which this tax was calculated, i.e.
                        Tax Free Weekend</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Rounding" type="RoundingCommonData">
                <xs:annotation>
                    <xs:documentation>Indicates the amount the taxes were
                        rounded.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="TaxGroupID"
                type="TaxGroupIDCommonData">
                <xs:annotation>
                    <xs:documentation>An ID for a group of Items to which a Tax Authority defines
                        Tax Group Rules</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                name="TaxJurisdictionID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A Tax Jurisdiction is a federal, state, or local institution
                        to which a Tax Authority distributes taxes that the authority has
                        collected.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute default="Sales" form="unqualified" name="TaxType" type="TaxTypeCode"
            use="optional">
            <xs:annotation>
                <xs:documentation>A code denoting the type of tax being collected on behalf of the
                    TaxAuthority by the TaxGroupRule</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="TaxSubType" type="TaxSubTypeCode" use="optional">
            <xs:annotation>
                <xs:documentation>A code denoting a type of sub-tax being collected on behalf of the
                    TaxAuthority by the TaxGroupRule, for example, standard, luxury, exempt, zero
                    rated</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute default="TaxedAtOrigin" form="unqualified" name="TaxAtSource"
            type="TaxAtSourceTypeCode" use="optional">
            <xs:annotation>
                <xs:documentation>A code denoting that the tax being collected is either from where
                    the items was shipped or to where it is being shipped</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute default="Normal" form="unqualified" name="NormalTaxType" type="NormalTax"
            use="optional">
            <xs:annotation>
                <xs:documentation>A code denoting that normal or extra-ordinary taxes are being
                    collected.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute default="Sale" form="unqualified" name="TypeCode"
            type="TaxSaleTypeCodeEnumeration" use="optional"/>
    </xs:complexType>
    <!--
		Enumerated type forTax Type Code attribute
	-->
    <xs:simpleType name="TaxSaleTypeCode">
        <xs:union memberTypes="TaxTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="TaxSaleTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Sale"/>
            <xs:enumeration value="Refund"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
        Enumerated type for Normal Tax attribute
        Identifies where Taxed
    -->
    <xs:simpleType name="NormalTax">
        <xs:union memberTypes="NormalTaxEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="NormalTaxEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Normal"/>
            <xs:enumeration value="Exceptional"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--      Base Schemas            -->
    <!-- ============================ -->
    <!--
	- Major Version 6.0.0
	- split POSLog into components
	- added type code to promotion id to identify what the number represents
	- added Description to Retail Price Modifier Base 
	- added Item Link to be able to link the Retail Price Modifier to the item which triggered the price modification
-->
    <!--
		Card Account Action 
	-->
    <xs:simpleType name="CardAction">
        <xs:union memberTypes="CardActionEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="CardActionEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Issue"/>
            <xs:enumeration value="Redeem"/>
            <xs:enumeration value="Update"/>
            <xs:enumeration value="Close"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
		Enumerated type for Discount Benefit Type attribute
	-->
    <xs:simpleType name="DiscountBenefitTypeCode">
        <xs:union memberTypes="DiscountBenefitTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="DiscountBenefitTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Customer"/>
            <xs:enumeration value="Worker"/>
            <xs:enumeration value="Manager"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
        Enumerated type Amount@Action
    -->
    <xs:simpleType name="RetailPriceModifierAmountAction">
        <xs:union memberTypes="RetailPriceModifierAmountActionEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="RetailPriceModifierAmountActionEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Add"/>
            <xs:enumeration value="Subtract"/>
            <xs:enumeration value="Replace"/>
            <xs:enumeration value="For"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
		Enumerated type for Response Type attribute
	-->
    <xs:simpleType name="RetailPriceModifierLinkTypeCode">
        <xs:union memberTypes="RetailPriceModifierLinkTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="RetailPriceModifierLinkTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Add"/>
            <xs:enumeration value="Remove"/>
            <xs:enumeration value="Replace"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
        Enumerated type Account Codes for payment on account
    -->
    <xs:simpleType name="RetailTransactionAccountCode">
        <xs:union memberTypes="RetailTransactionAccountCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="RetailTransactionAccountCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Unspecified"/>
            <xs:enumeration value="HouseAccount"/>
            <xs:enumeration value="Layaway"/>
            <xs:enumeration value="Order"/>
            <xs:enumeration value="AccountInvoice"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============= -->
    <!-- Base Schemas -->
    <!-- ============= -->
    <!--
        Complex & Simple types defining how & why a retail price was modified
    -->
    <xs:complexType name="RetailPriceModifierBase">
        <xs:sequence>
            <xs:element form="qualified" name="SequenceNumber" type="SequenceNumberType"/>
            <xs:element form="qualified" minOccurs="0" name="Amount">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData">
                            <xs:attribute form="unqualified" name="Action"
                                type="RetailPriceModifierAmountAction" use="required"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Percent">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="PercentageCommonData">
                            <xs:attribute form="unqualified" name="Action"
                                type="RetailPriceModifierPercentAction" use="required"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ExpirationDate" type="xs:date"/>
            <xs:element form="qualified" minOccurs="0" name="PreviousPrice">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="UnitPriceCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="NewPrice">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="UnitPriceCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PromotionID">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute form="unqualified" name="TypeCode" type="ItemIDTypeCode"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="MerchandiseHierarchy"
                type="MerchandiseHierarchyCommonData">
                <xs:annotation>
                    <xs:documentation>Allows one to assign a promotion(coupon) to a particular
                        department</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Description"
                type="DescriptionCommonData"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="ItemLink"
                type="SequenceNumberType">
                <xs:annotation>
                    <xs:documentation>Ties this price modifier to one or more items to which it can
                        apply</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                name="RetailPriceModifierLink">
                <xs:annotation>
                    <xs:documentation>If this price modifier modifys antoher price modifier this
                        links to the other price modifier being modified.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="SequenceNumberType">
                            <xs:attribute form="unqualified" name="TypeCode"
                                type="RetailPriceModifierLinkTypeCode"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Quantity" type="QuantityCommonData">
                <xs:annotation>
                    <xs:documentation>RetailPriceModifer is intended to record a modification in
                        price to a single item and is then implicitly multiplied by the
                        LineItem/Sale/Quantity, however if Quantity &gt; 1 and for anything other than a
                        simple price alteration the model fails. For example; with "Deal Pricing"
                        Item X is £1.00 each or 3 for £2.50, and 12 are purchased on a single
                        LineItem rather than separate LineItems - what goes into Retail Price
                        Modifier if the Deal Pricing is accounted as £0.50 off every third item as a
                        Line Discount not a Transaction Discount? Quantity is added to
                        RetailPriceModifier to indicate the number of times this RetailPriceModifier
                        is used for this LineItem. So in the example above we have a LineItem with
                        Quantity=12, ActualSalesUnitPrice=1.00, ExtendedAmount=10.00 and a
                        RetailPriceModifier with Amount=0.50 (Action=Subtract), the Promotion
                        references and Quantity=3. A store issued paper coupon for .50 off a store
                        brand is included three times in the flier.  So, a customer may arrive with
                        three coupons of the same type which can be entered with the QTY key. Use
                        Case: A manufacturer coupon for .40 off spaghetti sauce can be entered with
                        quantity when the customer buys multiple jars and presents more than one of
                        the same coupon.  sometimes coupons are entered with a quantity
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ReasonCode" type="xs:string"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                name="OperatorBypassApproval" type="ApprovalBase"/>
            <xs:element form="qualified" minOccurs="0" name="Rounding" type="RoundingCommonData">
                <xs:annotation>
                    <xs:documentation>The amount this price modifier was rounded</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute default="Customer" form="unqualified" name="DiscountBenefit"
            type="DiscountBenefitTypeCode" use="optional">
            <xs:annotation>
                <xs:documentation>identifies who benefits from this discount, customer,
                    etc.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute default="Promotion" form="unqualified" name="MethodCode"
            type="RetailPriceModifierMethodCode" use="optional">
            <xs:annotation>
                <xs:documentation>Describes the type of discount applied to this
                    item</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute default="Redeem" form="unqualified" name="CardAction" type="CardAction">
            <xs:annotation>
                <xs:documentation>Indicates the aciton performed on this retail price modifier.  For
                    example a rebate may be issued.  Most will be redeem.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute default="false" form="unqualified" name="DuplicateFlag" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>Inidcates this is a duplicate price modifier.  Used in case
                    multiple "coupons" or "rebates" are used on this item</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="WorkstationType" type="WorkstationIDTypeCode">
            <xs:annotation>
                <xs:documentation>Identifies the source for this price modifier.  For example, was
                    the rebate given at the store or by a website</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <!--
        Enumerated type @MethodCode
    -->
    <xs:simpleType name="RetailPriceModifierMethodCode">
        <xs:union memberTypes="RetailPriceModifierMethodCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="RetailPriceModifierMethodCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="PriceOverride"/>
            <xs:enumeration value="PriceRule"/>
            <xs:enumeration value="Promotion"/>
            <xs:enumeration value="SeniorCitizen"/>
            <xs:enumeration value="Markdown">
                <xs:annotation>
                    <xs:documentation>A permanent reduction from original or previous retail price,
                        generally as a result of reduced demand for the item in question or an end
                        of season for a seasonal item.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Coupon">
                <xs:annotation>
                    <xs:documentation>Retail Coupon is a ticket or document issued by the retailer
                        that allows the customer a reduction in the sales price of an article when
                        the customer presents the coupon to the retailer. The Purchaser receives an
                        immediate reduction of the selling price at the point of sale. There is no
                        reimbursement to the retailer for the reduction, and a particular retailer's
                        store coupon is generally of no value at another retailer. Retailer's coupon
                        is also known as store coupon. This is considered a type of
                        promotion.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="QuantityDiscount">
                <xs:annotation>
                    <xs:documentation>Quantity Discount is a reduction of the price offered by the
                        retailer at the time of the sale if the purchaser buys more than a certain
                        number of a particular article. The purchaser receives an immediate
                        reduction of the selling price at the point of sale.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Rebate">
                <xs:annotation>
                    <xs:documentation>Rebates are offered by the manufacturer to the consumer at the
                        time of the sale.  Unless otherwise noted, it is assume that the price
                        reduction is taken at the time of the sale. Rebates may also be issued in
                        form of a price reduction after the sale and are contingent upon the
                        purchaser taking additional action. For example a mail-in rebate only
                        reduces the selling price after the sale.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CashDiscount">
                <xs:annotation>
                    <xs:documentation>Cash Discount is an allowance offered by the retailer if the
                        purchaser pays cash at the time of sale rather than deferring payment. The
                        purchaser receives an immediate reduction of the selling price at the point
                        of sale. </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TradeDiscount">
                <xs:annotation>
                    <xs:documentation>Trade Discount is a reduction in the established price allowed
                        by the retailer if the purchaser is involved in a particular trade or
                        industry. Trade discounts are common in sales of hardware and building
                        supplies.  The purchaser receives an immediate reduction of the selling
                        price at the point of sale.  The selling price is reduced after the sale;
                        the reduction is contingent upon further action by the
                        purchaser.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TradeInKind">
                <xs:annotation>
                    <xs:documentation>While not technically a discount, a trade in kind can be
                        thought of as tender that causes a reduction in the sales price of an item
                        effectuated because the seller accepted an item in trade from the consumer.
                        Trade-in goods are given in whole or, usually, part payment of a
                        purchase.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PromptPaymentDiscount">
                <xs:annotation>
                    <xs:documentation>Early/Prompt Payment Discount is a reduction of the invoice
                        price offered by the retailer if the purchaser pays the invoice within a
                        specified period of time after the invoice date. The selling price is
                        reduced after the sale; the reduction is contingent upon further action by
                        the purchaser.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GeneralDiscount">
                <xs:annotation>
                    <xs:documentation>General Discount is an allowance offered by the retailer to
                        the purchaser. The retailer may offer a discount if the purchaser pays for
                        the item or service at the time of sale rather than deferring payment.
                        General discounts are fairly common to certain industries or services and
                        are usually offered across the board to all customers. The purchaser
                        receives an immediate reduction of the selling price at the point of
                        sale.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GiftVoucher">
                <xs:annotation>
                    <xs:documentation>While not technically a discount, a gift voucher can be
                        thought of as tender that causes a reduction in the sales price of an item.
                        It is a credit issued by a retailer or third party that is exchangeable for
                        goods/services from particular retail merchant(s).</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="FlexibleDiscount">
                <xs:annotation>
                    <xs:documentation>Flexible Discount is an allowance offered by the retailer to
                        the purchaser, usually in a spontaneous manner. Flexible discounts can be
                        offered across product lines without the purchaser having to meet any
                        specific business criteria related to the product or service. The purchaser
                        receives an immediate reduction of the selling price at the point of sale.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="RewardProgram">
                <xs:annotation>
                    <xs:documentation>A coupon, certificate, or discount provided by a retailer to a
                        customer as part of a reward program. The retailer receives no (third party)
                        reimbursement for the value of the coupon, certificate or discount.  This
                        discount type is designed to be broader than a retail coupon.  The selling
                        price is reduced after the sale; the reduction is contingent upon further
                        action by the purchaser.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ManufacturerReward">
                <xs:annotation>
                    <xs:documentation>A coupon, certificate, or discount provided by a manufacturer
                        to a retail purchaser as part of a reward program. The manufacturer (third
                        party) reimburses the retailer for the value of the coupon, certificate or
                        discount.  This discount type is designed to be broader than a manufacturer
                        coupon.  The selling price is reduced after the sale; the reduction is
                        contingent upon further action by the purchaser.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CreditCardReward">
                <xs:annotation>
                    <xs:documentation>A coupon, certificate, or discount provided by a credit card
                        company to the credit card holder/patron, as part of a reward program, for
                        use in a subsequent retail purchase from an unrelated vendor.  The third
                        party credit card company reimburses the retailer for the value of the
                        coupon, certificate or discount.  The selling price is reduced after the
                        sale; the reduction is contingent upon further action by the
                        purchaser.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TargetedOffer">
                <xs:annotation>
                    <xs:documentation>This discount was sent to an individual typically a member of
                        a reward program or one being incentivized to join a reward
                        program</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--      Base Schemas            -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--      Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================= -->
    <!--  ============================= -->
    <xs:complexType name="PriceDerivationRuleBase">
        <xs:sequence>
            <xs:element form="qualified" name="PriceDerivationRuleID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A unique identifier of the price
                        derivation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Eligibility"
                type="PriceDerivationRuleEligibility"/>
            <xs:choice minOccurs="0">
                <xs:element form="qualified" name="Amount">
                    <xs:complexType>
                        <xs:simpleContent>
                            <xs:extension base="AmountCommonData">
                                <xs:attribute form="unqualified" name="Action"
                                    type="RetailPriceModifierAmountAction" use="required"/>
                            </xs:extension>
                        </xs:simpleContent>
                    </xs:complexType>
                </xs:element>
                <xs:element form="qualified" name="Percent">
                    <xs:complexType>
                        <xs:simpleContent>
                            <xs:extension base="PercentageCommonData">
                                <xs:attribute form="unqualified" name="Action"
                                    type="RetailPriceModifierPercentAction" use="required"/>
                            </xs:extension>
                        </xs:simpleContent>
                    </xs:complexType>
                </xs:element>
            </xs:choice>
            <xs:element form="qualified" minOccurs="0" name="ReasonCode">
                <xs:annotation>
                    <xs:documentation>A code detailing the reason for applying this
                        PriceDerivationRule.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="ReasonCodeCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute default="false" form="unqualified" name="IncludedInBestDealFlag"
            type="xs:boolean" use="optional">
            <xs:annotation>
                <xs:documentation>the best deal pricing algorithm triggered the discount for this
                    item or group of items. So when the 12 bottles are purchased; the item indicated
                    is included in the best pricing algorithm based on whatever pricing rules you
                    have in place.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute default="false" form="unqualified" name="AdvancePriceRuleFlag"
            type="xs:boolean" use="optional"/>
        <xs:attribute form="unqualified" name="AssignmentBasis" type="AssignmentBasisTypeCode"
            use="optional">
            <xs:annotation>
                <xs:documentation>A code denoting the basis on which the PriceDerivationRule is
                    assigned to a LineItem</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="Method" type="PriceDerivationMethodCode"
            use="optional">
            <xs:annotation>
                <xs:documentation>A code denoting what sort of discount is to be granted with this
                    Price Derivation Rule</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="AccountingType" type="AccountingTypeCode"
            use="optional">
            <xs:annotation>
                <xs:documentation>A code denoting how the price derivation is to be accounted for in
                    the store's general ledger</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="ApplicationType"
            type="PriceDerivationApplicationTypeCode" use="optional">
            <xs:annotation>
                <xs:documentation>The discount type code from the PriceDerivationRule
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="Reference" type="PriceDerivationReferenceTypeCode"
            use="optional">
            <xs:annotation>
                <xs:documentation>The discount reference ID from the PriceDerivationRule
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="ComparisonBasis"
            type="PriceDerivationComparisonBasisTypeCode" use="optional">
            <xs:annotation>
                <xs:documentation>A code denoting the comparison basis that was used when applying
                    this PriceDerivationRule</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>
    <xs:simpleType name="AssignmentBasisTypeCode">
        <xs:union memberTypes="AssignmentBasisTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="AssignmentBasisTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Item"/>
            <xs:enumeration value="Manual"/>
            <xs:enumeration value="Customer"/>
            <xs:enumeration value="StoreCoupon"/>
            <xs:enumeration value="Employee"/>
            <xs:enumeration value="Other"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="PriceDerivationMethodCode">
        <xs:union memberTypes="PriceDerivationMethodCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="PriceDerivationMethodCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="NotInUse"/>
            <xs:enumeration value="ByPercentage"/>
            <xs:enumeration value="ByAmount"/>
            <xs:enumeration value="FixedPrice"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="AccountingTypeCode">
        <xs:union memberTypes="AccountingTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="AccountingTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Discount"/>
            <xs:enumeration value="Markdown"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="PriceDerivationApplicationTypeCode">
        <xs:union memberTypes="PriceDerivationApplicationTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="PriceDerivationApplicationTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Manual"/>
            <xs:enumeration value="Item"/>
            <xs:enumeration value="MixMatch"/>
            <xs:enumeration value="FixedPrice"/>
            <xs:enumeration value="PromotionalAward"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="PriceDerivationReferenceTypeCode">
        <xs:union memberTypes="PriceDerivationReferenceTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="PriceDerivationReferenceTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Item"/>
            <xs:enumeration value="Manual"/>
            <xs:enumeration value="Customer"/>
            <xs:enumeration value="StoreCoupon"/>
            <xs:enumeration value="Employee"/>
            <xs:enumeration value="Other"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="PriceDerivationComparisonBasisTypeCode">
        <xs:union memberTypes="PriceDerivationComparisonBasisTypeCodeEnumeration TypeCodeExtension"
        />
    </xs:simpleType>
    <xs:simpleType name="PriceDerivationComparisonBasisTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="ItemID"/>
            <xs:enumeration value="DepartmentID"/>
            <xs:enumeration value="MerchandiseClass"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="PriceDerivationRuleEligibility">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="ReferenceID" type="xs:string"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
            <xs:element form="qualified" name="ThresholdTypeCode"/>
            <xs:element form="qualified" name="ThresholdQuantity"/>
            <xs:element form="qualified" name="IntervalQuantity"/>
            <xs:element form="qualified" name="IntervalAmount"/>
            <xs:element form="qualified" name="LimitQuantity"/>
            <xs:element form="qualified" name="LimitAmount"/>
        </xs:sequence>
        <xs:attribute form="unqualified" name="Type" type="DerivationRuleEligibilityType"
            use="required"/>
    </xs:complexType>
    <!--    	-->
    <xs:simpleType name="DerivationRuleEligibilityType">
        <xs:union memberTypes="DerivationRuleEligibilityTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="DerivationRuleEligibilityTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Item"/>
            <xs:enumeration value="MerchandiseClass"/>
            <xs:enumeration value="Customer"/>
            <xs:enumeration value="CustomerGroup"/>
            <xs:enumeration value="CustomerAccount"/>
            <xs:enumeration value="Employee"/>
            <xs:enumeration value="CalendarPeriod"/>
            <xs:enumeration value="Brand"/>
            <xs:enumeration value="PriceLine"/>
            <xs:enumeration value="TotalBasket"/>
            <xs:enumeration value="StoreCoupon"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--      Derived Schemas         -->
    <!-- ============================ -->
    <!--
        Complex & Simple types defining how & why a retail price was modified
    -->
    <xs:complexType name="RetailPriceModifierDomainSpecific">
        <xs:complexContent>
            <xs:extension base="RetailPriceModifierBase">
                <xs:sequence>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="PriceDerivationRule" type="PriceDerivationRuleBase"/>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
                        processContents="lax"/>
                </xs:sequence>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- ====================== -->
    <!--       Library Schemas        -->
    <!-- ====================== -->
    <xs:complexType name="ThresholdTierCommonData">
        <xs:sequence>
            <xs:element form="qualified" name="MinimalAmount" type="MonetaryAmountCommonData">
                <xs:annotation>
                    <xs:documentation>Lower floor of the tier amount</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="MaximumAmount"
                type="MonetaryAmountCommonData">
                <xs:annotation>
                    <xs:documentation>Upper ceiling of the tier amount</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="TierRate" type="PercentageCommonData">
                <xs:annotation>
                    <xs:documentation>Rate applied at the tier defined by the min and max
                        amount</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute form="unqualified" name="RelativeOrder" type="xs:integer">
            <xs:annotation>
                <xs:documentation>Ordinal Position of the tier amoung a set of
                    tiers</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <!-- Threshold Type Code-->
    <xs:simpleType name="ThresholdTypeCode">
        <xs:union memberTypes="ThresholdTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="ThresholdTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="SingleRate"/>
            <xs:enumeration value="MultiRate"/>
            <xs:enumeration value="ExemptEntireAmount"/>
            <xs:enumeration value="TaxEntireAmount"/>
            <xs:enumeration value="TaxAboveThreshold"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="TaxDomainSpecific">
        <xs:complexContent>
            <xs:extension base="TaxBase">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="TaxExemption"
                        type="TaxExemptionBase"/>
                    <xs:element form="qualified" minOccurs="0" name="TaxOverride"
                        type="TaxOverrideBase"/>
                    <xs:element form="qualified" minOccurs="0" name="Address"
                        type="AddressCommonData"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="TaxResultType" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>information returned as a part of a tax
                                inquiry</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="TaxPerUnitAmount"
                        type="AmountCommonData">
                        <xs:annotation>
                            <xs:documentation>The set monetary amount of a Tax or Fee that may be
                                imposed on a per unit basis of the tem(s) involved in the retail
                                transaction</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="DeliverToTaxRegion"
                        type="TaxPhysicalLocationType"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="ThresholdTier" type="ThresholdTierCommonData"/>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
                        processContents="lax"/>
                </xs:sequence>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--  ============================ -->
    <!--                        ITEM                            -->
    <!--  ============================ -->
    <xs:complexType name="ItemBase">
        <xs:annotation>
            <xs:documentation>A line item component of a RetailTransaction that records the exchange
                in ownership of a merchandise item (i.e. a sale or return) or the sale or refund
                related to a service</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice maxOccurs="4">
                <xs:choice>
                    <xs:element form="qualified" name="POSIdentity"
                        type="RetailTransactionPOSIdentity"/>
                    <xs:element form="qualified" name="ItemID">
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="ItemIDCommonData"/>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element form="qualified" name="SpecialOrderNumber" type="xs:string"/>
                </xs:choice>
                <xs:element form="qualified" maxOccurs="unbounded" name="MerchandiseHierarchy"
                    type="MerchandiseHierarchyCommonData"/>
            </xs:choice>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="LotNumber"
                type="xs:string"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="CountryOfOrigin"
                type="CountryOfOriginCommonData"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Description"
                type="DescriptionCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="UnitCostPrice"
                type="UnitPriceCommonData">
                <xs:annotation>
                    <xs:documentation>The unit cost of the Item to the retail enterprise at the time
                        of the Transaction.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="UnitListPrice"
                type="UnitPriceCommonData">
                <xs:annotation>
                    <xs:documentation>The unit MSRP of the Item at the time of the
                        Transaction</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="RegularSalesUnitPrice"
                type="UnitPriceCommonData">
                <xs:annotation>
                    <xs:documentation>The regular or lookup per-unit price for the item before any
                        discounts or surcharges have been applied.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="SuggestedPrice"
                type="UnitPriceCommonData">
                <xs:annotation>
                    <xs:documentation>The suggested price to report to the customer for this
                        item</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ActualSalesUnitPrice"
                type="ActualSalesUnitPriceType">
                <xs:annotation>
                    <xs:documentation>the amount a signle item sold for taking into account
                        discounts and surcharges. The amount charged the customer (ExtendedAmount)
                        takes into account this number times quantity.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ExtendedAmount"
                type="ExtendedAmountType">
                <xs:annotation>
                    <xs:documentation>The acutal amount this item sells for.  It is the
                        ActualSalesUnitPrice times the quantity taking into account any retail price
                        modifiers.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="DiscountAmount" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The total discount applied to the Price of this item being
                        sold</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ExtendedDiscountAmount"
                type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The total discount applied to this item</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Quantity"
                type="QuantityCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="WICQuantity" type="QuantityCommonData">
                <xs:annotation>
                    <xs:documentation>The quantity of the item that is covered by a WIC check.  For
                        example, there can be a quantity of 6 items but there is a maximum of 4 that
                        are WIC qualified for this purchase.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Associate"
                type="AssociateBase"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                name="RetailPriceModifier" type="RetailPriceModifierDomainSpecific"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Modification"
                type="ModificationBase">
                <xs:annotation>
                    <xs:documentation>Identifies things that can be done to this item prior to
                        delivery, i.e. cook the steak well done</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Tax"
                type="ItemTaxType"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="SerialNumber"
                type="TicketSerialNumberType"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="TransactionLink">
                <xs:annotation>
                    <xs:documentation>link to a previous RetailTransaction</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="TransactionLinkCommonData">
                            <xs:anyAttribute namespace="##other" processContents="lax"/>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="ItemLink">
                <xs:annotation>
                    <xs:documentation>SequenceNumber of another related RetailTransactionLineItem in
                        the same transaction</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="SequenceNumberType">
                            <xs:anyAttribute namespace="##other" processContents="lax"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Rounding" type="RoundingCommonData">
                <xs:annotation>
                    <xs:documentation>An amount denoting how the calculated price of the LineItem
                        was rounded to make it match the available denominations of the
                        currency.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Item"
                type="ItemType">
                <xs:annotation>
                    <xs:documentation>Allows easy management of  components of items, such as
                        onions, ketchup, etc. or replacing a large drink with a small drink in a
                        combo.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Kit" type="KitBase">
                <xs:annotation>
                    <xs:documentation>Identifies the components to the kit identified by this line
                        item.  For example, line item could be a stereo and the kit components would
                        be the speakers and amplifier, each having its own identification
                        information</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Combo"
                type="KitBase">
                <xs:annotation>
                    <xs:documentation>Replace term "Kit" because Kit isn't appropriate for
                        foodservice equivalent (functionally equivalent to Kit) - A collection of
                        items that is priced and sold as a single item, but which is exploded into
                        its constituent items for the purposes of tracking
                        inventory.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Division"
                type="DivisionType">
                <xs:annotation>
                    <xs:documentation>Allows reporting ingredients on a particular portion of a
                        pizza or a sandwich or etc. for example, one side of the pizza with
                        pepporoni and sausage while the other side has cheese.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="RegistryID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The Gift Registry ID</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="LoyaltyAccount">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="LoyaltyAccountCommonData"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="GiftReceiptQuantity"
                type="QuantityCommonData">
                <xs:annotation>
                    <xs:documentation>The number of this item which are gifts.  This will be less or
                        equal to the quantity.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                name="GiftReceiptDateTime" type="DateTimeCommonData">
                <xs:annotation>
                    <xs:documentation>The various times that can be associated with a gift
                        receipt</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ReturnPolicy" type="ReturnPolicyType"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Ticket"
                type="TicketCommonData">
                <xs:annotation>
                    <xs:documentation>Contains Ticket specific Information</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Parent"
                type="ParentChildType">
                <xs:annotation>
                    <xs:documentation>Provides the ability to support the “one up, one down” rule
                        means that each participant in the fresh supply chain must be able to
                        identify the source of all the inputs which went into a particular
                        output.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Child"
                type="ParentChildType">
                <xs:annotation>
                    <xs:documentation>Provides the ability to support the “one up, one down” rule
                        means that each participant in the fresh supply chain must be able to
                        identify the source of all the inputs which went into a particular
                        output.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="ReceiptLine"
                type="ReceiptLineItemType">
                <xs:annotation>
                    <xs:documentation>this is to add line item specific messages to be added to the
                        receipt in context.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute default="Stock" form="unqualified" name="ItemType"
            type="RetailTransactionItemType" use="optional"/>
        <xs:attribute form="unqualified" name="ItemSubType" type="RetailTransactionItemSubType"
            use="optional">
            <xs:annotation>
                <xs:documentation>A code denoting what kind of further processing is required for
                    this particular item</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute default="false" form="unqualified" name="EquivalentItemFlag" type="xs:boolean"
            use="optional">
            <xs:annotation>
                <xs:documentation>Indicates this item is an equivalent item to the primary item in
                    the kit/combo.  Used to indicate a substitution was made which did not change
                    the price of the item in a kit.  A flag noting that this item is being sold as
                    an equivalent to the item being sold.  For example, the item is soft drink from
                    a dispenser; coke, pepsi, ... are equivalents</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute default="false" form="unqualified" name="FoodstampableFlag" type="xs:boolean"
            use="optional">
            <xs:annotation>
                <xs:documentation>Identifies this item as qualifying for
                    foodstamps</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute default="false" form="unqualified" name="NotNormallyStockedFlag"
            type="xs:boolean">
            <xs:annotation>
                <xs:documentation>some sales and returns can be for items that are not normally
                    stocked and this has implications for downstream stock systems and analysis –
                    e.g. do not replenish as item is not supposed to be here, or this item has been
                    returned expect it back at warehouse.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute default="true" form="unqualified" name="TaxableFlag" type="xs:boolean"
            use="optional">
            <xs:annotation>
                <xs:documentation>Identifies this item as a taxable item</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="ItemRestrictionsApplyFlag" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>A flag to signify that specific groups of items cannot be
                    purchased using certain tender types. For example, food stamps cannot be used to
                    purchase alcohol or tobacco items.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="ReturnableFlag" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>Indicates whether this item can be returned</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="ReserveFlag" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>tells the inventory system to put a reservation on this
                    item</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="NonDiscountableFlag" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>This item can not be discounted.  For example, a coupon for a free
                    diet drink but the deposit must be paid by the customer.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="FixedPriceFlag" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>The price for this item cannot be changed.  that is, this price
                    comes from a legally certified system such as a scale and cannot be
                    changed.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="ReceiptLineItemType">
        <xs:annotation>
            <xs:documentation>this is to add line item specific messages to be added to the receipt
                in context.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="ReceiptLineType">
                <xs:attribute form="unqualified" name="PolicyID" type="xs:string"/>
                <xs:attribute form="unqualified" name="TypeCode" type="ReceiptItemType"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!-- 
        Enumerated type for @ReceiptLineItemType
    -->
    <xs:simpleType name="ReceiptItemType">
        <xs:union memberTypes="ReceiptItemTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="ReceiptItemTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="GiftWrap"/>
            <xs:enumeration value="GiftMessage"/>
            <xs:enumeration value="Engraving"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
    Utility complex types that're useful when building Line Items
    -->
    <xs:complexType name="ItemType">
        <xs:annotation>
            <xs:documentation>Foodservice needs the ability to easily add onions, ketchup, etc to
                particular items and using a kit isn't appropriate</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ItemBase">
                <xs:attribute form="unqualified" name="Action"
                    type="RetailPriceModifierAmountAction"/>
                <xs:attribute form="unqualified" name="EntryMethod" type="EntryMethodTypeCode">
                    <xs:annotation>
                        <xs:documentation>How this item is entered.  Specifically useful in a Kit
                            where each item can be entered differently</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="DivisionType">
        <xs:annotation>
            <xs:documentation>correlates multiple items which are used on part of the item, i.e. a
                pizza with half pepperoni and sausage with the other half being
                cheese.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" name="Item" type="ItemType"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Description"
                type="DescriptionCommonData"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="QuantityType">
        <xs:simpleContent>
            <xs:extension base="QuantityCommonData">
                <xs:attribute form="unqualified" name="TypeCode"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="ActualSalesUnitPriceType">
        <xs:simpleContent>
            <xs:extension base="UnitPriceCommonData">
                <xs:attribute default="Add" form="unqualified" name="Action"
                    type="RetailPriceModifierAmountAction">
                    <xs:annotation>
                        <xs:documentation>Allows for differential pricing as in "Super Size Me" adds
                            .39 to the Combo Price or replace Large with Small and reduce price by
                            .20.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="ExtendedAmountType">
        <xs:simpleContent>
            <xs:extension base="AmountCommonData">
                <xs:attribute default="Add" form="unqualified" name="Action"
                    type="RetailPriceModifierAmountAction">
                    <xs:annotation>
                        <xs:documentation>Allows for differential pricing as in "Super Size Me" adds
                            .39 to the Combo Price or replace Large with Small and reduce price by
                            .20.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="ItemTaxType">
        <xs:complexContent>
            <xs:extension base="TaxDomainSpecific">
                <xs:attribute default="Add" form="unqualified" name="Action"
                    type="RetailPriceModifierAmountAction">
                    <xs:annotation>
                        <xs:documentation>Allows for differential pricing as in "Super Size Me" adds
                            .39 to the Combo Price or replace Large with Small and reduce price by
                            .20.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="RetailTransactionPOSIdentity">
        <xs:sequence>
            <xs:element form="qualified" name="POSItemID" type="POSItemID"/>
            <xs:element form="qualified" minOccurs="0" name="Qualifier" type="POSQualifier"/>
        </xs:sequence>
        <xs:attribute form="unqualified" name="POSIDType" type="POSIDType"/>
    </xs:complexType>
    <xs:complexType name="ReturnPolicyType">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Description"
                type="DescriptionCommonData"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="DateTime"
                type="DateTimeCommonData">
                <xs:annotation>
                    <xs:documentation>The various dates and times that can be associated with the
                        return policy</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute form="unqualified" name="PolicyID" type="xs:string"/>
    </xs:complexType>
    <xs:simpleType name="POSIDType">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <xs:simpleType name="POSItemID">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <xs:simpleType name="POSQualifier">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <!-- 
        Enumerated type for @ItemType
    -->
    <xs:simpleType name="RetailTransactionItemType">
        <xs:union memberTypes="RetailTransactionItemTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="RetailTransactionItemTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Stock"/>
            <xs:enumeration value="Grade"/>
            <xs:enumeration value="Service"/>
            <xs:enumeration value="Alteration"/>
            <xs:enumeration value="Fee"/>
            <xs:enumeration value="FeeRefund"/>
            <xs:enumeration value="Deposit"/>
            <xs:enumeration value="DepositRefund"/>
            <xs:enumeration value="Tare"/>
            <xs:enumeration value="ItemCollection"/>
            <xs:enumeration value="Warranty"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- 
        Enumerated type for @ItemSubType
    -->
    <xs:simpleType name="RetailTransactionItemSubType">
        <xs:union memberTypes="RetailTransactionItemSubTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="RetailTransactionItemSubTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Normal"/>
            <xs:enumeration value="InComplete">
                <xs:annotation>
                    <xs:documentation>Identifies this line item as the causing the incomplete
                        transaction</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TradeIn"/>
            <xs:enumeration value="Rework"/>
            <xs:enumeration value="Restock"/>
            <xs:enumeration value="Rental"/>
            <xs:enumeration value="Replace"/>
            <xs:enumeration value="DirectToConsumer">
                <xs:annotation>
                    <xs:documentation>an item which is not actually stocked by the store in question
                        but comes instead directly to the customer from either manufacturer or
                        supplier</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <!--
		Enumerated type for Suggested Source Type attribute
		Identifies the source for the suggested sale
	-->
    <xs:simpleType name="SuggestedSourceTypeCode">
        <xs:union memberTypes="SuggestedSourceEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="SuggestedSourceEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="None"/>
            <xs:enumeration value="Worker"/>
            <xs:enumeration value="Loyalty"/>
            <xs:enumeration value="SocialNetwork"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--      Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="ItemDomainSpecific">
        <xs:annotation>
            <xs:documentation>A line item component of a RetailTransaction that records the exchange
                in ownership of a merchandise item (i.e. a sale or return) or the sale or refund
                related to a service</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ItemBase">
                <xs:sequence>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="EPC"
                        type="xs:string">
                        <xs:annotation>
                            <xs:documentation>EPC will be used to identify individual items. For
                                example, items that have different colors have same EAN/UPC but EPCs
                                are different. POS is not only required to use EAN/UPC for price
                                look-up but also is needed to store EPC in poslog to track
                                individual item.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="OrderItemStatus"
                        type="OrderItemStatusType">
                        <xs:annotation>
                            <xs:documentation>Identifies the current status of this item in a
                                Customer Order.  Normally has no relevance in a Retail
                                Transaction.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="ItemNotOnFileFlag"
                        type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>A flag denoting that this LineItem is selling an item
                                that was not found by the PLU process.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="TaxIncludedInPriceFlag"
                        type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>A flag denoting that the selling prices of this
                                LineItem include all applicable taxes</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="InventoryValuePrice"
                        type="UnitPriceCommonData"/>
                    <xs:element form="qualified" minOccurs="0" name="SellingLocation"
                        type="StoreStructure">
                        <xs:annotation>
                            <xs:documentation>Unique identifier for a SellingLocation, (Department,
                                Floor, etc) which denotes a particular part of the store from which
                                the item being sold came. </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="Foodservice"
                        type="FoodServiceBase">
                        <xs:annotation>
                            <xs:documentation>Replaces term "Hospitality" to better reflect the
                                contents of the complex type</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="GiftReceiptFlag"
                        type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>Records the fact that a GiftReceipt was printed for
                                this Item</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="ServicePointID">
                        <xs:annotation>
                            <xs:documentation>Identifier of FuellingPoint. name and type are
                                attributes. In a fuel sale case type is "FuelDispenser" and Name is
                                "Pump1". This allows for future where a customer operated POS with
                                car valet, lubricant or other vending machines</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="xs:string">
                                    <xs:attribute form="unqualified" name="Name" type="xs:string"
                                        use="optional"/>
                                </xs:extension>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="DeviceID" type="DeviceIDType"/>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
                        processContents="lax"/>
                </xs:sequence>
                <xs:attribute form="unqualified" name="WICEligibleFlag" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Identifies this item as being elibile for a WIC
                            sale</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="false" form="unqualified" name="SuggestedFlag"
                    type="xs:boolean" use="optional">
                    <xs:annotation>
                        <xs:documentation>Flag to indicate this item was suggested in this sale,
                            return, ...</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="None" form="unqualified" name="SuggestedSource"
                    type="SuggestedSourceTypeCode" use="optional">
                    <xs:annotation>
                        <xs:documentation>A code denoting the origin of the suggestive selling
                            suggestion</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="DeviceIDType">
        <xs:simpleContent>
            <xs:extension base="IDCommonData">
                <xs:attribute form="unqualified" name="TypdeCode"
                    type="UnifiedPOSTypeCodeEnumeration"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!-- 
        Enumerated type for @OrderItemStatusType
    -->
    <xs:simpleType name="OrderItemStatusType">
        <xs:union memberTypes="OrderItemStatusTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="OrderItemStatusTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Sent"/>
            <xs:enumeration value="Dispatch"/>
            <xs:enumeration value="Delivered"/>
            <xs:enumeration value="Hold"/>
            <xs:enumeration value="Void"/>
            <xs:enumeration value="Cancel"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ************************************************************ -->
    <!-- **********  ********** -->
    <xs:complexType mixed="true" name="StoreStructure">
        <xs:simpleContent>
            <xs:extension base="StoreStructureHierarchyCommonData">
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!-- ============================ -->
    <!--             Library Schemas              -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- Major Version 6.0.0  2010/12/29
	- Split POSLog
	- Added Rebate information (more to be added after updating the data model) -->
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <xs:complexType name="AssociateCommonData">
        <xs:sequence>
            <xs:element form="qualified" name="AssociateID" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="Name">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="NameCommonData"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!--
		Enumerated type for Gift Certificate Media Type attribute
	-->
    <xs:simpleType name="GiftCertificateMediaTypeCode">
        <xs:union memberTypes="GiftCertificateMediaTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="GiftCertificateMediaTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="StoredValue"/>
            <xs:enumeration value="PreprintedPaper"/>
            <xs:enumeration value="BlankPaper"/>
            <xs:enumeration value="CarWashToken"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
		Enumerated type for Gift Certificate Unspent Balance Disposition Type attribute
	-->
    <xs:simpleType name="UnspentBalanceDispositionTypeCode">
        <xs:union memberTypes="UnspentBalanceDispositionTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="UnspentBalanceDispositionTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Cash"/>
            <xs:enumeration value="OnAccount"/>
            <xs:enumeration value="NewVoucher"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="GiftCertificateCommonData">
        <xs:annotation>
            <xs:documentation>A gift certificate is a one time tender. It is     issued and redeemed
                for full value only. If redeemed for less than face value,     another gift
                certificate may be given for the change.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="SerialNumber" type="xs:string"/>
            <xs:element form="qualified" name="FaceValue">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="MonetaryAmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ExpirationDate" type="xs:date"/>
        </xs:sequence>
        <xs:attribute default="PreprintedPaper" form="unqualified" name="MediaType"
            type="GiftCertificateMediaTypeCode" use="optional"/>
        <xs:attribute default="NewVoucher" form="unqualified" name="UnspentBalanceDispositionCode"
            type="UnspentBalanceDispositionTypeCode" use="optional"/>
    </xs:complexType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!-- 
    -->
    <xs:complexType name="GiftCertificateBase">
        <xs:complexContent>
            <xs:extension base="GiftCertificateCommonData">
                <xs:sequence>
                    <xs:element form="qualified" name="GiftCertificateID" type="xs:string"/>
                    <xs:element form="qualified" minOccurs="0" name="Amount">
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="AmountCommonData"/>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="Quantity">
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="QuantityCommonData"/>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="DateActivated" type="xs:date"/>
                    <xs:element form="qualified" minOccurs="0" name="InitialBalance">
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="MonetaryAmountCommonData"/>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
                        processContents="lax"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--
		Enumerated type for Loyalty Type attribute
	-->
    <xs:simpleType name="LoyaltyTypeCode">
        <xs:union memberTypes="LoyaltyTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="LoyaltyTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Points"/>
            <xs:enumeration value="eReward"/>
            <xs:enumeration value="Discount"/>
            <xs:enumeration value="GiftCertificate"/>
            <xs:enumeration value="Voucher"/>
            <xs:enumeration value="Miles"/>
            <xs:enumeration value="LoyaltyCard"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
		Enumerated type for Rebate Status Type attribute
	-->
    <xs:simpleType name="RebateStatusTypeCode">
        <xs:union memberTypes="RebateStatusTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="RebateStatusTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="New">
                <xs:annotation>
                    <xs:documentation>New rebate claim submitted online/thru mail</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ProofReceived">
                <xs:annotation>
                    <xs:documentation>all required proof received. documents being
                        verified</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ProofIncomplete">
                <xs:annotation>
                    <xs:documentation>some proof missing (UPC label, receipt)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="VerificationComplete">
                <xs:annotation>
                    <xs:documentation>all verifications completed successfully. The check ould be
                        mailed after the wait period of x days</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="RejectedInvalidProof">
                <xs:annotation>
                    <xs:documentation>the UPC label, receipt, or some other proof is not
                        valid.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="RejectedDueToReturn">
                <xs:annotation>
                    <xs:documentation>- item has been returned and refund issued. Rebate has been
                        rejected</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Voided">
                <xs:annotation>
                    <xs:documentation>rebate request cancelled by customer (this would happen when
                        the customer has done an exchange)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Duplicate">
                <xs:annotation>
                    <xs:documentation>rebate claim is duplicate and will not be honored. The
                        original rebate claim number should also be associated with
                        this.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CheckBeingProcessed">
                <xs:annotation>
                    <xs:documentation>wait period over. Check is being processed and would be mailed
                        shortly</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CheckMailed">
                <xs:annotation>
                    <xs:documentation>check is in the mail!</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Closed">
                <xs:annotation>
                    <xs:documentation>has been encashed. rebate process
                        completed.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="RebateCommonData">
        <xs:annotation>
            <xs:documentation>A reduction in price or partial refund on the price paid for
                merchandise given to the consumer.  A rebate is typically not deducted during the
                sale but requires the consumer to submit for payment of the
                rebate.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" name="RebateID" type="ItemIDCommonData">
                <xs:annotation>
                    <xs:documentation>Unique ID for this Rebate.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="UnitRebateAmount">
                <xs:annotation>
                    <xs:documentation>The amount for one item to which this rebate
                        applies</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Quantity" type="QuantityCommonData">
                <xs:annotation>
                    <xs:documentation>Quantity of items available for this
                        rebate.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ExtendedRebateAmount">
                <xs:annotation>
                    <xs:documentation>Total amount for this rebate = Quanitty *
                        UnitRebateAmount</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="ItemLink"
                type="xs:string">
                <xs:annotation>
                    <xs:documentation>Provides a link to the item(s) to which this rebate
                        applies</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute form="unqualified" name="RebateStatus" type="RebateStatusTypeCode"/>
        <xs:attribute form="unqualified" name="SubmissionDate" type="xs:date"/>
        <xs:attribute form="unqualified" name="DuplicateRebateID" type="xs:string"/>
    </xs:complexType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--      Base Schemas            -->
    <!-- ============================ -->
    <!--  ============================= -->
    <!--  ============================= -->
    <!--Customer Donation to a charity-->
    <xs:complexType name="DonationBase">
        <xs:sequence>
            <xs:element form="qualified" name="ContributionID" type="IDCommonData">
                <xs:annotation>
                    <xs:documentation>The id for this contribution</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="CustomerID" type="IDCommonData">
                <xs:annotation>
                    <xs:documentation>The id of the customer making this
                        contribution</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" name="CharityID" type="IDCommonData">
                <xs:annotation>
                    <xs:documentation>The id of the charity(s) that are to receive this
                        donation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="DonationProcessorID"
                type="IDCommonData">
                <xs:annotation>
                    <xs:documentation>The ID of the donation processor who transfers this dontation
                        to the appropriate charity(s)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:choice>
                <xs:element form="qualified" name="Amount" type="AmountCommonData">
                    <xs:annotation>
                        <xs:documentation>The donation amount</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="Points" type="PointsCommonData">
                    <xs:annotation>
                        <xs:documentation>This donation points</xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:choice>
        </xs:sequence>
        <xs:attribute form="unqualified" name="DonationTypeCode" type="DonationTypeCode"/>
        <xs:attribute form="unqualified" name="Trigger" type="DonationTriggerTypeCode"/>
    </xs:complexType>
    <xs:simpleType name="DonationTypeCode">
        <xs:union memberTypes="DonationTypeCodeEnumeration IXREnumerationExtension"/>
    </xs:simpleType>
    <xs:simpleType name="DonationTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Single"/>
            <xs:enumeration value="Matching"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="DonationTriggerTypeCode">
        <xs:union memberTypes="DonationTriggerTypeCodeEnumeration IXREnumerationExtension"/>
    </xs:simpleType>
    <xs:simpleType name="DonationTriggerTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="CustomerGrift"/>
            <xs:enumeration value="ItemPurchased"/>
            <xs:enumeration value="AmountSpent"/>
            <xs:enumeration value="Coupon"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ====================== -->
    <!--       Library Schemas        -->
    <!-- ====================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ====================== -->
    <!--       Library Schemas        -->
    <!-- ====================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="TenderCreditDebitBase">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="IssuerIdentificationNumber"
                type="xs:integer"/>
            <xs:element form="qualified" minOccurs="0" name="CardHolderName" type="xs:string"/>
            <xs:element form="qualified" name="PrimaryAccountNumber" type="EncryptedDataType"/>
            <xs:element form="qualified" minOccurs="0" name="IssueSequence" type="xs:integer"/>
            <xs:element form="qualified" minOccurs="0" name="ExpirationDate" type="xs:gYearMonth"/>
            <xs:element form="qualified" minOccurs="0" name="SecurityCode" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The security code on the back of the credit
                        card</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="CreditCardCompanyCode" type="xs:string">
                <xs:annotation>
                    <xs:documentation>a 6 digit code assigned by the acquirer to uniquely identify a
                        particular credit card company</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Track1Data" type="EncryptedDataType"/>
            <xs:element form="qualified" minOccurs="0" name="Track2Data" type="EncryptedDataType"/>
            <xs:element form="qualified" minOccurs="0" name="Track3Data" type="EncryptedDataType"/>
            <xs:element form="qualified" minOccurs="0" name="Track4Data" type="EncryptedDataType">
                <xs:annotation>
                    <xs:documentation>The bit pattern from track 4 of the magnetic strip on the
                        front of some credit cards as identified in UPOS specification
                        (Japan)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ReconciliationCode" type="xs:integer"/>
            <xs:element form="qualified" minOccurs="0" name="StartDate" type="xs:date"/>
            <xs:element form="qualified" minOccurs="0" name="ServiceCode" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="BillingZipCode" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Used to Validate the owner of the credit card
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute default="Credit" form="unqualified" name="CardType" type="CreditDebitCardType"
            use="optional"/>
        <xs:attribute default="Visa" form="unqualified" name="TypeCode" type="SubTenderTypeCodes"
            use="optional"/>
        <xs:attribute default="false" form="unqualified" name="ContactlessPaymentFlag"
            type="xs:boolean">
            <xs:annotation>
                <xs:documentation>Indicates this Credit-Debit tender was initiated by a Contactless
                    Payment Card</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="EncryptedDataType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="Cryptogram" type="xs:string"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!--
        Enumerated type for Credit/Debit Card Types
    -->
    <xs:simpleType name="CreditDebitCardType">
        <xs:union memberTypes="CreditDebitCardTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="CreditDebitCardTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Credit"/>
            <xs:enumeration value="Debit"/>
            <xs:enumeration value="Loyalty"/>
            <xs:enumeration value="EBTFoodStamps"/>
            <xs:enumeration value="EBTCash"/>
            <xs:enumeration value="Fleet"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="TenderVoucherBase">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Description"
                type="DescriptionCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="FaceValueAmount"
                type="AmountCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="SerialNumber" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="ExpirationDate" type="xs:date"/>
            <xs:element form="qualified" minOccurs="0" name="AccountNumber" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="UnspentAmount" type="UnspentAmountType">
                <xs:annotation>
                    <xs:documentation>The monetary value of the Voucher that has not been spent and
                        not returned to the customer</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="VoucherAmountInChange"
                type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The monetary value of the change that has been given as a
                        Voucher</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="IssuingStoreNumberID"
                type="BusinessUnitCommonData"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute default="GiftCertificate" form="unqualified" name="TypeCode"
            type="VoucherCardType" use="optional">
            <xs:annotation>
                <xs:documentation>Type definition of this Voucher element</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <!--
        Enumerated type for Voucher Card Types
    -->
    <xs:simpleType name="VoucherCardType">
        <xs:union memberTypes="VoucherCardTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="VoucherCardTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="AccountReceivable"/>
            <xs:enumeration value="AdvancePayment"/>
            <xs:enumeration value="CarWashToken"/>
            <xs:enumeration value="GiftCard"/>
            <xs:enumeration value="GiftCertificate"/>
            <xs:enumeration value="LotteryDraw"/>
            <xs:enumeration value="LotteryInstant"/>
            <xs:enumeration value="LuncheonVoucher"/>
            <xs:enumeration value="MoneyOffVoucher"/>
            <xs:enumeration value="PhoneCard"/>
            <xs:enumeration value="RecognitionRewardVoucher"/>
            <xs:enumeration value="StoredValue"/>
            <xs:enumeration value="Voucher"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
		Enumerated type for Loyalty Type attribute
	-->
    <xs:simpleType name="LoyaltyDebitCreditTypeCode">
        <xs:union memberTypes="LoyaltyDebitCreditTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="LoyaltyDebitCreditTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Credit"/>
            <xs:enumeration value="Debit"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================ -->
    <!--                   LOYALTY                        -->
    <!--  ============================ -->
    <xs:complexType name="LoyaltyProgramType">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Customer" type="CustomerDomainSpecific"/>
            <xs:element form="qualified" minOccurs="0" name="LoyaltyProgramID"
                type="LoyaltyProgramIDType">
                <xs:annotation>
                    <xs:documentation>Identifies the account number for this program for this
                        customer</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="LoyaltyAccountID"
                type="LoyaltyAccountIDType">
                <xs:annotation>
                    <xs:documentation>Identifies teh Account Number for this Customer's Account - an
                        account can have one or more programs assigned to it</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Amount">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Adjustment"
                type="LoyaltyProgramAdjustmentType">
                <xs:annotation>
                    <xs:documentation>Loyalty account adjustment</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="CumulativeNetSalesAmount">
                <xs:annotation>
                    <xs:documentation>aggregated net sales associated with this loyalty, i.e.
                        multiple items are necessary to acquire this loyalty
                        reward/redemption</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="QualifyingItemID">
                <xs:annotation>
                    <xs:documentation>Unique identifier for an item that qualifies this loyalty
                        program.  For example many loyalty programs allow several items to qualify
                        for this reward.  This identifies the specific one for this specific
                        reward.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="ItemIDCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="LoyaltyCard"
                type="TenderCreditDebitDomainSpecific"/>
            <xs:element form="qualified" minOccurs="0" name="OfferID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Unique identifier for the loyalty program offer that is being
                        used to give the loyalty discount</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TargetCount" type="xs:decimal">
                <xs:annotation>
                    <xs:documentation>The loyalty balance required to receive a loyalty reward.  ie:
                        Buy 12 CDs get one free</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="CurrentCount" type="xs:decimal">
                <xs:annotation>
                    <xs:documentation>The customers current loyalty balance</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute default="Points" form="unqualified" name="TypeCode" type="LoyaltyTypeCode"
            use="optional"/>
    </xs:complexType>
    <xs:complexType name="LoyaltyProgramAdjustmentType">
        <xs:sequence>
            <xs:element form="qualified" name="AdjustmentID" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="RewardAmount" type="AmountCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="ReasonCode" type="ReasonCodeCommonData"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute default="Points" form="unqualified" name="TypeCode" type="LoyaltyTypeCode"
            use="optional"/>
        <xs:attribute form="unqualified" name="DebitCredit" type="LoyaltyDebitCreditTypeCode"/>
    </xs:complexType>
    <xs:complexType name="LoyaltyRedemptionBase">
        <xs:annotation>
            <xs:documentation>records the redemption of LoyaltyPoints &amp; Vouchers previously awarded
                to the customer.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice maxOccurs="unbounded">
                <xs:element form="qualified" name="PointsRedeemed">
                    <xs:annotation>
                        <xs:documentation>The number of loyalty points redeemed by the
                            Customer</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:simpleContent>
                            <xs:extension base="PointsCommonData"/>
                        </xs:simpleContent>
                    </xs:complexType>
                </xs:element>
                <xs:element form="qualified" name="ManualActionID" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>A code denoting manual entry performed during the loyalty
                            points redemption</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="Voucher" type="TenderVoucherBase">
                    <xs:annotation>
                        <xs:documentation>A special Voucher for a specific product or service, that
                            is issued or redeemed as part of a CustomerLoyalty scheme. Not to be
                            confused with a GiftCertificate which has a monetary
                            value</xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:choice>
            <xs:element form="qualified" minOccurs="0" name="TransactionLink">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="TransactionLinkCommonData">
                            <xs:anyAttribute namespace="##other" processContents="lax"/>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="AdjudicationCode" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="LoyaltyProgram"
                type="LoyaltyProgramType">
                <xs:annotation>
                    <xs:documentation>Identifies the loyalty program information associated with
                        this loyalty redemption</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Amount">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Percent" type="PercentageCommonData"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute form="unqualified" name="TypeCode" type="LoyaltyRedemptionTypeCode"/>
        <xs:attribute form="unqualified" name="Reason" type="xs:string"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>
    <!-- ************************************************************ -->
    <!-- 
	   Utility complex types that're useful when building RetailTransactions
	-->
    <xs:complexType name="LoyaltyDiscountType">
        <xs:sequence>
            <xs:element form="qualified" name="Amount" type="xs:decimal"/>
            <xs:element form="qualified" minOccurs="0" name="Rounding" type="RoundingCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="Tax" type="TaxDomainSpecific"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="LoyaltyRedemptionTypeCode">
        <xs:union memberTypes="LoyaltyRedemptionTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="LoyaltyRedemptionTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Redemption"/>
            <xs:enumeration value="AwardRefund"/>
            <xs:enumeration value="RebateRefund"/>
            <xs:enumeration value="RedemptionRefund"/>
            <xs:enumeration value="RedemptionFailure"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- Major Version 6.0.0  2010/12/29
	- Split POSLog
	- Added Rebate information (more to be added after updating the data model) -->
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================ -->
    <!--                   LOYALTY REWARD                        -->
    <!--  ============================ -->
    <xs:complexType name="LoyaltyRewardBase">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="PromotionID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>the id of the promotion which triggered the gift or loyalty
                        reward</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="LoyaltyID">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute form="unqualified" name="Name" type="xs:string"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:choice minOccurs="0">
                <xs:element form="qualified" name="LoyaltyProgramID" type="LoyaltyProgramIDType"/>
                <xs:element form="qualified" name="LoyaltyAccountID" type="LoyaltyAccountIDType"/>
            </xs:choice>
            <xs:element form="qualified" minOccurs="0" name="EventID" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="ReasonCode" type="ReasonCodeCommonData">
                <xs:annotation>
                    <xs:documentation>Reason for the gift or loyalty reward</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="AdjustmentID" type="xs:string"/>
            <xs:choice maxOccurs="unbounded">
                <xs:element form="qualified" name="Discount" type="LoyaltyDiscountType"/>
                <xs:element form="qualified" name="PromotionMessage" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Promotion message that is printed on the customers
                            receipt</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="PointsAwarded">
                    <xs:annotation>
                        <xs:documentation>The number of points awarded by the line
                            item</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:simpleContent>
                            <xs:extension base="PointsCommonData"/>
                        </xs:simpleContent>
                    </xs:complexType>
                </xs:element>
                <xs:element form="qualified" name="Voucher" type="RetailTransactionVoucher"/>
                <xs:element form="qualified" name="GiftCertificate" type="GiftCertificateBase"/>
            </xs:choice>
        </xs:sequence>
        <xs:attribute form="unqualified" name="TypeCode" type="LoyaltyRewardTypeCode" use="optional"
        />
    </xs:complexType>
    <!-- Enumerated type for Loyalty Reward -->
    <xs:simpleType name="LoyaltyRewardTypeCode">
        <xs:union memberTypes="LoyaltyRewardTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="LoyaltyRewardTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Award"/>
            <xs:enumeration value="Rebate"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!-- 
        Complex & Simple types defining Kit or Combo sales & returns
    -->
    <xs:complexType name="PaymentOnAccountBase">
        <xs:sequence>
            <xs:choice maxOccurs="2" minOccurs="0">
                <xs:element form="qualified" name="AccountCardNumber" type="xs:string"/>
                <xs:element form="qualified" name="AccountNumber" type="xs:string"/>
            </xs:choice>
            <xs:element form="qualified" minOccurs="0" name="ReferenceNumber" type="xs:string">
                <xs:annotation>
                    <xs:documentation>relates to the invoice used to pay on the account, i.e. the
                        utility bill number.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="Amount">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="BalanceDue" type="xs:decimal">
                <xs:annotation>
                    <xs:documentation>The new balance due on the Customer Account after this payment
                        has been recognized</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="BankID" type="xs:string"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute form="unqualified" name="Refund" type="xs:boolean" use="optional"/>
        <xs:attribute form="unqualified" name="AccountCode" type="RetailTransactionAccountCode">
            <xs:annotation>
                <xs:documentation>A code denoting the kind of account for which the payment was
                    accepted</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>
    <!-- ====================== -->
    <!--       Library Schemas        -->
    <!-- ====================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="TenderCouponBase">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Name" type="xs:string"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Description"
                type="DescriptionCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="Quantity" type="QuantityCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="PrimaryLabel" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="SecondaryLabel" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="ManufacturerID" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="FamilyCode" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="ExpirationDate" type="xs:date"/>
            <xs:element form="qualified" minOccurs="0" name="PromotionCode" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="ScanCode" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="DispositionCode" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="RewardValue" type="DecimalCommonData">
                <xs:annotation>
                    <xs:documentation>Reward value allows one to record the amount given for this
                        coupon vs a fixed amount (facevalue)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute form="unqualified" name="CouponType" type="POSLogCouponType">
            <xs:annotation>
                <xs:documentation>A code denoting what kind of Coupon is being used to tender the
                    transaction</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="UnusedFlag" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>Indicates this coupon wasn't used in this transaction.  It allows
                    the customer to submit a bunch of coupons and have the unused ones returned to
                    them.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>
    <!--
        Enumerated type for Coupon Type attribute
    -->
    <xs:simpleType name="POSLogCouponType">
        <xs:union memberTypes="POSLogCouponTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="POSLogCouponTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="ManufacturersCoupon"/>
            <xs:enumeration value="ElectronicCoupon"/>
            <xs:enumeration value="StoreCoupon"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--             Library Schemas              -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--             Derived Schemas             -->
    <!-- ============================ -->
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--      Base Schemas            -->
    <!-- ============================ -->
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <!-- 
		DocumentID TypeCodes
	-->
    <xs:simpleType name="DocumentIDTypeCode">
        <xs:union memberTypes="DocumentIDTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="DocumentIDTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Voucher"/>
            <xs:enumeration value="Invoice"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ====================== -->
    <!--       Library Schemas        -->
    <!-- ====================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ====================== -->
    <!--       Library Schemas        -->
    <!-- ====================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="TenderAccountInfoBase">
        <xs:sequence>
            <xs:element form="qualified" name="AccountID" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="AccountName" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="AccountFirstName" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="AccountMiddleName" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="AccountLastName" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="Address">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="AddressCommonData"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="SocialSecurityNumber" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="TelephoneNumber" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="AccountNumber" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="EffectiveDate" type="xs:date"/>
            <xs:element form="qualified" minOccurs="0" name="ExpirationDate" type="xs:date"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute default="Issue" form="unqualified" name="Action" type="CardAction"
            use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>
    <!--
		Enumerated type for StoredValueInstrumentAction attribute
	-->
    <xs:simpleType name="StoredValueInstrumentActionCode">
        <xs:union memberTypes="StoredValueInstrumentActionEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="StoredValueInstrumentActionEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Activation"/>
            <xs:enumeration value="Void"/>
            <xs:enumeration value="Cancel"/>
            <xs:enumeration value="Associate"/>
            <xs:enumeration value="Stolen"/>
            <xs:enumeration value="Expired"/>
            <xs:enumeration value="Deactivate"/>
            <xs:enumeration value="Refund">
                <xs:annotation>
                    <xs:documentation>refund of previous credits (not the same as
                        Tendering</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Recharge">
                <xs:annotation>
                    <xs:documentation>used to add money to a gift card (top up)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BalanceTransfer">
                <xs:annotation>
                    <xs:documentation>where a single interaction transfers all of the balance from
                        one card to another card in a single transaction</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Replace">
                <xs:annotation>
                    <xs:documentation>Used to indicate this card was replaced</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Cashout">
                <xs:annotation>
                    <xs:documentation>Indicates the money in the account was given to the
                        customer</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <!--
		Enumerated type for StoredValueInstrumentAction attribute
	-->
    <xs:simpleType name="StoredValueInstrumentIdentificationTypeCode">
        <xs:union memberTypes="StoredValueInstrumentIdentificationEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="StoredValueInstrumentIdentificationEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="PAN"/>
            <xs:enumeration value="ISOTrack2"/>
            <xs:enumeration value="BarCode"/>
            <xs:enumeration value="AccountNumber"/>
            <xs:enumeration value="PhoneNumber"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!-- ====================== -->
    <!--       Library Schemas        -->
    <!-- ====================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ====================== -->
    <!--       Library Schemas        -->
    <!-- ====================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================ -->
    <!--                   TENDER Authorization -->
    <!--  ============================ -->
    <xs:complexType name="TenderAuthorizationBase">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="RequestedAmount"
                type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>It is possible to request more than one approval.
                        Particularly when the TenderAuthorization is a Pre-Authorization that
                        happens at the beginning of the transaction. (eg: Most pay at pump terminals
                        on gas stations will request some arbitrary large amount, and then tender
                        the proper smaller amount)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="AuthorizationCode" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="ReferenceNumber" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="MerchantNumber" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A number assigned by the acquirer to identify a particular
                        merchant</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="ProviderID"
                type="xs:string">
                <xs:annotation>
                    <xs:documentation>AKA Acquirer, Host</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="AuthorizationDateTime"
                type="xs:dateTime"/>
            <xs:element form="qualified" minOccurs="0" name="AuthorizedChangeAmount"
                type="xs:decimal">
                <xs:annotation>
                    <xs:documentation>The amount of change authorized - which may be different from
                        the requested change amount.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="AuthorizingTermID" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="PreAuthorizedID" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="AuthorizationDescription"
                type="xs:string">
                <xs:annotation>
                    <xs:documentation>A free text description of the tender
                        authorization</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Reversal" type="ReversalType"/>
            <xs:element form="qualified" minOccurs="0" name="ElectronicSignatureDecline">
                <xs:annotation>
                    <xs:documentation>A code denoting the reason for declining an electronic
                        signature for the tender authorization</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute form="unqualified" name="Reason" type="POSLogDeclineType"
                        use="optional"/>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ReceiptText" type="xs:string">
                <xs:annotation>
                    <xs:documentation>the message from the provider added to the bottom of the
                        customer's receipt</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Signature" type="xs:base64Binary"/>
        </xs:sequence>
        <xs:attribute default="false" form="unqualified" name="PreAuthorizationFlag"
            type="xs:boolean" use="optional">
            <xs:annotation>
                <xs:documentation>flag to indicate this purchase (typically credit) has been
                    authorized prior to purchasing the items.  Typically used in fuel sales where
                    the CRIND in the dispenser gets authroization prior to pumping fuel grade into
                    the vehicle </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute default="false" form="unqualified" name="VerifiedByPINFlag" type="xs:boolean"
            use="optional">
            <xs:annotation>
                <xs:documentation>Used with Chip + Pin.  A flag denoting that this
                    TenderAuthorization was verified by customer entering PIN rather than
                    signature.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute default="true" form="unqualified" name="SignatureRequiredFlag"
            type="xs:boolean" use="optional"/>
        <xs:attribute form="unqualified" name="CustomerPresentFlag" type="xs:boolean"/>
    </xs:complexType>
    <!--	manually (via a phone call), systematically (floor limit) or automatically (electronically obtinaed from the provider) -->
    <xs:simpleType name="TenderAuthorizationMethodType">
        <xs:union memberTypes="TenderAuthorizationMethodTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="TenderAuthorizationMethodTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Automatically"/>
            <xs:enumeration value="Manually"/>
            <xs:enumeration value="Systematically"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
        Enumerated type for decline Types Type attribute
    -->
    <xs:simpleType name="POSLogDeclineType">
        <xs:union memberTypes="POSLogDeclineTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="POSLogDeclineTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="DeviceFailure"/>
            <xs:enumeration value="CustomerRefuses"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="ReversalType">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="SequenceNumber"
                type="SequenceNumberType"/>
            <xs:element form="qualified" minOccurs="0" name="DateTime" type="xs:dateTime"/>
            <xs:element form="qualified" minOccurs="0" name="AdjudicationCode" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="ReferenceNumber" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="HostText" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="ReversedAmount">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute form="unqualified" name="ReversalReason" type="ReversalReason"/>
    </xs:complexType>
    <!-- terminal action code type codes -->
    <xs:simpleType name="TerminalActionCodeTypeCode">
        <xs:union memberTypes="TerminalActionCodeTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="TerminalActionCodeTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Default"/>
            <xs:enumeration value="Denial"/>
            <xs:enumeration value="Online"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- terminal action code type codes -->
    <xs:simpleType name="ReversalReason">
        <xs:union memberTypes="ReversalReasonTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="ReversalReasonTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="CustomerCancel"/>
            <xs:enumeration value="MerchantCancel"/>
            <xs:enumeration value="Malfunction"/>
            <xs:enumeration value="Unable2Complete"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="TenderAuthorizationDomainSpecific">
        <xs:complexContent>
            <xs:extension base="TenderAuthorizationBase">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="RequestedChangeAmount"
                        type="AmountCommonData"/>
                    <xs:element form="qualified" minOccurs="0" name="TerminalSoftwareVersion"
                        type="xs:string"/>
                    <xs:element form="qualified" minOccurs="0" name="EMVDebug" type="EMVDebugType">
                        <xs:annotation>
                            <xs:documentation>EuroPay, Master Card, Visa Debug
                                Information</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="ApplicationID" type="xs:string"/>
                    <xs:element form="qualified" minOccurs="0" name="DiagnosticCode"
                        type="xs:string"/>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
                        processContents="lax"/>
                </xs:sequence>
                <xs:attribute default="false" form="unqualified" name="HostAuthorized"
                    type="xs:boolean" use="optional"/>
                <xs:attribute form="unqualified" name="ElectronicSignature" type="xs:boolean"
                    use="optional"/>
                <xs:attribute form="unqualified" name="ForceOnline" type="xs:boolean" use="optional">
                    <xs:annotation>
                        <xs:documentation>A flag indicating that this Tender Authorization was
                            performed offline, and if true, the authorization must be forced online,
                            i.e. the Host must accept it, when the financial network becomes
                            available</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="Automatically" form="unqualified" name="AuthorizationMethod"
                    type="TenderAuthorizationMethodType">
                    <xs:annotation>
                        <xs:documentation>indicates how the authorization code was
                            obtained</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="EMVDebugType">
        <xs:annotation>
            <xs:documentation>Tender was EuropayMasterCardVisa in debug information
                mode</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="ApplicationIdentifier" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Identifies the application as described in ISO/IEC
                        7816-5</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ApplicationInterchangeProfile"
                type="xs:string">
                <xs:annotation>
                    <xs:documentation>Indicates the capabilities of the card to support specific
                        functions in the application</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ApplicationTransactionCounter"
                type="xs:string">
                <xs:annotation>
                    <xs:documentation>Counter maintained by the application in the ICC (incrementing
                        the ATC is managed by the ICC)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ApplicationUsageControl"
                type="xs:string">
                <xs:annotation>
                    <xs:documentation>Indicates issuer's specified restrictions on the geographic
                        usage and services allowed for the application</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ApplicationVersionNumber"
                type="xs:string">
                <xs:annotation>
                    <xs:documentation>Version number assigned by the payment system for the
                        application</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="AuthorizationResponseCode"
                type="xs:string">
                <xs:annotation>
                    <xs:documentation>Code that defines the disposition of a
                        message</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="CardholderVerificationMethodResults"
                type="xs:string">
                <xs:annotation>
                    <xs:documentation>Indicates the results of the last CVM
                        performed</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Cryptogram" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="CryptogramInformationData"
                type="xs:string">
                <xs:annotation>
                    <xs:documentation>Indicates the type of cryptogram and the actions to be
                        performed by the terminal</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="IssuerApplicationData" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Contains proprietary application data for transmission to the
                        issuer in an online transaction</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="POSEntryMode" type="xs:integer">
                <xs:annotation>
                    <xs:documentation>Indicates the method by which the PAN was entered, according
                        to the first two digits of the ISO 8583:1987 POS Entry
                        Mode</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TerminalCapabilities" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Indicates the card data input, CVM, and security capabilities
                        of the terminal</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TerminalType" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Indicates the environment of the terminal, its communications
                        capability, and its operational control</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TerminalVerificationResults"
                type="xs:string">
                <xs:annotation>
                    <xs:documentation>Status of the different functions as seen from the
                        terminal</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TranCryptogramType" type="xs:integer"/>
            <xs:element form="qualified" minOccurs="0" name="TransactionStatusInformation"
                type="xs:string">
                <xs:annotation>
                    <xs:documentation>Indicates the functions performed in a transaction 1. Offline
                        data authentication was performed 2. Cardholder verification was performed
                        3. Card risk management was performed 4. Issuer authentication was performed
                        5. Terminal risk management was performed 6. Script processing was
                        performed</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="UnpredictableNumber" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Value to provide variability and uniqueness to the generation
                        of a cryptogram</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute form="unqualified" name="CryptogramTypeCode" type="CryptogramTypeCode">
            <xs:annotation>
                <xs:documentation>TC - Transaction Certificate ARQC - Authorisation Request
                    Cryptogram AAC - Application Authentication Cryptogram</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="TerminalActionCode" type="TerminalActionCodeTypeCode"
        />
    </xs:complexType>
    <xs:simpleType name="CryptogramTypeCode">
        <xs:union memberTypes="CryptogramTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="CryptogramTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="TransactionCertificate"/>
            <xs:enumeration value="AuthorizationRequestCryptogram"/>
            <xs:enumeration value="ApplicationAuthenticationCryptogram"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="StoredValueFundBase">
        <xs:complexContent>
            <xs:extension base="ItemDomainSpecific">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="Account"
                        type="StoredValueAccountType">
                        <xs:annotation>
                            <xs:documentation>The acount to which all the instruments
                                reference</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="Instrument" type="StoredValueInstrumentBase">
                        <xs:annotation>
                            <xs:documentation>Physical stored value cards</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="Authorization"
                        type="TenderAuthorizationDomainSpecific"/>
                </xs:sequence>
                <xs:attribute default="Activation" form="unqualified" name="Action"
                    type="StoredValueInstrumentActionCode" use="optional"/>
                <xs:attribute default="GiftCard" form="unqualified" name="TypeCode"
                    type="StoredValueInstrumentTypeCode" use="optional">
                    <xs:annotation>
                        <xs:documentation>An attribute type that allows the Stored Value Application
                            to interrogate and execute business rules.  Examples include (gift,
                            store credit, merchandise return, layaway, phone,
                            etc.)</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="StoredValueAccountType">
        <xs:complexContent>
            <xs:extension base="TenderAccountInfoBase">
                <xs:attribute default="Active" form="unqualified" name="State"
                    type="StoredValueAccountStateCode" use="optional">
                    <xs:annotation>
                        <xs:documentation>Active, Inactive, Suspended, Overdrawn</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="StoredValueInstrumentBase">
        <xs:complexContent>
            <xs:extension base="TenderVoucherBase">
                <xs:attribute default="Active" form="unqualified" name="State"
                    type="StoredValueInstrumentStateCode" use="optional"/>
                <xs:attribute form="unqualified" name="DateActivated" type="xs:dateTime"
                    use="optional"/>
                <xs:attribute form="unqualified" name="IdentificationType"
                    type="StoredValueInstrumentIdentificationTypeCode" use="optional"/>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--
		Enumerated type for StoredValueInstrument Type attribute
	-->
    <xs:simpleType name="StoredValueInstrumentTypeCode">
        <xs:union memberTypes="StoredValueInstrumentTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="StoredValueInstrumentTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="GiftCard"/>
            <xs:enumeration value="GiftCertificate"/>
            <xs:enumeration value="PhoneCard"/>
            <xs:enumeration value="SmartCard"/>
            <xs:enumeration value="OnlineVoucher"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
		Enumerated type for StoredValue Account State attribute
	-->
    <xs:simpleType name="StoredValueAccountStateCode">
        <xs:union memberTypes="StoredValueAccountStateEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="StoredValueAccountStateEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Active"/>
            <xs:enumeration value="Inactive"/>
            <xs:enumeration value="Suspended"/>
            <xs:enumeration value="Overdrawn"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
		Enumerated type for StoredValueInstrument State attribute
	-->
    <xs:simpleType name="StoredValueInstrumentStateCode">
        <xs:union memberTypes="StoredValueInstrumentStateEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="StoredValueInstrumentStateEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Active"/>
            <xs:enumeration value="Inactive"/>
            <xs:enumeration value="Expired"/>
            <xs:enumeration value="Stolen"/>
            <xs:enumeration value="Damaged"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--      Base Schemas            -->
    <!-- ============================ -->
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!-- 
		Tender Ledger Types 
	-->
    <xs:simpleType name="TenderLedgerTypeCode">
        <xs:union memberTypes="TenderLedgerTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="TenderLedgerTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Actual"/>
            <xs:enumeration value="Estimated"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--       Library Schemas                    -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="SettleReturnBase">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Tender"
                type="TenderTotalBase"/>
            <xs:element form="qualified" name="Totals" type="POSLogTotalsBase"/>
        </xs:sequence>
    </xs:complexType>
    <!-- ============================ -->
    <!--       Library Schemas                    -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="SettleLayawayPaymentsBase">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Tender"
                type="TenderTotalBase"/>
            <xs:element form="qualified" name="Totals" type="POSLogTotalsBase"/>
        </xs:sequence>
    </xs:complexType>
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--      Base Schemas            -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--      Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================= -->
    <!--                     P O S L O G                     -->
    <!--  ============================= -->
    <xs:complexType name="SettleLoansBase">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Tender"
                type="TenderTotalBase"/>
            <xs:element form="qualified" name="Total" type="POSLogTotalsBase"/>
        </xs:sequence>
    </xs:complexType>
    <!-- ============================ -->
    <!--       Library Schemas                    -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="SettleMiscellaneousFeesBase">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Tender"
                type="TenderTotalBase"/>
            <xs:element form="qualified" name="Totals" type="POSLogTotalsBase"/>
        </xs:sequence>
    </xs:complexType>
    <!-- ============================ -->
    <!--       Library Schemas                    -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="SettlePaymentsCollectedBase">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Tender"
                type="TenderTotalBase"/>
            <xs:element form="qualified" name="Totals" type="POSLogTotalsBase"/>
        </xs:sequence>
    </xs:complexType>
    <!-- ============================ -->
    <!--       Library Schemas                    -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="SettlePettyCashDisbursementsBase">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Tender"
                type="TenderTotalBase"/>
            <xs:element form="qualified" name="Totals" type="POSLogTotalsBase"/>
        </xs:sequence>
    </xs:complexType>
    <!-- ============================ -->
    <!--       Library Schemas                    -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="SettleStoreCouponBase">
        <xs:sequence>
            <xs:element form="qualified" name="Totals" type="POSLogTotalsBase">
                <xs:annotation>
                    <xs:documentation>The monetary value of the sum of all store coupon line items
                        recorded at the Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="CouponSummary"
                type="SettleCouponSummary">
                <xs:annotation>
                    <xs:documentation>Summary of individual store coupon types during the period
                        being reported</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="SettleCouponSummary">
        <xs:sequence>
            <xs:element form="qualified" name="CouponType" type="xs:string">
                <xs:annotation>
                    <xs:documentation>coupon type being reported in this node</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="Total" type="POSLogTotalsBase">
                <xs:annotation>
                    <xs:documentation>The monetary value of the sum of all store coupon line items
                        of this type recorded at the Till</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <xs:complexType name="TenderTotalsCommonData">
        <xs:sequence>
            <xs:element form="qualified" name="Amount" type="AmountCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="Count">
                <xs:simpleType>
                    <xs:restriction base="xs:int">
                        <xs:minInclusive value="0"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="SettleTenderPickupBase">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Tender"
                type="TenderTotalBase"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Totals"
                type="POSLogTotalsBase"/>
            <xs:element form="qualified" minOccurs="0" name="SafeID" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="ReasonCode" type="ReasonCodeCommonData"/>
            <!-- this is the total by tender type -->
            <!-- this is the total of all tenders for this pickup -->
        </xs:sequence>
        <xs:attribute form="unqualified" name="TenderType" type="TenderTypeCode" use="optional"/>
        <xs:attribute default="Normal" form="unqualified" name="TypeCode" type="TenderPickupTypes"/>
    </xs:complexType>
    <!-- 
		Tender Pickup Type Codes 
	-->
    <xs:simpleType name="TenderPickupTypes">
        <xs:union memberTypes="TenderPickupTypesEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="TenderPickupTypesEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Normal"/>
            <xs:enumeration value="CloseFLoat"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="SettleBase">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="TransactionCount" type="xs:integer"/>
            <xs:element form="qualified" minOccurs="0" name="TotalNetSalesAmount"
                type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The total value of all sales (net of returns) performed at the
                        Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TotalNetReturnAmount"
                type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The total value of all returns performed at the
                        till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TotalTaxAmount" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>including full- and half taxes independent of state, county or
                        city taxes</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TotalGrossSalesExemptTaxAmount"
                type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>Gross Sales Amount total for all Tax Exempt sales
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="GrossPositiveAmount"
                type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The sum of the monetary value for all tenders put into the
                        Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="GrossNegativeAmount"
                type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The sum of the monetary value for all tenders taken from the
                        Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="TenderSummary"
                type="SettleTenderLedgerBase">
                <xs:annotation>
                    <xs:documentation>AKA Till Declaration </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TotalMeasures">
                <xs:annotation>
                    <xs:documentation>Miscellaneous performance measuresments recorded at the
                        Till</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element form="qualified" minOccurs="0" name="SaleLineItemCount"
                            type="xs:integer">
                            <xs:annotation>
                                <xs:documentation>Line item scanned count + weighted line item count
                                    + non scannable items - a count of all line items that are
                                    sales</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element form="qualified" minOccurs="0" name="NoSaleTransactionCount"
                            type="xs:integer">
                            <xs:annotation>
                                <xs:documentation>Basically a count of the number of "No Sales"
                                    button presses</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element form="qualified" minOccurs="0" name="LineItemOverrideCount"
                            type="xs:integer">
                            <xs:annotation>
                                <xs:documentation>count of every time someone overrides a line
                                    item.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element form="qualified" minOccurs="0" name="WeightedLineItemCount"
                            type="xs:integer">
                            <xs:annotation>
                                <xs:documentation>The number of sale items sold by weight recorded
                                    at the Till.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element form="qualified" minOccurs="0" name="LineItemKeyedCount"
                            type="xs:integer">
                            <xs:annotation>
                                <xs:documentation>The count of the number of line items keyed in (vs
                                    scanned)</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element form="qualified" minOccurs="0" name="LineItemKeyedPercentage"
                            type="xs:decimal"/>
                        <xs:element form="qualified" minOccurs="0" name="LineItemScannedCount"
                            type="xs:integer"/>
                        <xs:element form="qualified" minOccurs="0" name="LineItemScannedPercentage"
                            type="xs:decimal"/>
                        <xs:element form="qualified" minOccurs="0"
                            name="LineItemOpenDepartmentCount" type="xs:integer">
                            <xs:annotation>
                                <xs:documentation>count of the number of line items entered using an
                                    open department</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element form="qualified" minOccurs="0"
                            name="LineItemOpenDepartmentPercentage" type="xs:decimal"/>
                        <xs:element form="qualified" minOccurs="0" name="RingTime" type="xs:decimal"/>
                        <xs:element form="qualified" minOccurs="0" name="IdleTime" type="xs:decimal"/>
                        <xs:element form="qualified" minOccurs="0" name="LockTime" type="xs:decimal">
                            <xs:annotation>
                                <xs:documentation>Time the POS is locked</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element form="qualified" minOccurs="0" name="TenderTime"
                            type="xs:decimal"/>
                        <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
                            processContents="lax"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TaxExempt" type="POSLogTotalsBase">
                <xs:annotation>
                    <xs:documentation>The monetary value of the sum of all tax exempt transactions
                        conducted at the Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Loans" type="SettleLoansBase">
                <xs:annotation>
                    <xs:documentation>The monetary value of the sum of all tender loans put into the
                        Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PaidIn">
                <xs:annotation>
                    <xs:documentation>The monetary value of the sum of all PayIns put into the
                        Till</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="POSLogTotalsBase"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PaidOut">
                <xs:annotation>
                    <xs:documentation>The monetary value of the sum of all PayOuts taken from the
                        Till</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="POSLogTotalsBase"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="LineItemVoids" type="POSLogTotalsBase">
                <xs:annotation>
                    <xs:documentation>The monetary value of  the sum of all line item voids recorded
                        at the Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PostTransactionVoids"
                type="POSLogTotalsBase">
                <xs:annotation>
                    <xs:documentation>The monetary value of the sum of all post transaction voids
                        recorded at the Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TransactionVoids"
                type="POSLogTotalsBase">
                <xs:annotation>
                    <xs:documentation>The monetary value of the sum of all transaction voids
                        recorded at the Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TenderPickup"
                type="SettleTenderPickupBase">
                <xs:annotation>
                    <xs:documentation>The monetary value of the sum of all tender pickups taken from
                        the Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Returns" type="SettleReturnBase">
                <xs:annotation>
                    <xs:documentation>The monetary value of the sum of all Return line items
                        recorded at the Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Refunds" type="POSLogTotalsBase">
                <xs:annotation>
                    <xs:documentation>The monetary value of the sum of all refunds taken from the
                        Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="EmployeeDiscounts"
                type="POSLogTotalsBase">
                <xs:annotation>
                    <xs:documentation>The monetary value of the sum of all employee discount line
                        items recorded at the Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="MiscellaneousDiscounts"
                type="POSLogTotalsBase">
                <xs:annotation>
                    <xs:documentation>The monetary value of the sum of all ordinary discount line
                        items recorded at the Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="StoreCoupons"
                type="SettleStoreCouponBase">
                <xs:annotation>
                    <xs:documentation>Summary of Store coupons redeemed during the period being
                        reported</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="RedeemedContainerDeposits"
                type="POSLogTotalsBase">
                <xs:annotation>
                    <xs:documentation>The monetary value of all container container redemption line
                        items recorded at the Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ContainerDeposits"
                type="POSLogTotalsBase">
                <xs:annotation>
                    <xs:documentation>The monetary value of all container container deposit line
                        items recorded at the Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Markdowns" type="POSLogTotalsBase">
                <xs:annotation>
                    <xs:documentation>The monetary value of all markdown sales recorded at the
                        Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="MiscellaneousFees"
                type="SettleMiscellaneousFeesBase">
                <xs:annotation>
                    <xs:documentation>The monetary value of all miscellaneous fee line items
                        recorded at the Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PaymentsCollected"
                type="SettlePaymentsCollectedBase">
                <xs:annotation>
                    <xs:documentation>The monetary value of all payment on account line items
                        recorded at the Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="LayawayPayments"
                type="SettleLayawayPaymentsBase">
                <xs:annotation>
                    <xs:documentation>The monetary value of all layaway payment line items recorded
                        at the Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PettyCashDisbursements"
                type="SettlePettyCashDisbursementsBase">
                <xs:annotation>
                    <xs:documentation>The monetary value of all petty cash disbursements taken from
                        the Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="SettleTenderLedger">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Beginning"
                type="SettleTenderLedgerTotals"/>
            <xs:element form="qualified" minOccurs="0" name="Sales" type="SettleTenderLedgerTotals">
                <xs:annotation>
                    <xs:documentation>The monetary value of all sales recorded using the nominated
                        Tender at the Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Returns"
                type="SettleTenderLedgerTotals">
                <xs:annotation>
                    <xs:documentation>The monetary value of all refunds recorded using the nominated
                        Tender at the Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PaidIn" type="SettleTenderLedgerTotals"/>
            <xs:element form="qualified" minOccurs="0" name="PaidOut"
                type="SettleTenderLedgerTotals"/>
            <xs:element form="qualified" minOccurs="0" name="Loan" type="SettleTenderLedgerTotals"/>
            <xs:element form="qualified" minOccurs="0" name="Pickup" type="SettleTenderLedgerTotals"/>
            <xs:element form="qualified" minOccurs="0" name="Deposit"
                type="SettleTenderLedgerTotals"/>
            <xs:element form="qualified" minOccurs="0" name="Ending" type="SettleTenderLedgerTotals"/>
            <xs:choice minOccurs="0">
                <xs:element form="qualified" name="Over" type="SettleTenderLedgerTotals"/>
                <xs:element form="qualified" name="Short" type="SettleTenderLedgerTotals"/>
            </xs:choice>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute default="Actual" form="unqualified" name="LedgerType"
            type="TenderLedgerTypeCode" use="optional">
            <xs:annotation>
                <xs:documentation>A code denoting the type of totals in this Till Tender ledger
                    record</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="SettleTenderLedgerTotals">
        <xs:sequence>
            <xs:element form="qualified" name="Amount" type="AmountCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="Count" type="xs:integer"/>
            <xs:element form="qualified" minOccurs="0" name="Reason">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="ReasonCodeCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute form="unqualified" name="TenderType" type="TenderTypeCode" use="optional"/>
        <xs:attribute form="unqualified" name="SubTenderType" type="SubTenderTypeCodes"
            use="optional"/>
        <xs:attribute form="unqualified" name="Denomination" type="xs:string" use="optional"/>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="SettleTenderLedgerBase">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Beginning"
                type="SettleTenderLedgerTotals"/>
            <xs:element form="qualified" minOccurs="0" name="Sales" type="SettleTenderLedgerTotals">
                <xs:annotation>
                    <xs:documentation>The monetary value of all sales recorded using the nominated
                        Tender at the Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Returns"
                type="SettleTenderLedgerTotals">
                <xs:annotation>
                    <xs:documentation>The monetary value of all refunds recorded using the nominated
                        Tender at the Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PaidIn" type="SettleTenderLedgerTotals"/>
            <xs:element form="qualified" minOccurs="0" name="PaidOut"
                type="SettleTenderLedgerTotals"/>
            <xs:element form="qualified" minOccurs="0" name="Loan" type="SettleTenderLedgerTotals"/>
            <xs:element form="qualified" minOccurs="0" name="Pickup" type="SettleTenderLedgerTotals"/>
            <xs:element form="qualified" minOccurs="0" name="Deposit"
                type="SettleTenderLedgerTotals"/>
            <xs:element form="qualified" minOccurs="0" name="Ending" type="SettleTenderLedgerTotals"/>
            <xs:choice minOccurs="0">
                <xs:element form="qualified" name="Over" type="SettleTenderLedgerTotals"/>
                <xs:element form="qualified" name="Short" type="SettleTenderLedgerTotals"/>
            </xs:choice>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute default="Actual" form="unqualified" name="LedgerType"
            type="TenderLedgerTypeCode" use="optional">
            <xs:annotation>
                <xs:documentation>A code denoting the type of totals in this Till Tender ledger
                    record</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <!-- ====================== -->
    <!--       Library Schemas        -->
    <!-- ====================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="TenderCheckBase">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="BankID" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="CheckNumber" type="xs:unsignedLong"/>
            <xs:element form="qualified" minOccurs="0" name="AccountNumber" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="CheckCardNumber" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The human readable number from the Check Guarantee Card that
                        is presented during the check tendering process</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="FullMICR">
                <xs:annotation>
                    <xs:documentation>The full bank, account &amp; check number from the MICR characters
                        on the bottom of the check being presented</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute default="US" form="unqualified" name="Country"
                                type="CountryTypeCode" use="optional"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Count" type="CountCommonData">
                <xs:annotation>
                    <xs:documentation>the number of checks that were tendered</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute default="Personal" form="unqualified" name="TypeCode" type="CheckTypeCode"
            use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>
    <!--
        Enumerated type for Check Type Code attribute
    -->
    <xs:simpleType name="CheckTypeCode">
        <xs:union memberTypes="CheckTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="CheckTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Personal"/>
            <xs:enumeration value="Company"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ====================== -->
    <!--       Library Schemas        -->
    <!-- ====================== -->
    <!--
		Enumerated type for Personal Identification Type attribute
	-->
    <xs:simpleType name="PersonalIdentificationTypeCode">
        <xs:union memberTypes="PersonalIdentificationTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="PersonalIdentificationTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="AccountID"/>
            <xs:enumeration value="DUNS"/>
            <xs:enumeration value="GLN"/>
            <xs:enumeration value="StoreID"/>
            <xs:enumeration value="TaxID"/>
            <xs:enumeration value="DriversLicense"/>
            <xs:enumeration value="BusinessID"/>
            <xs:enumeration value="MilitaryID"/>
            <xs:enumeration value="Passport"/>
            <xs:enumeration value="CreditCard"/>
            <xs:enumeration value="NationalIdentityCard"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="TenderCustomerVerificationBase">
        <xs:annotation>
            <xs:documentation>Used to record the verification information presented by the customer
                during the tendering operation</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Name" type="xs:string"/>
            <xs:element form="qualified" name="PersonalID">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element form="qualified" name="IDNumber" type="xs:string"/>
                        <xs:element form="qualified" minOccurs="0" name="IssueDate" type="xs:date"/>
                        <xs:element form="qualified" minOccurs="0" name="ExpirationDate"
                            type="xs:date"/>
                        <xs:element form="qualified" minOccurs="0" name="Issuer" type="xs:string"/>
                        <xs:element form="qualified" minOccurs="0" name="Province" type="xs:string"
                        />
                    </xs:sequence>
                    <xs:attribute form="unqualified" name="IDType"
                        type="PersonalIdentificationTypeCode"/>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Birthdate" type="xs:date"/>
            <xs:element form="qualified" minOccurs="0" name="Address" type="AddressCommonData"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
    </xs:complexType>
    <!-- ============================ -->
    <!--      Derived Schemas         -->
    <!-- ============================ -->
    <!-- ====================== -->
    <!--       Library Schemas        -->
    <!-- ====================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ====================== -->
    <!--       Library Schemas        -->
    <!-- ====================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="FleetInfoBase">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="DriverID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A unique identifier for the vehicle driver recorded in the
                        fleet info</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="VehicleID" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="OdometerReading" type="xs:unsignedLong"/>
            <xs:element form="qualified" minOccurs="0" name="JobID" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="LicensePlate" type="xs:string"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute form="unqualified" name="TemporaryCar" type="xs:boolean"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="TenderCreditDebitDomainSpecific">
        <xs:complexContent>
            <xs:extension base="TenderCreditDebitBase">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="PaymentMethod"
                        type="CreditPaymentMethod">
                        <xs:annotation>
                            <xs:documentation>Identifies alternate payment methodologies, i.e.
                                payment out of bonus (Japan)</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="NumberOfInstallments"
                        type="xs:decimal">
                        <xs:annotation>
                            <xs:documentation>The number of monthly Credit Card payments the tender
                                amount is split over.  Commonly used in tele-marketing campaigns
                                where payment is spread over "3 easy payments" (Japan)
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="FrequencyOfBonusPerYear"
                        type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The number of bonus's one received per
                                year</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="PurchasedItem">
                        <xs:annotation>
                            <xs:documentation>The ItemID of the particular item(s) that are being
                                purchased with this tender line item.</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element form="qualified" name="ItemID">
                                    <xs:complexType>
                                        <xs:simpleContent>
                                            <xs:extension base="ItemIDCommonData"/>
                                        </xs:simpleContent>
                                    </xs:complexType>
                                </xs:element>
                                <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                                    name="EPC" type="xs:string"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="FleetInformation"
                        type="FleetInfoBase"/>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
                        processContents="lax"/>
                </xs:sequence>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="CreditPaymentMethod">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Ndivided" type="xs:integer"/>
            <xs:element form="qualified" minOccurs="0" name="BonusCount" type="xs:integer">
                <xs:annotation>
                    <xs:documentation>This data indicates the number of payment out of bonus per
                        year(Japan)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="BonusPayAmount">
                <xs:annotation>
                    <xs:documentation>This code indicates the amount to be paid out of each
                        bonus.(Japan)</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="BonusMonthDay"
                type="xs:gMonthDay">
                <xs:annotation>
                    <xs:documentation>This data indicates the date of
                        bonus.(Japan)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute form="unqualified" name="PaymentMethodCode"
            type="CreditDebitPaymentMethodCodeType"/>
    </xs:complexType>
    <!-- Credit-Debit Payment Method Code Enumerations -->
    <xs:simpleType name="CreditDebitPaymentMethodCodeType">
        <xs:union memberTypes="CreditDebitPaymentMethodCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="CreditDebitPaymentMethodCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Once"/>
            <xs:enumeration value="Revolving"/>
            <xs:enumeration value="Bonus"/>
            <xs:enumeration value="Divided"/>
            <xs:enumeration value="DividedWithBonus"/>
        </xs:restriction>
    </xs:simpleType>
    <!--  ============================= -->
    <!--  TENDER CONTROL  TRANSACTION  -->
    <!--  ============================= -->
    <xs:complexType name="TenderControlTransactionBase">
        <xs:annotation>
            <xs:documentation>Reports all non-sale/return transactions which have an impact on
                FINANCIAL accountability</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Shift" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="DayPart" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="OperatorID" type="OperatorCommonData">
                <xs:annotation>
                    <xs:documentation>The operator who performed this action. for example in a till
                        operator assignment, this is the operator who passed out the
                        till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Compromise to add additional tender control types and
                        additional common elements</xs:documentation>
                </xs:annotation>
                <xs:element form="qualified" name="BankCheckPrinted" type="POSLogTCBankCheckPrinted">
                    <xs:annotation>
                        <xs:documentation>restaurant runs out of a product (produce or milk, etc).
                            So go to the local grocery store with the bank check printed by the POS
                            to purchase the missing items</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="CharityCollection"
                    type="POSLogTCCharityCollection">
                    <xs:annotation>
                        <xs:documentation>Money retrieved from a charity collection which is later
                            paid to the charity in one lump sum.  For example, bell ringers collect
                            change during christmas.  Periodically, to avoid them being robbed, the
                            money is collected and store for them by the store. </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="Deposit" type="POSLogTCDeposit">
                    <xs:annotation>
                        <xs:documentation>Money counted, bagged and sent to the
                            bank</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="PaidIn" type="POSLogTCPaidInType">
                    <xs:annotation>
                        <xs:documentation>non-sale related money placed in the Till
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="PaidOut" type="POSLogTCPaidOutType">
                    <xs:annotation>
                        <xs:documentation>Money paid out of the till typically to a vendor, for
                            example, paying the beer vendor before they leave the
                            premises</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="PettyCash" type="POSLogTCPaidInType">
                    <xs:annotation>
                        <xs:documentation>A small store of cash used .  A small amount of cash set
                            aside to be used for minor business expenses or when it isn't feasible
                            to go through the normal voucher and check procedure to buy an
                            item.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="PreAuthorization" type="POSLogTCPreAuthorization">
                    <xs:annotation>
                        <xs:documentation>Records when a customer pre-authorizes a credit/debit card
                            prior to pumping gas into their car.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="PreAuthorizationReversal"
                    type="POSLogTCPreAuthorizationReversal">
                    <xs:annotation>
                        <xs:documentation>Records the reversal of a pre-authorization.  For example,
                            a customer leaves before pumping any gas but after a credit/debit card
                            pre-authorization occurs</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="PriceOverride" type="POSLogTCPriceOverride">
                    <xs:annotation>
                        <xs:documentation>recording a PriceOverride.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="SafeDrop" type="POSLogTCSafeDrop">
                    <xs:annotation>
                        <xs:documentation>Money put into typically a floor safe during the day.
                            Typically used when a large sum or denomination of money is received.
                            Similar to Tender Pickup but driven and identified by different business
                            rules</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="SafeSettle" type="POSLogTCSafeSettle">
                    <xs:annotation>
                        <xs:documentation>The settlement of a safe at the end of a period.  Used in
                            reconciliation </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="StoredValueTransaction"
                    type="POSLogTCStoredValueTransactionType">
                    <xs:annotation>
                        <xs:documentation>Uset to deactivate, cashout, or recharge stored value
                            instrument</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="TenderAdjustment" type="POSLogTCTenderAdjustment">
                    <xs:annotation>
                        <xs:documentation>At end of day when during counts someone finds they've
                            incorrectly tendered some transactions. Example - you find the
                            theoretical cash deposit is wrong because you tendered a $100 order to
                            cash and not credit. It shows you have $100 more in cash than you do
                            -and it shows you have a $100 less in your credit card batch than you
                            do.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="TenderExchange" type="POSLogTCTenderExchange">
                    <xs:annotation>
                        <xs:documentation>Indicate money that is changed with money from one till to
                            another  for example a 20 dollar bill is exchanged for 20 one dollar
                            bills in another till/POS.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="TenderLoan" type="POSLogTCTenderLoan">
                    <xs:annotation>
                        <xs:documentation>Identification of moneys given to the till for example,
                            additional money given to the till during the day due o a shortage of a
                            particular currency type typically from a cash office.  Has an impact on
                            reconciliaiton.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="TenderPickup" type="SettleTenderPickupBase">
                    <xs:annotation>
                        <xs:documentation>Money removed from the till during the day caused
                            primarily by a drawer limit exceeded</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="TenderRedemption" type="POSLogTCTenderRedemption">
                    <xs:annotation>
                        <xs:documentation>Use to track redemption of a voucher or lotery card for
                            its cash value.  </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="TenderReturn" type="POSLogTender">
                    <xs:annotation>
                        <xs:documentation>overpayment returned to a customer.  For example a
                            customer puts $20 into a cash acceptor at the fuelling position.  They
                            then pump $18 worth of gas.  The transaction gets closed at the pump.
                            The customer gets a $2 voucher in the store</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="TillDeclaration" type="POSLogTCTillDeclaration">
                    <xs:annotation>
                        <xs:documentation>Reports the amount of money in the till by tender
                            type</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="TillOperatorAssignment"
                    type="POSLogTCTillOperatorAssignmentType">
                    <xs:annotation>
                        <xs:documentation>In operator accountability, reports the assingment of an
                            operator to a particular till.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="TillSettle" type="SettleBase">
                    <xs:annotation>
                        <xs:documentation>The settlement of a till at the end of a period.  Used in
                            reconciliation </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="TipOut" type="POSLogTotalsBase">
                    <xs:annotation>
                        <xs:documentation>At the end of the day, tip money collected during the day
                            is given to the individual workers.  This is how money is given and
                            tracked to workers who don't directly receive the original tip, i.e. bus
                            boys.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="Withdrawal" type="POSLogTCWithdrawal">
                    <xs:annotation>
                        <xs:documentation>records using a POS similar to an ATM
                            machine</xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="POSLogTCBankCheckPrinted">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="CheckNumber" type="xs:integer"/>
            <xs:element form="qualified" minOccurs="0" name="Reason" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Reason this bank check was printed, i.e. purchase a mop at the
                        local hardware store.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="POSLogTCCharityCollection">
        <xs:sequence>
            <xs:element form="qualified" name="CharityCode" type="xs:string"/>
            <xs:element form="qualified" name="Totals" type="POSLogTotalsBase"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute form="unqualified" name="TenderType" type="TenderTypeCode"/>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="POSLogTCCouponSummary">
        <xs:sequence>
            <xs:element form="qualified" name="CouponType" type="xs:string">
                <xs:annotation>
                    <xs:documentation>coupon type being reported in this node</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="Total" type="POSLogTotalsBase">
                <xs:annotation>
                    <xs:documentation>The monetary value of the sum of all store coupon line items
                        of this type recorded at the Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="POSLogTCDeposit">
        <xs:sequence>
            <xs:element form="qualified" name="Bank" type="xs:string"/>
            <xs:element form="qualified" name="Account" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The bank account into which the deposit is being
                        made</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="BagID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Unique ID for the bag in which the deposit was being
                        made</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="Amount" type="AmountCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="Over" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The excess money in the till over the amount reported by the
                        POS</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Short" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The amount of money in the till under the amount reported by
                        the POS</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Description"
                type="DescriptionCommonData"/>
            <xs:element form="qualified" name="Depositor" type="OperatorCommonData">
                <xs:annotation>
                    <xs:documentation>Unique ID of the operator that made the
                        deposit</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" name="DepositDetail"
                type="POSLogTCTenderTotal"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="POSLogTCLayawayPayments">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Tender"
                type="POSLogTCTenderTotal"/>
            <xs:element form="qualified" name="Totals" type="POSLogTotalsBase"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="POSLogTCLoans">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Tender"
                type="POSLogTCTenderTotal"/>
            <xs:element form="qualified" name="Total" type="POSLogTotalsBase"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="POSLogTCMiscellaneousFees">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Tender"
                type="POSLogTCTenderTotal"/>
            <xs:element form="qualified" name="Totals" type="POSLogTotalsBase"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="AccountLedgerCodeType">
        <xs:annotation>
            <xs:documentation>The account to which this is posted for example a General Ledger
                account or an Account Payable</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="TypeCode" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Identifies the type of ledger</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="POSLogTCPaidInType">
        <xs:complexContent>
            <xs:extension base="POSLogTotalsBase">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="AccountLedgerCode"
                        type="AccountLedgerCodeType">
                        <xs:annotation>
                            <xs:documentation>The account to which this is posted for example a
                                General Ledger account or an Account Payable</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
                        processContents="lax"/>
                </xs:sequence>
                <xs:anyAttribute namespace="##any" processContents="lax"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="POSLogTCPaidOutType">
        <xs:complexContent>
            <xs:extension base="POSLogTotalsBase">
                <xs:sequence>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="DocumentID">
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="xs:string">
                                    <xs:attribute form="unqualified" name="Name" type="xs:string"
                                        use="optional"/>
                                    <xs:attribute default="Invoice" form="unqualified"
                                        name="TypeCode" type="DocumentIDTypeCode" use="optional"/>
                                </xs:extension>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="AccountLedgerCode"
                        type="AccountLedgerCodeType">
                        <xs:annotation>
                            <xs:documentation>The account to which this is posted for example a
                                General Ledger account or an Account Payable</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
                        processContents="lax"/>
                </xs:sequence>
                <xs:anyAttribute namespace="##any" processContents="lax"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="POSLogTCPaymentsCollected">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Tender"
                type="POSLogTCTenderTotal"/>
            <xs:element form="qualified" name="Totals" type="POSLogTotalsBase"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="POSLogTCPettyCashDisbursements">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Tender"
                type="POSLogTCTenderTotal"/>
            <xs:element form="qualified" name="Totals" type="POSLogTotalsBase"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="POSLogTCPriceOverride">
        <xs:sequence>
            <xs:element form="qualified" name="OldPrice" type="UnitPriceCommonData"/>
            <xs:element form="qualified" name="Totals" type="POSLogTotalsBase"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="POSLogTCReturns">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Tender"
                type="POSLogTCTenderTotal"/>
            <xs:element form="qualified" name="Totals" type="POSLogTotalsBase"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="POSLogTCSafeDrop">
        <xs:sequence>
            <xs:element form="qualified" name="DropAmount" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The amount of money placed in the safe.  Typically used when
                        there is a cash drawer limit exceeded or a particularly large bill is
                        tendered.  This can be an automatic safe drop or manual. </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="EnvelopeID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The serial number on the Envelope that was used for this
                        SafeDrop</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="DropNumber" type="xs:integer">
                <xs:annotation>
                    <xs:documentation>A unique identifier for this particular drop.  If capable, the
                        id can be automatically generated by the safe.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="SafeID" type="xs:string"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Tender"
                type="POSLogTCTenderTotal"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="POSLogTCSafeSettle">
        <xs:sequence>
            <xs:element form="qualified" name="WorkstationID" type="WorkstationIDCommonData"/>
            <xs:element form="qualified" name="TenderOpenBalanceTotalAmount" type="AmountCommonData"/>
            <xs:element form="qualified" name="TenderCloseBalanceTotalAmount"
                type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>Closing balance in store safe</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TenderLoanTotalAmount"
                type="AmountCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="TotalTenderLoanCount" type="xs:integer"/>
            <xs:element form="qualified" minOccurs="0" name="TenderPickupTotalAmount"
                type="AmountCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="TotalTenderPickupCount"
                type="xs:integer"/>
            <xs:element form="qualified" minOccurs="0" name="TenderDepositTotalAmount"
                type="AmountCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="TenderReceiptTotalAmount"
                type="AmountCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="OverTenderDiscrepancyTotalAmount"
                type="AmountCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="UnderTenderDiscrepancyTotalAmount"
                type="AmountCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="PettyCashDisbursementTransactionTotal"
                type="AmountCommonData"/>
            <xs:element form="qualified" minOccurs="0"
                name="TotalPettyCashDisbursementTransactionCount" type="xs:integer"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="POSLogTCStoreCoupon">
        <xs:sequence>
            <xs:element form="qualified" name="Totals" type="POSLogTotalsBase">
                <xs:annotation>
                    <xs:documentation>The monetary value of the sum of all store coupon line items
                        recorded at the Till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="CouponSummary"
                type="POSLogTCCouponSummary">
                <xs:annotation>
                    <xs:documentation>Summary of individual store coupon types during the period
                        being reported</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="POSLogTCStoredValueTransactionType">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="StoredValueFund">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="POSLogTCStoredValueFund"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Tender" type="TenderBase"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute form="unqualified" name="Action" type="StoredValueInstrumentActionCode"
            use="required"/>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="POSLogTCStoredValueFund">
        <xs:complexContent>
            <xs:extension base="StoredValueFundBase">
                <xs:attribute form="unqualified" name="Direction" type="StoredValueDirections"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="POSLogTCTenderAdjustment">
        <xs:sequence>
            <xs:element form="qualified" name="OriginalTenderType" type="TenderTypeCode">
                <xs:annotation>
                    <xs:documentation>The type of Tender being counted and
                        adjusted</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="OriginalCount" type="xs:decimal">
                <xs:annotation>
                    <xs:documentation>The tender count being adjusted</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="NewTenderType" type="TenderTypeCode">
                <xs:annotation>
                    <xs:documentation>The type of Tender being counted &amp; adjusted</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="NewCount" type="xs:decimal">
                <xs:annotation>
                    <xs:documentation>The new tender count being adjusted</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Totals" type="POSLogTotalsBase">
                <xs:annotation>
                    <xs:documentation>Total amount being adjusted</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="Reason" type="ReasonCodeCommonData"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
        </xs:sequence>
        <xs:attribute form="unqualified" name="TypeCode">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="Summary"/>
                    <xs:enumeration value="Detail"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="POSLogTCTenderExchange">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="SourcePOS" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The unique identifier for the source of the Tender
                        exchange</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TargetPOS" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The unique identifier for the destination of the Tender
                        exchange</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ExchangeDetail"
                type="POSLogTCTenderTotal"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="POSLogTCTenderLoan">
        <xs:sequence>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element form="qualified" name="SafeID" type="xs:string"/>
                <xs:element form="qualified" name="EnvelopeID" type="xs:string"/>
            </xs:choice>
            <xs:element form="qualified" maxOccurs="unbounded" name="Totals"
                type="POSLogTCTenderTotal"/>
            <xs:element form="qualified" minOccurs="0" name="ReasonCode" type="ReasonCodeCommonData"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute form="unqualified" name="TenderType" type="TenderTypeCode" use="optional"/>
        <xs:attribute default="Normal" form="unqualified" name="TypeCode" type="TenderLoanTypes"/>
        <xs:attribute form="unqualified" name="SubTenderType" type="SubTenderTypeCodes"/>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="POSLogTCTenderRedemption">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" name="Voucher"
                type="TenderVoucherBase">
                <xs:annotation>
                    <xs:documentation>the item being exchanged for example a lottery
                        ticket</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" name="Tender"
                type="TenderDomainSpecific">
                <xs:annotation>
                    <xs:documentation>Tender Being refunded to the customer.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TransactionLink">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="TransactionLinkCommonData">
                            <xs:anyAttribute namespace="##other" processContents="lax"/>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="POSLogTCTenderTotal">
        <xs:sequence>
            <xs:choice maxOccurs="unbounded">
                <xs:element form="qualified" name="TenderTotals">
                    <xs:complexType>
                        <xs:simpleContent>
                            <xs:extension base="POSLogTenderID"/>
                        </xs:simpleContent>
                    </xs:complexType>
                </xs:element>
                <xs:element form="qualified" name="Amount" type="AmountCommonData">
                    <xs:annotation>
                        <xs:documentation>Maintains compatibility with V2.2.1 </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:choice>
            <xs:element form="qualified" minOccurs="0" name="Reason" type="ReasonCodeCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="ForeignCurrency"
                type="TenderForeignCurrencyBase"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="POSLogTCTillDeclaration">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" name="Tender" type="POSLogTender"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="POSLogTCTillOperatorAssignmentType">
        <xs:sequence>
            <xs:element form="qualified" name="OperatorID" type="OperatorCommonData">
                <xs:annotation>
                    <xs:documentation>The operator who is taking over accountability for this
                        till</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="POSLogTCPreAuthorization">
        <xs:sequence>
            <xs:element form="qualified" name="CreditDebit" type="TenderCreditDebitBase"/>
            <xs:element form="qualified" name="Authorization" type="TenderAuthorizationBase"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="POSLogTCPreAuthorizationReversal">
        <xs:sequence>
            <xs:element form="qualified" name="CreditDebit" type="TenderCreditDebitBase"/>
            <xs:element form="qualified" name="Authorization" type="TenderAuthorizationBase"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="POSLogTCWithdrawal">
        <xs:annotation>
            <xs:documentation>for cashing checks and/or using debit card as ATM
                machine</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" name="Amount" type="AmountCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="Quantity" type="QuantityCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="MerchandiseHierarchy"
                type="MerchandiseHierarchyCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="Authorization"
                type="TenderAuthorizationBase"/>
            <xs:element form="qualified" minOccurs="0" name="Verification"
                type="TenderCustomerVerificationBase"/>
            <xs:choice minOccurs="0">
                <xs:element form="qualified" name="CreditDebit" type="TenderCreditDebitBase"/>
                <xs:element form="qualified" name="Check" type="TenderCheckBase"/>
            </xs:choice>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <!-- 
		Tender Load Type Codes 
	-->
    <xs:simpleType name="TenderLoanTypes">
        <xs:union memberTypes="TenderLoanTypesEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="TenderLoanTypesEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Normal"/>
            <xs:enumeration value="OpenFLoat"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- 
		Stored Value Actions 
	-->
    <xs:simpleType name="StoredValueActions">
        <xs:union memberTypes="StoredValueActionsEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="StoredValueActionsEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Deactivate"/>
            <xs:enumeration value="Cashout"/>
            <xs:enumeration value="Recharge"/>
            <xs:enumeration value="Replace"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- 
		Stored Value Directions 
	-->
    <xs:simpleType name="StoredValueDirections">
        <xs:union memberTypes="StoredValueDirectionsEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="StoredValueDirectionsEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="To"/>
            <xs:enumeration value="From"/>
            <xs:enumeration value="Other"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ************************************************************ -->
    <!-- ********** Retail Transaction Enumerations ********** -->
    <!--
        Enumerated type for Check Type Code attribute
    -->
    <xs:complexType name="POSLogTender">
        <xs:sequence>
            <xs:element form="qualified" name="Denomination" type="xs:decimal"/>
            <xs:element form="qualified" name="BeginningCount" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The count of  the kind of tender at the beginning of the
                        settlement period</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="EndingCount" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The count of  the kind of tender at the ending of the
                        settlement period</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="Total" type="POSLogTotalsBase"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute form="unqualified" name="TenderType" type="TenderTypeCode"/>
        <xs:attribute form="unqualified" name="SubTenderType" type="SubTenderTypeCodes"
            use="optional"/>
    </xs:complexType>
    <!-- ============================ -->
    <!--      Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="TenderControlTransactionDomainSpecific">
        <xs:complexContent>
            <xs:extension base="TenderControlTransactionBase">
                <xs:sequence>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
                        processContents="lax"/>
                </xs:sequence>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- ====================== -->
    <!--       Library Schemas        -->
    <!-- ====================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ====================== -->
    <!--       Library Schemas        -->
    <!-- ====================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="TenderFoodStampsBase">
        <xs:annotation>
            <xs:documentation>US Federal Govt. issued food stamps are used to tender the
                sale</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="FederalID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The unique ID for the agency which issued this set of food
                        stamps</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="SerialNumber" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="FoodStampsChange">
                <xs:annotation>
                    <xs:documentation>The monetary value of food stamps that're given in
                        change</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
    </xs:complexType>
    <!-- ====================== -->
    <!--       Library Schemas        -->
    <!-- ====================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="TenderGiftCardBase">
        <xs:sequence>
            <xs:element form="qualified" name="CardNumber" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The human readable number on the gift card being
                        tendered.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="DateSold" type="xs:date">
                <xs:annotation>
                    <xs:documentation>The date the gift card was sold.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="DateActivated" type="xs:date">
                <xs:annotation>
                    <xs:documentation>The date the gift card being tendered or sold was
                        activated</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ExpirationDate" type="xs:date"/>
            <xs:element form="qualified" minOccurs="0" name="InitialBalance">
                <xs:annotation>
                    <xs:documentation>the original amount of the gift card.  It is possible to add
                        money to the gift card thus changing the amount on the
                        card.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="CurrentBalance">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="OpenAmountFlag" type="xs:boolean"/>
            <xs:element form="qualified" minOccurs="0" name="Authorization"
                type="TenderAuthorizationDomainSpecific"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
    </xs:complexType>
    <!-- ====================== -->
    <!--       Library Schemas        -->
    <!-- ====================== -->
    <!--
		Enumerated type for  CommonData Action Type Codes attribute
	-->
    <xs:simpleType name="ITU-E.212ACommonDataTypeCodes">
        <xs:annotation>
            <xs:documentation>List of Mobile Country or Geographical Area Codes</xs:documentation>
        </xs:annotation>
        <xs:union memberTypes="ITU-E.212ACommonDataTypeCodesEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="ITU-E.212ACommonDataTypeCodesEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="412">
                <xs:annotation>
                    <xs:documentation>Afghanistan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="276">
                <xs:annotation>
                    <xs:documentation>Albania (Republic of) </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="603">
                <xs:annotation>
                    <xs:documentation>Algeria (People's Democratic Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="544">
                <xs:annotation>
                    <xs:documentation>American Samo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="213">
                <xs:annotation>
                    <xs:documentation>Andorra (Principality of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="631">
                <xs:annotation>
                    <xs:documentation>Angola (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="365">
                <xs:annotation>
                    <xs:documentation>Anguilla</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="344">
                <xs:annotation>
                    <xs:documentation>Antigua and Barbuda</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="722">
                <xs:annotation>
                    <xs:documentation>Argentine Republic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="283">
                <xs:annotation>
                    <xs:documentation>Armenia (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="363">
                <xs:annotation>
                    <xs:documentation>Aruba</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="505">
                <xs:annotation>
                    <xs:documentation>Australia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="232">
                <xs:annotation>
                    <xs:documentation>Austria</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="400">
                <xs:annotation>
                    <xs:documentation>Azerbaijani Republic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="364">
                <xs:annotation>
                    <xs:documentation>Bahamas (Commonwealth of the)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="426">
                <xs:annotation>
                    <xs:documentation>Bahrain (Kingdom of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="470">
                <xs:annotation>
                    <xs:documentation>Bangladesh (People's Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="342">
                <xs:annotation>
                    <xs:documentation>Barbados</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="257">
                <xs:annotation>
                    <xs:documentation>Belarus (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="206">
                <xs:annotation>
                    <xs:documentation>Belgium</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="702">
                <xs:annotation>
                    <xs:documentation>Belize</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="616">
                <xs:annotation>
                    <xs:documentation>Benin (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="350">
                <xs:annotation>
                    <xs:documentation>Bermuda</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="402">
                <xs:annotation>
                    <xs:documentation>Bhutan (Kingdom of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="736">
                <xs:annotation>
                    <xs:documentation>Bolivia (Plurinational State of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="218">
                <xs:annotation>
                    <xs:documentation>Bosnia and Herzegovina</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="652">
                <xs:annotation>
                    <xs:documentation>Botswana (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="724">
                <xs:annotation>
                    <xs:documentation>Brazil (Federative Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="348">
                <xs:annotation>
                    <xs:documentation>British Virgin Islands</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="528">
                <xs:annotation>
                    <xs:documentation>Brunei Darussalam</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="284">
                <xs:annotation>
                    <xs:documentation>Bulgaria (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="613">
                <xs:annotation>
                    <xs:documentation>Burkina Faso</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="642">
                <xs:annotation>
                    <xs:documentation>Burundi (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="456">
                <xs:annotation>
                    <xs:documentation>Cambodia (Kingdom of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="624">
                <xs:annotation>
                    <xs:documentation>Cameroon (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="302">
                <xs:annotation>
                    <xs:documentation>Canada</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="625">
                <xs:annotation>
                    <xs:documentation>Cape Verde (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="346">
                <xs:annotation>
                    <xs:documentation>Cayman Islands</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="623">
                <xs:annotation>
                    <xs:documentation>Central African Republic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="622">
                <xs:annotation>
                    <xs:documentation>Chad (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="730">
                <xs:annotation>
                    <xs:documentation>Chile</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="461">
                <xs:annotation>
                    <xs:documentation>China (People's Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="460">
                <xs:annotation>
                    <xs:documentation>China (People's Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="732">
                <xs:annotation>
                    <xs:documentation>Colombia (Republic of))</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="654">
                <xs:annotation>
                    <xs:documentation>Comoros (Union of the)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="629">
                <xs:annotation>
                    <xs:documentation>Congo (Republic of the)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="548">
                <xs:annotation>
                    <xs:documentation>Cook Islands</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="712">
                <xs:annotation>
                    <xs:documentation>Costa Rica</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="612">
                <xs:annotation>
                    <xs:documentation>Côte d'Ivoire (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="219">
                <xs:annotation>
                    <xs:documentation>Croatia (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="368">
                <xs:annotation>
                    <xs:documentation>Cuba</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="280">
                <xs:annotation>
                    <xs:documentation>Cyprus (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="230">
                <xs:annotation>
                    <xs:documentation>Czech Republic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="467">
                <xs:annotation>
                    <xs:documentation>Democratic People's Republic of Korea</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="630">
                <xs:annotation>
                    <xs:documentation>Democratic Republic of the Congo</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="514">
                <xs:annotation>
                    <xs:documentation>Democratic Republic of Timor-Leste</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="238">
                <xs:annotation>
                    <xs:documentation>Denmark</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="638">
                <xs:annotation>
                    <xs:documentation>Djibouti (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="366">
                <xs:annotation>
                    <xs:documentation>Dominica (Commonwealth of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="370">
                <xs:annotation>
                    <xs:documentation>Dominican Republic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="740">
                <xs:annotation>
                    <xs:documentation>Ecuador</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="602">
                <xs:annotation>
                    <xs:documentation>Egypt (Arab Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="706">
                <xs:annotation>
                    <xs:documentation>El Salvador (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="627">
                <xs:annotation>
                    <xs:documentation>Equatorial Guinea (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="657">
                <xs:annotation>
                    <xs:documentation>Eritrea</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="248">
                <xs:annotation>
                    <xs:documentation>Estonia (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="636">
                <xs:annotation>
                    <xs:documentation>Ethiopia (Federal Democratic Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="750">
                <xs:annotation>
                    <xs:documentation>Falkland Islands (Malvinas)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="288">
                <xs:annotation>
                    <xs:documentation>Faroe Islands</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="542">
                <xs:annotation>
                    <xs:documentation>Fiji (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="244">
                <xs:annotation>
                    <xs:documentation>Finland</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="208">
                <xs:annotation>
                    <xs:documentation>France</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="647">
                <xs:annotation>
                    <xs:documentation>French Departments and Territories in the Indian
                        Ocean</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="742">
                <xs:annotation>
                    <xs:documentation>French Guiana (French Department of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="547">
                <xs:annotation>
                    <xs:documentation>French Polynesia (Territoire français
                        d'outre-mer)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="628">
                <xs:annotation>
                    <xs:documentation>Gabonese Republic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="607">
                <xs:annotation>
                    <xs:documentation>Gambia (Republic of the)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="282">
                <xs:annotation>
                    <xs:documentation>Georgia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="262">
                <xs:annotation>
                    <xs:documentation>Germany (Federal Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="620">
                <xs:annotation>
                    <xs:documentation>Ghana</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="266">
                <xs:annotation>
                    <xs:documentation>Gibraltar</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="202">
                <xs:annotation>
                    <xs:documentation>Greece</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="290">
                <xs:annotation>
                    <xs:documentation>Greenland (Denmark)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="352">
                <xs:annotation>
                    <xs:documentation>Grenada</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="340">
                <xs:annotation>
                    <xs:documentation>Guadeloupe (French Department of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="704">
                <xs:annotation>
                    <xs:documentation>Guatemala (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="611">
                <xs:annotation>
                    <xs:documentation>Guinea (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="632">
                <xs:annotation>
                    <xs:documentation>Guinea-Bissau (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="738">
                <xs:annotation>
                    <xs:documentation>Guyana</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="372">
                <xs:annotation>
                    <xs:documentation>Haiti (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="708">
                <xs:annotation>
                    <xs:documentation>Honduras (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="454">
                <xs:annotation>
                    <xs:documentation>Hong Kong, China</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="216">
                <xs:annotation>
                    <xs:documentation>Hungary (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="274">
                <xs:annotation>
                    <xs:documentation>Iceland</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="404">
                <xs:annotation>
                    <xs:documentation>India (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="405">
                <xs:annotation>
                    <xs:documentation>India (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="406">
                <xs:annotation>
                    <xs:documentation>India (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="510">
                <xs:annotation>
                    <xs:documentation>Indonesia (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="901">
                <xs:annotation>
                    <xs:documentation>International Mobile, shared code</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="432">
                <xs:annotation>
                    <xs:documentation>Iran (Islamic Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="418">
                <xs:annotation>
                    <xs:documentation>Iraq (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="272">
                <xs:annotation>
                    <xs:documentation>Ireland</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="425">
                <xs:annotation>
                    <xs:documentation>Israel (State of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="222">
                <xs:annotation>
                    <xs:documentation>Italy</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="338">
                <xs:annotation>
                    <xs:documentation>Jamaica</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="440">
                <xs:annotation>
                    <xs:documentation>Japan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="441">
                <xs:annotation>
                    <xs:documentation>Japan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="416">
                <xs:annotation>
                    <xs:documentation>Jordan (Hashemite Kingdom of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="401">
                <xs:annotation>
                    <xs:documentation>Kazakhstan (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="639">
                <xs:annotation>
                    <xs:documentation>Kenya (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="545">
                <xs:annotation>
                    <xs:documentation>Kiribati (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="450">
                <xs:annotation>
                    <xs:documentation>Korea (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="419">
                <xs:annotation>
                    <xs:documentation>Kuwait (State of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="437">
                <xs:annotation>
                    <xs:documentation>Kyrgyz Republic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="457">
                <xs:annotation>
                    <xs:documentation>Lao People's Democratic Republic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="247">
                <xs:annotation>
                    <xs:documentation>Latvia (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="415">
                <xs:annotation>
                    <xs:documentation>Lebanon</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="651">
                <xs:annotation>
                    <xs:documentation>Lesotho (Kingdom of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="618">
                <xs:annotation>
                    <xs:documentation>Liberia (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="606">
                <xs:annotation>
                    <xs:documentation>Libya (Socialist People's Libyan Arab
                        Jamahiriya)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="295">
                <xs:annotation>
                    <xs:documentation>Liechtenstein (Principality of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="246">
                <xs:annotation>
                    <xs:documentation>Lithuania (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="270">
                <xs:annotation>
                    <xs:documentation>Luxembourg</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="455">
                <xs:annotation>
                    <xs:documentation>Macao, China</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="646">
                <xs:annotation>
                    <xs:documentation>Madagascar (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="650">
                <xs:annotation>
                    <xs:documentation>Malawi</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="502">
                <xs:annotation>
                    <xs:documentation>Malaysia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="472">
                <xs:annotation>
                    <xs:documentation>Maldives (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="610">
                <xs:annotation>
                    <xs:documentation>Mali (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="278">
                <xs:annotation>
                    <xs:documentation>Malta</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="551">
                <xs:annotation>
                    <xs:documentation>Marshall Islands (Republic of the)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="340">
                <xs:annotation>
                    <xs:documentation>Martinique (French Department of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="609">
                <xs:annotation>
                    <xs:documentation>Mauritania (Islamic Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="617">
                <xs:annotation>
                    <xs:documentation>Mauritius (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="334">
                <xs:annotation>
                    <xs:documentation>Mexico</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="550">
                <xs:annotation>
                    <xs:documentation>Micronesia (Federated States of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="259">
                <xs:annotation>
                    <xs:documentation>Moldova (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="212">
                <xs:annotation>
                    <xs:documentation>Monaco (Principality of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="428">
                <xs:annotation>
                    <xs:documentation>Mongolia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="297">
                <xs:annotation>
                    <xs:documentation>Montenegro (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="354">
                <xs:annotation>
                    <xs:documentation>Montserrat</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="604">
                <xs:annotation>
                    <xs:documentation>Morocco (Kingdom of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="643">
                <xs:annotation>
                    <xs:documentation>Mozambique (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="414">
                <xs:annotation>
                    <xs:documentation>Myanmar (Union of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="649">
                <xs:annotation>
                    <xs:documentation>Namibia (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="536">
                <xs:annotation>
                    <xs:documentation>Nauru (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="429">
                <xs:annotation>
                    <xs:documentation>Nepal (Federal Democratic Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="204">
                <xs:annotation>
                    <xs:documentation>Netherlands (Kingdom of the)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="362">
                <xs:annotation>
                    <xs:documentation>Netherlands Antilles</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="546">
                <xs:annotation>
                    <xs:documentation>New Caledonia (Territoire français
                        d'outre-mer)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="530">
                <xs:annotation>
                    <xs:documentation>New Zealand</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="710">
                <xs:annotation>
                    <xs:documentation>Nicaragua</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="614">
                <xs:annotation>
                    <xs:documentation>Niger (Republic of the)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="621">
                <xs:annotation>
                    <xs:documentation>Nigeria (Federal Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="242">
                <xs:annotation>
                    <xs:documentation>Norway</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="422">
                <xs:annotation>
                    <xs:documentation>Oman (Sultanate of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="410">
                <xs:annotation>
                    <xs:documentation>Pakistan (Islamic Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="552">
                <xs:annotation>
                    <xs:documentation>Palau (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="714">
                <xs:annotation>
                    <xs:documentation>Panama (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="537">
                <xs:annotation>
                    <xs:documentation>Papua New Guinea</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="744">
                <xs:annotation>
                    <xs:documentation>Paraguay (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="716">
                <xs:annotation>
                    <xs:documentation>Peru</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="515">
                <xs:annotation>
                    <xs:documentation>Philippines (Republic of the)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="260">
                <xs:annotation>
                    <xs:documentation>Poland (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="268">
                <xs:annotation>
                    <xs:documentation>Portugal</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="330">
                <xs:annotation>
                    <xs:documentation>Puerto Rico</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="427">
                <xs:annotation>
                    <xs:documentation>Qatar (State of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="0XX">
                <xs:annotation>
                    <xs:documentation>Res</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="1XX">
                <xs:annotation>
                    <xs:documentation>Res</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="8XX">
                <xs:annotation>
                    <xs:documentation>Res</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="226">
                <xs:annotation>
                    <xs:documentation>Romania</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="250">
                <xs:annotation>
                    <xs:documentation>Russian Federation</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="635">
                <xs:annotation>
                    <xs:documentation>Rwanda (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="356">
                <xs:annotation>
                    <xs:documentation>Saint Kitts and Nevis</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="358">
                <xs:annotation>
                    <xs:documentation>Saint Lucia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="308">
                <xs:annotation>
                    <xs:documentation>Saint Pierre and Miquelon (Collectivité territoriale de la
                        République française)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="360">
                <xs:annotation>
                    <xs:documentation>Saint Vincent and the Grenadines</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="549">
                <xs:annotation>
                    <xs:documentation>Samoa (Independent State of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="292">
                <xs:annotation>
                    <xs:documentation>San Marino (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="626">
                <xs:annotation>
                    <xs:documentation>Sao Tome and Principe (Democratic Republic
                        of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="420">
                <xs:annotation>
                    <xs:documentation>Saudi Arabia (Kingdom of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="608">
                <xs:annotation>
                    <xs:documentation>Senegal (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="220">
                <xs:annotation>
                    <xs:documentation>Serbia (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="633">
                <xs:annotation>
                    <xs:documentation>Seychelles (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="619">
                <xs:annotation>
                    <xs:documentation>Sierra Leone</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="525">
                <xs:annotation>
                    <xs:documentation>Singapore (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="231">
                <xs:annotation>
                    <xs:documentation>Slovak Republic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="293">
                <xs:annotation>
                    <xs:documentation>Slovenia (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="540">
                <xs:annotation>
                    <xs:documentation>Solomon Islands</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="637">
                <xs:annotation>
                    <xs:documentation>Somali Democratic Republic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="655">
                <xs:annotation>
                    <xs:documentation>South Africa (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="214">
                <xs:annotation>
                    <xs:documentation>Spain</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="413">
                <xs:annotation>
                    <xs:documentation>Sri Lanka (Democratic Socialist Republic
                        of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="634">
                <xs:annotation>
                    <xs:documentation>Sudan (Republic of the)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="746">
                <xs:annotation>
                    <xs:documentation>Suriname (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="653">
                <xs:annotation>
                    <xs:documentation>Swaziland (Kingdom of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="240">
                <xs:annotation>
                    <xs:documentation>Sweden</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="228">
                <xs:annotation>
                    <xs:documentation>Switzerland (Confederation of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="417">
                <xs:annotation>
                    <xs:documentation>Syrian Arab Republic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="466">
                <xs:annotation>
                    <xs:documentation>Taiwan, China</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="436">
                <xs:annotation>
                    <xs:documentation>Tajikistan (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="640">
                <xs:annotation>
                    <xs:documentation>Tanzania (United Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="520">
                <xs:annotation>
                    <xs:documentation>Thailand</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="294">
                <xs:annotation>
                    <xs:documentation>The Former Yugoslav Republic of Macedonia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="615">
                <xs:annotation>
                    <xs:documentation>Togolese Republic</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="539">
                <xs:annotation>
                    <xs:documentation>Tonga (Kingdom of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="374">
                <xs:annotation>
                    <xs:documentation>Trinidad and Tobago</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="605">
                <xs:annotation>
                    <xs:documentation>Tunisia</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="286">
                <xs:annotation>
                    <xs:documentation>Turkey</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="438">
                <xs:annotation>
                    <xs:documentation>Turkmenistan</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="376">
                <xs:annotation>
                    <xs:documentation>Turks and Caicos Islands</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="641">
                <xs:annotation>
                    <xs:documentation>Uganda (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="255">
                <xs:annotation>
                    <xs:documentation>Ukraine</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="424">
                <xs:annotation>
                    <xs:documentation>United Arab Emirates</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="430">
                <xs:annotation>
                    <xs:documentation>United Arab Emirates</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="431">
                <xs:annotation>
                    <xs:documentation>United Arab Emirates</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="235">
                <xs:annotation>
                    <xs:documentation>United Kingdom of Great Britain and Northern
                        Ireland</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="234">
                <xs:annotation>
                    <xs:documentation>United Kingdom of Great Britain and Northern
                        Ireland</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="310">
                <xs:annotation>
                    <xs:documentation>United States of America</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="316">
                <xs:annotation>
                    <xs:documentation>United States of America</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="311">
                <xs:annotation>
                    <xs:documentation>United States of America</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="313">
                <xs:annotation>
                    <xs:documentation>United States of America</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="314">
                <xs:annotation>
                    <xs:documentation>United States of America</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="315">
                <xs:annotation>
                    <xs:documentation>United States of America</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="312">
                <xs:annotation>
                    <xs:documentation>United States of America</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="332">
                <xs:annotation>
                    <xs:documentation>United States Virgin Islands</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="748">
                <xs:annotation>
                    <xs:documentation>Uruguay (Eastern Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="434">
                <xs:annotation>
                    <xs:documentation>Uzbekistan (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="541">
                <xs:annotation>
                    <xs:documentation>Vanuatu (Republic of) </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="225">
                <xs:annotation>
                    <xs:documentation>Vatican City State</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="734">
                <xs:annotation>
                    <xs:documentation>Venezuela (Bolivarian Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="452">
                <xs:annotation>
                    <xs:documentation>Viet Nam (Socialist Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="543">
                <xs:annotation>
                    <xs:documentation>Wallis and Futuna (Territoire français
                        d'outre-mer)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="421">
                <xs:annotation>
                    <xs:documentation>Yemen (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="645">
                <xs:annotation>
                    <xs:documentation>Zambia (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="648">
                <xs:annotation>
                    <xs:documentation>Zimbabwe (Republic of)</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="TenderMobileBase">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="GeoLocation"
                type="GeoPhysicalLocationCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="SensitiveData"
                type="SensitiveMobileType"/>
            <xs:element form="qualified" minOccurs="0" name="Telephone" type="TelephoneCommonData"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute default="Personal" form="unqualified" name="MobileNetworkCode"
            type="xs:string" use="optional"/>
        <xs:attribute form="unqualified" name="MobileCountryCode"
            type="ITU-E.212ACommonDataTypeCodes"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="SensitiveMobileType">
        <xs:attribute form="unqualified" name="MSISDN" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>Definition: Mobile Subscriber Integrated Service Digital Network
                    (i.e. mobile phone number of the SIM card). -- Usage: Country, National
                    Destination Code, and Subscriber Number.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="IMEI" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>Definition: International Mobile Equipement Identity. --
                    Reference: ITU-T E.212 -- Usage: Unique number associated with the mobile phone
                    device.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="IMSI" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>Definition: International Mobile Subscriber Identity. --
                    Reference: ITU-T E.212 -- Usage: Unique number associated with the mobile phone
                    user, containing the Mobile Country Code (MCC), the Mobile Network Code (MNC),
                    and the Mobile Identification Number (MSIN)</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <!-- ====================== -->
    <!--       Library Schemas        -->
    <!-- ====================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="TenderPurchaseOrderBase">
        <xs:annotation>
            <xs:documentation> tendering of a sale with a purchase order</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" name="PurchaseOrderID" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="OrganizationID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A unique identifier for the Organization issuing the Purchase
                        Order that is being used to tender the transaction</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="EffectiveDate" type="xs:date">
                <xs:annotation>
                    <xs:documentation>The Date on the PurchaseOrder provided by the customer after
                        this date the purchase order is allowed to be used</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PartyID" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="AuthorizedAmount">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="CustomerID" type="xs:string"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
    </xs:complexType>
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!-- ====================== -->
    <!--       Library Schemas        -->
    <!-- ====================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ====================== -->
    <!--       Library Schemas        -->
    <!-- ====================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="TenderChangeBase">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="TenderID" type="xs:string"/>
            <xs:element form="qualified" name="Amount">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ForeignCurrency"
                type="TenderForeignCurrencyBase"/>
            <xs:element form="qualified" minOccurs="0" name="GiftCard" type="TenderGiftCardBase"/>
        </xs:sequence>
        <xs:attribute form="unqualified" name="TenderType" type="TenderTypeCode">
            <xs:annotation>
                <xs:documentation>This TenderType maps to the TenderClassCode in the ARTS Datamodel
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="TenderChangeDomainSpecific">
        <xs:complexContent>
            <xs:extension base="TenderChangeBase">
                <xs:sequence minOccurs="0">
                    <xs:element form="qualified" minOccurs="0" name="Voucher"
                        type="TenderVoucherBase"/>
                    <xs:element form="qualified" minOccurs="0" name="FoodStamps"
                        type="TenderFoodStampsBase"/>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
                        processContents="lax"/>
                </xs:sequence>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--  ============================ -->
    <!--                   TENDER                           -->
    <!--  ============================ -->
    <xs:complexType name="TenderBase">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Amount">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="AmountAppliedToBill"
                type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The amount of this tender line item that is applied to the
                        transaction total.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="TenderChange"
                type="TenderChangeDomainSpecific">
                <xs:annotation>
                    <xs:documentation>Being Market for deprecation.  This is being replace with a
                        TenderChange Line Item. The ItemLink at the line item level allows tieing
                        the change to the original tender.  in addition this brings the schema in
                        sync with the data model with respect to change.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Cashback" type="AmountCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="ReasonCode" type="ReasonCodeCommonData"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Authorization"
                type="TenderAuthorizationDomainSpecific"/>
            <xs:element form="qualified" minOccurs="0" name="Tip" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The monetary amount of any Tip that is included in this
                        TenderLineItem</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ForeignCurrency"
                type="TenderForeignCurrencyBase"/>
            <xs:element form="qualified" minOccurs="0" name="Rounding" type="RoundingCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="CustomerVerification"
                type="TenderCustomerVerificationBase">
                <xs:annotation>
                    <xs:documentation>records the customer details used to verify the customer
                        providing this tender; check, credit card, ...</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Check"
                type="TenderCheckBase"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="CreditDebit"
                type="TenderCreditDebitDomainSpecific"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Coupon"
                type="TenderCouponBase"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="FoodStamps"
                type="TenderFoodStampsBase"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Voucher"
                type="TenderVoucherBase"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="TravelersCheck"
                type="TenderCheckBase"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                name="LoyaltyRedemption" type="LoyaltyRedemptionBase"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="PurchaseOrder"
                type="TenderPurchaseOrderBase"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="StoreAccount"
                type="TenderAccountInfoBase">
                <xs:annotation>
                    <xs:documentation>records the purchase to a store account.  Typically used to
                        purchase items for use in the store</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="GiftCard"
                type="TenderGiftCardBase"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                name="StoredValueInstrument" type="StoredValueInstrumentBase"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Mobile"
                type="TenderMobileBase"/>
        </xs:sequence>
        <xs:attribute default="Cash" form="unqualified" name="TenderType" type="TenderTypeCode"
            use="optional">
            <xs:annotation>
                <xs:documentation>This TenderType maps to the TenderTypeCode in the ARTS
                    Datamodel</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="SubTenderType" type="SubTenderTypeCodes"
            use="optional"/>
        <xs:attribute default="Sale" form="unqualified" name="TypeCode" type="TenderSalesTypeCode"
            use="optional">
            <xs:annotation>
                <xs:documentation>Money going into the Till is a SALE.  Money going out of the Till
                    is a REFUND.  if this is a TenderChange then the money given back to the
                    customer (going out of the till) is a "Refund"</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="TenderRestrictionRuleType">
        <xs:annotation>
            <xs:documentation>Reports the items which are restricted to this type
                tender</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="ThresholdAmount"
                type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>A monetary amount at which this restriction tender rule
                        applies.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="ItemLink"
                type="SequenceNumberType">
                <xs:annotation>
                    <xs:documentation>Allows linking any line item type to any other line
                        item</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <!--
        Enumerated type for Check Type Code attribute
    -->
    <!-- 
		Tender Sales Type Code 
	-->
    <xs:simpleType name="TenderSalesTypeCode">
        <xs:union memberTypes="TenderSalesTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="TenderSalesTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Sale"/>
            <xs:enumeration value="Refund"/>
            <xs:enumeration value="Reissue"/>
            <xs:enumeration value="PreAuthorize"/>
        </xs:restriction>
    </xs:simpleType>
    <!--  ============================= -->
    <!--                 POSLOG LIBRARY              -->
    <!--  ============================= -->
    <!--
        Enumerated type for Coupon Type attribute
    -->
    <!-- ************************************************************ -->
    <!-- 
	   Utility complex types that're useful when building RetailTransactions
	-->
    <xs:complexType name="AffiliatedOrganizationType">
        <xs:sequence>
            <xs:element form="qualified" name="Name" type="xs:string"/>
            <xs:element form="qualified" name="OrganizationID" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <!--  ============================ -->
    <!--                   TENDER                           -->
    <!--  ============================ -->
    <!--
       Complex types for each of the pre-cooked tender line item types defined above
    -->
    <!--  ============================ -->
    <xs:simpleType name="POSLogVoucherID">
        <xs:restriction base="xs:string">
            <xs:enumeration value="StoredValue"/>
            <xs:enumeration value="GiftCertificates"/>
            <xs:enumeration value="Voucher"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="TenderDomainSpecific">
        <xs:complexContent>
            <xs:extension base="TenderBase">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="TenderID" type="POSLogTenderID"/>
                    <xs:element form="qualified" minOccurs="0" name="TillID" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>This is to allow a multi-drawer operation where
                                different tender types are in each till </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="CustomerIdentification" type="xs:string"/>
                    <xs:element form="qualified" minOccurs="0" name="Address" type="NameAddressType"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="MonetaryKind" type="MonetaryKindBase"/>
                    <xs:element form="qualified" minOccurs="0" name="SendCheck"
                        type="TenderSendCheckType"/>
                    <xs:element form="qualified" minOccurs="0" name="CoPay" type="TenderCoPayType"/>
                    <xs:element form="qualified" minOccurs="0" name="TenderRestrictionRule"
                        type="TenderRestrictionRuleType">
                        <xs:annotation>
                            <xs:documentation>A monetary amount at which this restriction tender
                                rule applies.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="AccountsReceivable" type="TenderAccountInfoBase"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="EBTCash"
                        type="TenderCreditDebitBase"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="EBTFoodstamps" type="TenderCreditDebitBase"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="ElectronicTollCollection" type="TenderAccountInfoBase">
                        <xs:annotation>
                            <xs:documentation>specific implementations are know as ez pass, pike
                                pass, etc.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="MoneyOrder" type="TenderCheckBase"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="InternationalMoneyOrder" type="TenderCheckBase"/>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
                        processContents="lax"/>
                </xs:sequence>
                <xs:attribute form="unqualified" name="CardPresentFlag" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>For most transactions the card will be present but more
                            and more transactions will be card not present.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="false" form="unqualified" name="CoPayFlag" type="xs:boolean"
                    use="optional">
                    <xs:annotation>
                        <xs:documentation>A flag denoting that this tender line item is a medical
                            insurance co-pay</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="TenderSendCheckType">
        <xs:annotation>
            <xs:documentation>recording a check will be sent to the customer</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" name="ReasonCode" type="xs:string"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="TenderCoPayType">
        <xs:annotation>
            <xs:documentation>tendering of a drugstore sales by insurance company
                co-pay</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" name="CoPayAmount" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The amount of the co-payment tender line
                        item</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="TotalAmount" type="AmountCommonData"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="NameAddressType">
        <xs:annotation>
            <xs:documentation>the name and address to receive the check</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="AddressCommonData">
                <xs:sequence minOccurs="0">
                    <xs:element form="qualified" name="Name" type="NameCommonData"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--  ============================ -->
    <!--   RETAIL TRANSACTION LINE ITEM   -->
    <!--  ============================ -->
    <xs:complexType name="LineItemChoiceBase">
        <xs:choice minOccurs="0">
            <xs:element form="qualified" name="Sale" type="SaleBase">
                <xs:annotation>
                    <xs:documentation>A flavor of retail transaction line item whereby a customer is
                        purchasing an item and they are taking it with them.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="SaleForDelivery" type="SaleForDeliveryBase">
                <xs:annotation>
                    <xs:documentation>A flavor of retail transaction line item whereby a customer is
                        purchasing an item and it will be delivered to some location at some future
                        date and time.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="SaleForPickup" type="SaleForPickupBase">
                <xs:annotation>
                    <xs:documentation>A flavor of retail transaction line item whereby a customer is
                        purchasing an item and they will pick it up from some location at some
                        future date and time.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="Return" type="ReturnBase">
                <xs:annotation>
                    <xs:documentation>A flavor of retail transaction line item whereby the customer
                        is returning an item and they have bought it with them.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="ReturnForDelivery" type="ReturnForDeliveryBase">
                <xs:annotation>
                    <xs:documentation>A flavor of retail transaction line item whereby the customer
                        is returning an item and it will be delivered to some location at some
                        future date and time.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="ReturnForPickup" type="ReturnForPickupBase">
                <xs:annotation>
                    <xs:documentation>A flavor of retail transaction line item whereby the customer
                        is returning an item and the store will pick it up from some location at
                        some future date and time.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="Layaway" type="LayawayBase">
                <xs:annotation>
                    <xs:documentation>A flavor of retail transaction line item whereby the customer
                        is purchasing an item, but is not paying for it now. The store will put the
                        item aside, and once the customer has completed payment they will take it
                        with them. </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="PreviousLayaway" type="PreviousLayawayBase">
                <xs:annotation>
                    <xs:documentation>recording previous layaway details</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="RainCheck" type="RainCheckBase">
                <xs:annotation>
                    <xs:documentation>A flavor of retail transaction line item whereby the customer
                        wanted to purchase an item, but it is unavailable, and the store is issuing
                        a special receipt guaranteeing the price of the item to the customer when it
                        next becomes available.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="CustomerOrderForDelivery"
                type="CustomerOrderForDeliveryBase">
                <xs:annotation>
                    <xs:documentation>A flavor of retail transaction line item whereby the customer
                        wanted to purchase an item, but it is unavailable. The store is placing a
                        special order on behalf of the customer, and will deliver the item when it
                        becomes available. The customer may or may not pay for the item at the time
                        of placing the order.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="CustomerOrderForPickup"
                type="CustomerOrderForPickupBase">
                <xs:annotation>
                    <xs:documentation>A flavor of retail transaction line item whereby the customer
                        wanted to purchase an item, but it is unavailable. The store is placing a
                        special order on behalf of the customer, and the customer will pickup the
                        item when it becomes available. The customer may or may not pay for the item
                        at the time of placing the order.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="PreviousCustomerOrder"
                type="PreviousCustomerOrderBase"/>
            <xs:element form="qualified" name="Discount" type="DiscountBase"/>
            <xs:element form="qualified" name="Rounding" type="RoundingCommonData"/>
            <xs:element form="qualified" name="GiftCertificate" type="GiftCertificateBase"/>
            <xs:element form="qualified" name="PaymentOnAccount" type="PaymentOnAccountBase"/>
            <xs:element form="qualified" name="LoyaltyRedemption" type="LoyaltyRedemptionBase"/>
            <xs:element form="qualified" name="LoyaltyReward" type="LoyaltyRewardBase">
                <xs:annotation>
                    <xs:documentation>gifts &amp; other loyalty rewards given to the Customer as a
                        consequence of their purchase history</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="Tax" type="TaxDomainSpecific"/>
            <xs:element form="qualified" name="Tender" type="TenderDomainSpecific"/>
            <xs:element form="qualified" name="TenderChange" type="TenderDomainSpecific">
                <xs:annotation>
                    <xs:documentation>Superceedes the TenderChange contained within the Tender Node.
                        The addition of ItemLink element allows the change to be tied to the
                        original tender</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="Deposit" type="DepositBase"/>
            <xs:element form="qualified" name="FuelSale" type="FuelSaleBase">
                <xs:annotation>
                    <xs:documentation>line item that records the sale of Gasoline, Petrol, Diesel
                        via a pump on the Forecourt.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="GiftRegistry" type="GiftRegistryBase">
                <xs:annotation>
                    <xs:documentation>line item that records the items purchased in this transaction
                        are purchased as part of the nominated Gift Registry.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="Points" type="PointsBase">
                <xs:annotation>
                    <xs:documentation>The retail sellers give points to the customers according to
                        the attribute of item and the purchased amount.  In most cases, n% of the
                        purchased amount is given to the customer. In some cases, for example,
                        triple points are given when specific items are purchased, or double points
                        are given in the specific period, which can be utilized for promotion.  As
                        point calculation is programmed into the business logic installed in the POS
                        terminal, calculation method differs according to the company.  Only the
                        result of calculation is stored into the POSLog. (Japan)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="Rebate" type="RebateCommonData">
                <xs:annotation>
                    <xs:documentation>A reduction in price or partial refund on the price paid for
                        merchandise given to the consumer.  A rebate is typically not deducted
                        during the sale but requires the consumer to submit for payment of the
                        rebate.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="Coupon" type="TenderCouponBase">
                <xs:annotation>
                    <xs:documentation>Allows the scanning of manufacturer coupons prior to
                        tendering.  When tendered, manufacturer coupons for items not purchased are
                        returned to the customer and manufacturer coupons used as tender are moved
                        to the tender line item. (Note: store coupons are still Retail Price
                        Modifiers)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="Donation" type="DonationBase">
                <xs:annotation>
                    <xs:documentation>Tracks the customer donation at the POS</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <!--  ============================ -->
    <!--                        ITEM                            -->
    <!--  ============================ -->
    <xs:simpleType name="RetailTransactionInventoryReservationID">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <!--
        Raincheck - guarantee of same price when item is in stock
    -->
    <xs:complexType name="RainCheckBase">
        <xs:complexContent>
            <xs:extension base="ItemDomainSpecific">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="Customer" type="CustomerBase"/>
                    <xs:element form="qualified" minOccurs="0" name="InventoryReservationID"
                        type="RetailTransactionInventoryReservationID"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="PreviousCustomerOrderBase">
        <xs:complexContent>
            <xs:extension base="ItemDomainSpecific">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="InventoryReservationID"
                        type="RetailTransactionInventoryReservationID"/>
                </xs:sequence>
                <xs:attribute form="unqualified" name="Action"
                    type="RetailTransactionPreviousCustomerOrderAction" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="RetailTransactionPreviousCustomerOrderAction">
        <xs:union
            memberTypes="RetailTransactionPreviousCustomerOrderActionEnumeration TypeCodeExtension"
        />
    </xs:simpleType>
    <xs:simpleType name="RetailTransactionPreviousCustomerOrderActionEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Completed"/>
            <xs:enumeration value="Cancelled"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="DiscountBase">
        <xs:complexContent>
            <xs:extension base="RetailPriceModifierDomainSpecific">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="DiscountID" type="xs:string"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="ItemID"
                        type="ItemIDCommonData">
                        <xs:annotation>
                            <xs:documentation>The generic item for which the discount can apply.  If
                                this is in a Retail Transaction then the Item Link ties the discount
                                to the item which triggered the discount</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute form="unqualified" name="ProratedFlag" type="xs:boolean"/>
                <xs:attribute form="unqualified" name="EnabledFlag" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--  ============================ -->
    <!--                   LOYALTY                        -->
    <!--  ============================ -->
    <xs:complexType name="RetailTransactionVoucher">
        <xs:sequence>
            <xs:element form="qualified" name="VoucherID" type="POSLogVoucherID">
                <xs:annotation>
                    <xs:documentation>A unique identifier for the Voucher</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
    </xs:complexType>
    <!--
		Enumerated type for Discount Type attribute
	-->
    <xs:complexType name="GiftRegistryBase">
        <xs:sequence>
            <xs:element form="qualified" name="ItemLink">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="TransactionLinkCommonData">
                            <xs:anyAttribute namespace="##other" processContents="lax"/>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Quantity" type="QuantityCommonData"/>
            <xs:element form="qualified" name="RegistryID" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="FuelSaleBase">
        <xs:complexContent>
            <xs:extension base="ItemDomainSpecific">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="FuelingPointID"
                        type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The item of forecourt equipment which is capable of
                                dispensing a single motor fuel product at one time. The Fuelling
                                Point contains one or more Logical Nozzles. The customer identifies
                                this Fuelling Point normally with "Pump Number". (IFSF
                                Definition)</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="NozzleID" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>That part of the FUELING POINT that blends and
                                measures the volume of fuel dispensed during a FUELING
                                TRANSACTION</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="TankID">
                        <xs:annotation>
                            <xs:documentation>identifier of tank which stored the fuel grade
                                delivered - to enable sales by storage location (tank) Note if the
                                ItemType=Blend; there are two or more TankID elements with
                                BlendRatio, e.g. by default BlendRatio=100 </xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="xs:string">
                                    <xs:attribute form="unqualified" name="BlendRatio"
                                        type="DecimalCommonData" use="optional">
                                        <xs:annotation>
                                            <xs:documentation>Percentage of this fuel sale coming
                                                from this tank; 40 would say 40 % of the fuel pumped
                                                in this blended sale came from this
                                                tank</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                </xs:extension>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="FuelGradeID" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The grade of fuel sold in this line item; regular,
                                ethel, ...</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute default="Sale" form="unqualified" name="TypeCode"
                    type="FuelSaleTypeCode" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--
		Enumerated type for Fuel Sale Type attribute
	-->
    <xs:simpleType name="FuelSaleTypeCode">
        <xs:union memberTypes="FuelSaleTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="FuelSaleTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Prepay"/>
            <xs:enumeration value="Sale"/>
            <xs:enumeration value="PrepayRefund"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- MAY NOT BE USED 
	<xs:complexType name="TaxIncludedBase">
		<xs:sequence>
			<xs:element name="Amount" type="AmountCommonData" minOccurs="0"/>
			<xs:element name="TaxGroupID" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType> 
	<xs:complexType name="RetrospectiveLoyaltyBase">
		<xs:annotation>
			<xs:documentation>Loyalty added after the transaction is finished (customer forgot to claim their points and get them the next time they come to the store)</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="OriginalTransactionAmount" type="AmountCommonData">
				<xs:annotation>
					<xs:documentation>The amount of the original transaction for which loyalty points are being awarded retrospectively</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TransactionLink" minOccurs="0">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="TransactionLinkCommonData"/>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="LoyaltyAccount" type="LoyaltyAccountCommonData" minOccurs="0"/>
			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType> -->
    <xs:complexType name="DepositBase">
        <xs:complexContent>
            <xs:extension base="PaymentOnAccountBase"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="PointsBase">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="AmountForPoints"
                type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The amount used to qualify these points being
                        given</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PointRate" type="DecimalCommonData">
                <xs:annotation>
                    <xs:documentation>The rate at which pionts are given, i.e. one point per dollar
                        spent</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PointMagnification"
                type="DecimalCommonData">
                <xs:annotation>
                    <xs:documentation>the number the point rate is modified to give the total, i.e.
                        double points given on Tuesday</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="CorrectionPoints"
                type="DecimalCommonData">
                <xs:annotation>
                    <xs:documentation>points given to correct a problem</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Rounding" type="RoundingCommonData"/>
        </xs:sequence>
    </xs:complexType>
    <!--
		Customer Name & Address
	-->
    <xs:complexType name="RemoveCustomer">
        <xs:annotation>
            <xs:documentation>part of RTI</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0">
                <xs:element form="qualified" name="CustomerID" type="xs:string"/>
                <xs:element form="qualified" name="CustomerDemographic"
                    type="CustomerDemographicCommonData"/>
                <xs:element form="qualified" name="IDDemographicDataPair"
                    type="IDDemographicDataPairCommonData"/>
            </xs:choice>
            <xs:choice minOccurs="0">
                <xs:element form="qualified" name="Name" type="xs:string"/>
                <xs:element form="qualified" name="Worker">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="AssociateCommonData"/>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element form="qualified" name="CustomerName">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="NameCommonData"/>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
            </xs:choice>
            <xs:element form="qualified" minOccurs="0" name="AffiliatedOrganization">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="BusinessUnitCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Address"
                type="AddressCommonData"/>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element form="qualified" name="TelephoneNumber" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Being Deprecated in favor of common
                            data</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="Telephone">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="TelephoneCommonData"/>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
            </xs:choice>
            <xs:element form="qualified" minOccurs="0" name="Map" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Bitmap image of a map to the Addess</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Note" type="xs:string">
                <xs:annotation>
                    <xs:documentation>General all-purpose note about the Customer</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element form="qualified" name="eMail" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Being depreciated by common data</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="EMail">
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="EMailCommonData"/>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
            </xs:choice>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                name="LocalRequirements" type="LocalRequirementsBase"/>
            <xs:element form="qualified" minOccurs="0" name="Age" type="xs:decimal">
                <xs:annotation>
                    <xs:documentation>The current actual or estimated age of the
                        customer</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Birthdate" type="xs:date"/>
            <xs:element form="qualified" minOccurs="0" name="YearOfBirth" type="xs:gYear">
                <xs:annotation>
                    <xs:documentation>The year the Customer was born - we may not have the full
                        BirthDate</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Gender" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="AccountNumber" type="xs:string"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Privacy"
                type="CustomerPrivacyType">
                <xs:annotation>
                    <xs:documentation>Identifies the contact method through which the customer does
                        not want to be contacted</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Locale" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A code denoting where the Customer is
                        located</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="TaxCertificate"
                type="TaxCertificateCommonData">
                <xs:annotation>
                    <xs:documentation>A document that certifies that a Customer holds a special tax
                        status that may exempt or reduce the amount of tax that is withheld by a
                        Seller.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="TaxRegistration"
                type="TaxRegistrationType">
                <xs:annotation>
                    <xs:documentation>A Tax Registration identifies the registration of a party as a
                        taxpayer within a particular taxing jurisdiction</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TaxExemptionReason" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A code denoting why the Customer is granted a Tax
                        Exemption</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
            <!-- Customer Account Number -->
        </xs:sequence>
        <xs:attribute default="Read" form="unqualified" name="Action" type="CustomerActionType"
            use="optional"/>
        <xs:attribute default="false" form="unqualified" name="BusinessCustomerFlag"
            type="xs:boolean" use="optional">
            <xs:annotation>
                <xs:documentation>Indicates this customer is a business</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="LocalRequirementsBase">
        <xs:sequence>
            <xs:element form="qualified" name="Name" type="xs:string"/>
            <xs:element form="qualified" name="Value" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="WriteOffBase">
        <xs:sequence>
            <xs:element form="qualified" name="Amount" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The amount being written off</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="AccountNumber" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The account to which the write off get
                        credited</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Reason" type="ReasonCodeCommonData"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>
    <!-- ============================ -->
    <!--             Derived Schemas             -->
    <!-- ============================ -->
    <xs:complexType name="LineItemChoiceDomainSpecific">
        <xs:complexContent>
            <xs:extension base="LineItemChoiceBase">
                <xs:choice maxOccurs="unbounded" minOccurs="0">
                    <xs:element form="qualified" name="Voids" type="VoidBase"/>
                    <xs:element form="qualified" name="SaleOfGiftCard" type="TenderGiftCardBase">
                        <xs:annotation>
                            <xs:documentation>line item that records the sale of a stored value gift
                                card. </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" name="OnlineService" type="TenderGiftCardBase">
                        <xs:annotation>
                            <xs:documentation>Line itme that records online 3rd party sale such as
                                e-voucher, e-topup, etc.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" name="RetrospectiveLoyalty"
                        type="RetrospectiveLoyaltyBase">
                        <xs:annotation>
                            <xs:documentation>line item that records a loyalty reward that stems
                                from a previously completed Retail Transaction</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" name="StoredValueFundSale"
                        type="StoredValueFundBase">
                        <xs:annotation>
                            <xs:documentation>Used when things such as a car wash voucher is
                                sold</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" name="WriteOff" type="WriteOffBase">
                        <xs:annotation>
                            <xs:documentation>Reports items which are potentially stolen, i.e. a
                                fuel sale drive off</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" name="ScanData" type="ScanDataBase">
                        <xs:annotation>
                            <xs:documentation>The scan data from the MSR, RFID or
                                Barcode</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:any namespace="##other" processContents="lax"/>
                </xs:choice>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="VoidBase">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Quantity" type="QuantityCommonData"/>
            <xs:element form="qualified" name="ItemLink" type="SequenceNumberType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="RetrospectiveLoyaltyBase">
        <xs:annotation>
            <xs:documentation>Loyalty added after the transaction is finished (customer forgot to
                claim their points and get them the next time they come to the
                store)</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" name="OriginalTransactionAmount" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The amount of the original transaction for which loyalty
                        points are being awarded retrospectively</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TransactionLink">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="TransactionLinkCommonData">
                            <xs:anyAttribute namespace="##other" processContents="lax"/>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="LoyaltyAccount"
                type="LoyaltyAccountCommonData"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ScanDataBase">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="TypeCode" type="ScanDataTypeCode"/>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!--
        Enumerated type Scan Data Types
    -->
    <xs:simpleType name="ScanDataTypeCode">
        <xs:union memberTypes="ScanDataTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="ScanDataTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Barcode"/>
            <xs:enumeration value="Coupon"/>
            <xs:enumeration value="MSR"/>
            <xs:enumeration value="RFID"/>
        </xs:restriction>
    </xs:simpleType>
    <!--  ============================ -->
    <!--   RETAIL TRANSACTION LINE ITEM   -->
    <!--  ============================ -->
    <xs:complexType name="LineItemBase">
        <xs:complexContent>
            <xs:extension base="LineItemChoiceDomainSpecific">
                <xs:sequence maxOccurs="unbounded">
                    <xs:element form="qualified" name="SequenceNumber" type="SequenceNumberType"/>
                    <xs:element form="qualified" minOccurs="0" name="BeginDateTime"
                        type="xs:dateTime"/>
                    <xs:element form="qualified" minOccurs="0" name="EndDateTime" type="xs:dateTime"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="DateTime"
                        type="DateTimeCommonData">
                        <xs:annotation>
                            <xs:documentation>Provides a variety of dates - times associated with
                                this line item, such as Best Before Date</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="Modification" type="ModificationBase">
                        <xs:annotation>
                            <xs:documentation>Identifies things that can be done to this item prior
                                to delivery, i.e. cook the steak well done</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="MerchandiseHierarchy" type="MerchandiseHierarchyCommonData"/>
                    <xs:element form="qualified" minOccurs="0" name="Reason" type="xs:string"/>
                    <xs:element form="qualified" minOccurs="0" name="RequiredAge">
                        <xs:annotation>
                            <xs:documentation>This is the minimum age necessary to sell this
                                item</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="RestrictionValidation" type="RestrictionValidationBase"/>
                    <xs:element form="qualified" minOccurs="0" name="CODVoucherNumber"
                        type="xs:string"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="ItemLink"
                        type="xs:positiveInteger">
                        <xs:annotation>
                            <xs:documentation>Allows linking any line item type to any other line
                                item</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="PCMUUID"
                        type="UUIDCommonData">
                        <xs:annotation>
                            <xs:documentation>Link to the Product Content Management Asset(s)
                                associated with this line item</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="ContactInformation"
                        type="ContactCommonData"/>
                </xs:sequence>
                <xs:attribute default="false" form="unqualified" name="CancelFlag" type="xs:boolean"
                    use="optional">
                    <xs:annotation>
                        <xs:documentation>Cancel is used to designate a transaction line or entire
                            transaction that was reversed prior to the tender of a
                            transaction.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="false" form="unqualified" name="DeleteFlag" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Delete indicates a line item was sent to the kitchen, the
                            order was recalled and the item was removed from the
                            order.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="Add" form="unqualified" name="Action"
                    type="ActionCommonDataTypeCodes" use="optional"/>
                <xs:attribute default="false" form="unqualified" name="CODFlag" type="xs:boolean"
                    use="optional"/>
                <xs:attribute form="unqualified" name="RefusalReason" type="RefusalReasonTypeCodes"
                    use="optional"/>
                <xs:attribute form="unqualified" name="ResaleFlag" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Indicates this item is for resale by a business and is
                            therefore exempt from taxes</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="RefusalReasonTypeCodes">
        <xs:union memberTypes="RefusalReasonTypeCodesEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="RefusalReasonTypeCodesEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="AgeRestriction">
                <xs:annotation>
                    <xs:documentation>Customer is not old enough to purchase the
                        item</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="DestinationRestriction">
                <xs:annotation>
                    <xs:documentation>Airport use; Item cannot be sold for passengers on flights to
                        a particular destination</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ProductStop">
                <xs:annotation>
                    <xs:documentation>Product has a quality issue and should have been cleared from
                        the shelves</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="QuantityRestricted">
                <xs:annotation>
                    <xs:documentation>Legal restriction on quantity per transaction prevents
                        sale</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="TimeRestriction">
                <xs:annotation>
                    <xs:documentation>Legal restriction on hours of sale</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--             Derived Schemas             -->
    <!-- ============================ -->
    <xs:complexType name="LineItemDomainSpecific">
        <xs:complexContent>
            <xs:extension base="LineItemBase">
                <xs:sequence maxOccurs="unbounded" minOccurs="0">
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="OperatorBypassApproval" type="ApprovalBase"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="EntryMethod" type="EntryMethodCommonData"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="TaxPhysicalLocation" type="TaxPhysicalLocationType"/>
                </xs:sequence>
                <xs:attribute form="unqualified" name="VoidFlag" type="xs:boolean"/>
                <xs:attribute form="unqualified" name="EntryMethod" type="EntryMethodTypeCode">
                    <xs:annotation>
                        <xs:documentation>How this item is entered.  Specifically useful in a Kit
                            where each item can be entered differently</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute form="unqualified" name="EntryMode" type="EntryModeTypeCode"/>
                <xs:attribute form="unqualified" name="ProcessMode" type="POSLogProcessMode"/>
                <xs:attribute form="unqualified" name="RefusalTypeCode" type="RefusalType"/>
                <xs:attribute form="unqualified" name="DestinationType"
                    type="FoodserviceDestinationTypesEnumeration"/>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--
        Enumerated type for ProcessMode attributes
    -->
    <xs:simpleType name="POSLogProcessMode">
        <xs:union memberTypes="POSLogProcessModeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="POSLogProcessModeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Normal"/>
            <xs:enumeration value="Expedite"/>
            <xs:enumeration value="Delay"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="RefusalType">
        <xs:union memberTypes="RefusalTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="RefusalTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="AgeRestriction"/>
            <xs:enumeration value="DestinationRestriction"/>
            <xs:enumeration value="ProductStop"/>
            <xs:enumeration value="QuantityRestriction"/>
            <xs:enumeration value="TimeRestriction"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- 
      Defines a complex type POSLogRetailTransaction which is the
      main kind of transaction in the IXRetail POSLog - recording
      the exchange of merchandise & services for tender.
   
      It consists of:
        - a whole lot of header info
        - a collection of line items
    -->
    <xs:complexType name="RetailTransactionBase">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="SpecialOrderNumber" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A special number that is created as a consequence of one or
                        more items in the transaction not being available for the customer at the
                        time of purchase.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ItemCount" type="CountCommonData">
                <xs:annotation>
                    <xs:documentation>A count of the number of items in this
                        transaction</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="LineItem"
                type="LineItemDomainSpecific"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Total"
                type="TransactionTotalBase"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                name="RestrictionValidation" type="RestrictionValidationBase"/>
            <xs:element form="qualified" minOccurs="0" name="Delivery" type="DeliveryBase"/>
            <xs:element form="qualified" minOccurs="0" name="Pickup" type="PickupBase"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Customer"
                type="CustomerDomainSpecific"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="LoyaltyAccount">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="LoyaltyAccountCommonData"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Associate"
                type="AssociateBase">
                <xs:annotation>
                    <xs:documentation>The structure which identifies the assignment a worker to this
                        RetailTransaction for use in reporting things like
                        commissions</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="TransactionLink">
                <xs:annotation>
                    <xs:documentation>link to a previous RetailTransaction</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="TransactionLinkCommonData">
                            <xs:annotation>
                                <xs:documentation>link to a previous
                                    RetailTransaction</xs:documentation>
                            </xs:annotation>
                            <xs:anyAttribute namespace="##other" processContents="lax"/>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <!--
			<xs:element name="TransactionLink" type="TransactionLinkCommonData" minOccurs="0" maxOccurs="unbounded">
			</xs:element> -->
            <xs:element form="qualified" minOccurs="0" name="Reason" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="Survey" type="SurveyCommonData">
                <xs:annotation>
                    <xs:documentation>Link to survey typically printed on the bottom/back of the
                        receipt</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="OfficialBillType">
        <xs:sequence>
            <xs:element form="qualified" name="BillNumber" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A unique reference number for this Official
                        Bill</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="AmountOfBill" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>The amount of this Official Bill</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="RetailTransactionDomainSpecific">
        <xs:complexContent>
            <xs:extension base="RetailTransactionBase">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="ManagerApproval"
                        type="xs:boolean"/>
                    <xs:element form="qualified" minOccurs="0" name="ReceiptDateTime"
                        type="xs:dateTime"/>
                    <xs:element form="qualified" minOccurs="0" name="TransactionCount"
                        type="CountCommonData">
                        <xs:annotation>
                            <xs:documentation>The number of transactions in this
                                summary</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="PriceDerivationResult" type="RetailPriceModifierDomainSpecific"/>
                    <xs:element form="qualified" minOccurs="0" name="OfficialBill"
                        type="OfficialBillType">
                        <xs:annotation>
                            <xs:documentation>In Japan, regarding taxation authorities and auditors,
                                businesses use official bills as proof of expenditure for purchased
                                goods and services</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="Foodservice" type="FoodServiceBase"/>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
                        processContents="lax"/>
                </xs:sequence>
                <xs:attribute default="Transaction" form="unqualified" name="TypeCode"
                    type="POSLogTransactionTypeCode" use="optional">
                    <xs:annotation>
                        <xs:documentation>Identifies the type of data in this transaction;
                            transaction, summary, non-resettable totals, etc.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="Finished" form="unqualified" name="TransactionStatus"
                    type="TransactionStatusTypeCode" use="optional">
                    <xs:annotation>
                        <xs:documentation>The current status of this transaction</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="false" form="unqualified" name="OutsideSalesFlag"
                    type="xs:boolean" use="optional">
                    <xs:annotation>
                        <xs:documentation>Indicates this sales took place on the
                            forecourt</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="false" form="unqualified" name="OverringFlag"
                    type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Indicates this is an overring
                            transaction</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="false" form="unqualified" name="SplitCheckFlag"
                    type="xs:boolean" use="optional">
                    <xs:annotation>
                        <xs:documentation>A flag denoting that this FoodService transaction is to be
                            split into separate checks for each diner</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--
        Enumerated type for Type Code attribute
    -->
    <xs:simpleType name="POSLogTransactionTypeCode">
        <xs:union memberTypes="POSLogTransactionTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="POSLogTransactionTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="DispatchDocket"/>
            <xs:enumeration value="GIftReceipt">
                <xs:annotation>
                    <xs:documentation>Identifies this transaction as a gift receipt transaction.
                        Typically these do not have prices on them.  They are typically given to a
                        gift recepient for them to use as a return document in the event they have
                        some sort of problem with the gift.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="NonResettableAmounts"/>
            <xs:enumeration value="RevisedTransaction"/>
            <xs:enumeration value="Suggestion"/>
            <xs:enumeration value="Summary"/>
            <xs:enumeration value="Transaction"/>
        </xs:restriction>
    </xs:simpleType>
    <!--  ============================= -->
    <!--  CUSTOMER ORDER TRANSACTION -->
    <!--  ============================= -->
    <xs:complexType name="CustomerOrderTransactionBase">
        <xs:annotation>
            <xs:documentation>Reports the individual components of an order prior to tender and
                delivery</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="RetailTransactionDomainSpecific">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="State" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The current state of this order. Things like:
                                Proofing, Rendering, Preparing, Cooking, painting,
                                etc.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="Disposition" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Things like; call when done, hold on
                                shelf</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="ShoppingBasketID"
                        type="xs:string"/>
                </xs:sequence>
                <xs:attribute default="false" form="unqualified" name="ReworkFlag" type="xs:boolean"
                    use="optional">
                    <xs:annotation>
                        <xs:documentation>A flag denoting that rework is required</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="PhoneIn" form="unqualified" name="OrderChannel"
                    type="OrderChannelTypes" use="optional">
                    <xs:annotation>
                        <xs:documentation>An enumeration denoting how the order is placed, i.e.
                            phone-in, web, etc.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="Normal" form="unqualified" name="Priority"
                    type="OrderPriorityTypes" use="optional">
                    <xs:annotation>
                        <xs:documentation>An enumeration denoting the priority of the order, normal,
                            rush, etc.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute form="unqualified" name="OrderProcessingThreshold" type="xs:int">
                    <xs:annotation>
                        <xs:documentation>number of orders that the store can process at the current
                            date/time</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--
			Order Channel Enumerations
			    -->
    <xs:simpleType name="OrderChannelTypes">
        <xs:union memberTypes="OrderChannelTypesEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="OrderChannelTypesEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="PhoneIn"/>
            <xs:enumeration value="WalkIn"/>
            <xs:enumeration value="Web"/>
            <xs:enumeration value="eMail"/>
            <xs:enumeration value="CallCenter"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
			Order Priority Enumerations
			    -->
    <xs:simpleType name="OrderPriorityTypes">
        <xs:union memberTypes="OrderPriorityTypesEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="OrderPriorityTypesEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Normal"/>
            <xs:enumeration value="Rush"/>
            <xs:enumeration value="Emergency"/>
            <xs:enumeration value="PackAndHold"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--      Base Schemas            -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--      Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================= -->
    <!--     ORDER TRANSACTION -->
    <!--  ============================= -->
    <xs:complexType name="OrderTransactionBase">
        <xs:annotation>
            <xs:documentation>Reports on offer to be made to the customer </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="CustomerOrderTransactionBase"/>
        </xs:complexContent>
    </xs:complexType>
    <!-- ============================ -->
    <!--      Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================= -->
    <!--                     TRANSACTION                -->
    <!--  ============================= -->
    <!-- 
      Defines a complex type POSLogTransaction which is the root of 
      all varieties of transaction in the IXRetail POSLog.
    -->
    <xs:complexType name="TransactionBase">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="BusinessUnit"
                type="BusinessUnitComplexType"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Channel"
                type="ChannelCommonData"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                name="OrganizationHierarchy" type="OrganizationHierarchyCommonData">
                <xs:annotation>
                    <xs:documentation>Identifies the organization's hierarchy for this transaction.
                        repeatability allows for the reporting of the entire hierarchy from the top
                        to the bottom,  for example, corporation, division, district, region,
                        etc.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="StoreLocation"
                type="GeoPhysicalLocationCommonData">
                <xs:annotation>
                    <xs:documentation>The physical address for the store</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Logo" type="LogoCommonData">
                <xs:annotation>
                    <xs:documentation>Either the binary associated with this logo or a file name
                        where one can retrieve the logo.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="WorkstationID"
                type="WorkstationIDCommonData">
                <xs:annotation>
                    <xs:documentation>The Unique Identifier for the Workstation (place where the
                        transaction is entered, modified or completed), typically the serial
                        number</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="SequenceNumber"
                type="SequenceNumberType">
                <xs:annotation>
                    <xs:documentation>This is the Transaction Sequence Number generated by the POS
                        to identify this particular transaction.  It can be unique of itself or in
                        combination with the Workstation ID, POSLogDateTime and Business Unit
                        ID.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TransactionID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A universally unique identifier (UUID) used to uniquely record
                        a Transaction in the database.  It can be generated in the database or
                        external to the database and stored in the database.  This is used as the
                        primary key in the Data Model.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="3" minOccurs="0" name="POSLogDateTime">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="DateTimeCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="OperatorID">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="OperatorCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="CurrencyCode" type="CurrencyTypeCode"/>
            <xs:element form="qualified" minOccurs="0" name="TrailerText" type="TrailerTextType">
                <xs:annotation>
                    <xs:documentation>Unique text printed on the bottom of the receipt for this
                        Retail Transaction</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="VATRegistrationNumber" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="ReceiptDateTime"
                type="DateTimeCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="ReceiptNumber">
                <xs:annotation>
                    <xs:documentation>The Receipt number can be a number but it can also be a
                        barcode.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute form="unqualified" name="TypeCode" type="ItemIDTypeCode"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="ReceiptImage"
                type="ReceiptImageType">
                <xs:annotation>
                    <xs:documentation>Allows an image of the receipt - line by
                        line</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="InvoiceNumber">
                <xs:annotation>
                    <xs:documentation>The invoice related to or belonging to this POSLog
                        Transaction</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute form="unqualified" name="DateTime" type="xs:dateTime">
                                <xs:annotation>
                                    <xs:documentation>the date/time for this
                                        invoice</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="CODVoucherNumber" type="xs:string"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                name="CustomerOrderTransaction" type="CustomerOrderTransactionBase">
                <xs:annotation>
                    <xs:documentation>The steps in a retail transaction prior to tendering and
                        fulfillment</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                name="RetailTransaction" type="RetailTransactionDomainSpecific">
                <xs:annotation>
                    <xs:documentation>A completed transaction, i.e. one that is both tenderer and
                        delivered</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="OrderTransaction"
                type="OrderTransactionBase">
                <xs:annotation>
                    <xs:documentation>Reports an offer to be made to the customer</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute fixed="6" form="unqualified" name="MajorVersion" type="xs:integer">
            <xs:annotation>
                <xs:documentation>POSLog allows many different transactions to be merged into one
                    Batch.  This is the version for this transaction.  If it is the same as the one
                    in POSLog it can be left out.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute fixed="0" form="unqualified" name="MinorVersion" type="xs:integer"
            use="optional"/>
        <xs:attribute fixed="0" form="unqualified" name="FixVersion" type="xs:integer"
            use="optional"/>
        <xs:attribute default="SaleTransaction" form="unqualified" name="TypeCode"
            type="TransactionType">
            <xs:annotation>
                <xs:documentation>Defines sale or return transaction type</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute default="false" form="unqualified" name="VATReceiptFlag" type="xs:boolean"
            use="optional"/>
        <xs:attribute default="false" form="unqualified" name="CODFlag" type="xs:boolean"
            use="optional"/>
    </xs:complexType>
    <xs:complexType name="BusinessUnitComplexType">
        <xs:sequence>
            <xs:element form="qualified" name="UnitID">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="BusinessUnitCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Address">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="AddressCommonData"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Telephone">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="TelephoneCommonData"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Website"
                type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="TrailerTextType">
        <xs:annotation>
            <xs:documentation>Information printed on the receipt</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" name="Text" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!--
		Enumerated type for Software Codes attribute
	-->
    <xs:simpleType name="SoftwareTypeCodes">
        <xs:union memberTypes="SoftwareTypeCodesEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="SoftwareTypeCodesEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Software"/>
            <xs:enumeration value="Firmware"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
		Enumerated type for Software Codes attribute
	-->
    <xs:simpleType name="DeviceTypeCodes">
        <xs:union memberTypes="DeviceTypeCodesEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="DeviceTypeCodesEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="POS"/>
            <xs:enumeration value="Belt"/>
            <xs:enumeration value="BillAcceptor"/>
            <xs:enumeration value="BillDispenser"/>
            <xs:enumeration value="Biometrics"/>
            <xs:enumeration value="BumpBar"/>
            <xs:enumeration value="CashDrawer"/>
            <xs:enumeration value="CAT"/>
            <xs:enumeration value="CheckScanner"/>
            <xs:enumeration value="CoinAcceptor"/>
            <xs:enumeration value="CoinDispenser"/>
            <xs:enumeration value="ElectronicJournal"/>
            <xs:enumeration value="ElectornicValue"/>
            <xs:enumeration value="FiscalPrinter"/>
            <xs:enumeration value="Gate"/>
            <xs:enumeration value="HardTotals"/>
            <xs:enumeration value="ImageScanner"/>
            <xs:enumeration value="ItemDispenser"/>
            <xs:enumeration value="Keylock"/>
            <xs:enumeration value="Lights"/>
            <xs:enumeration value="LineDisplay"/>
            <xs:enumeration value="MICR"/>
            <xs:enumeration value="MotionSensor"/>
            <xs:enumeration value="MSR"/>
            <xs:enumeration value="PINPad"/>
            <xs:enumeration value="PointCard"/>
            <xs:enumeration value="POSKeyboard"/>
            <xs:enumeration value="POSPower"/>
            <xs:enumeration value="POSPrinter"/>
            <xs:enumeration value="RemoteOrderDisplay"/>
            <xs:enumeration value="RFIDScanner"/>
            <xs:enumeration value="Scale"/>
            <xs:enumeration value="Scanner"/>
            <xs:enumeration value="SignatureCapture"/>
            <xs:enumeration value="SmartCardReader"/>
            <xs:enumeration value="ToneIndicator"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="SoftwareCommonData">
        <xs:sequence>
            <xs:element form="qualified" name="DeviceID" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="Name" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="MajorVersion" type="xs:int"/>
            <xs:element form="qualified" minOccurs="0" name="MinorVersion" type="xs:int"/>
            <xs:element form="qualified" minOccurs="0" name="FixVersion" type="xs:int"/>
            <xs:element form="qualified" minOccurs="0" name="ManufacturerName" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="CreationDate" type="xs:date"/>
            <xs:element form="qualified" minOccurs="0" name="InstallationDate" type="xs:date"/>
            <xs:element form="qualified" minOccurs="0" name="Checksum" type="xs:string"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute form="unqualified" name="SoftwareTypeCode" type="SoftwareTypeCodes"/>
        <xs:attribute form="unqualified" name="DeviceTypeCode" type="DeviceTypeCodes"/>
    </xs:complexType>
    <!-- Approval Type Enumerations -->
    <xs:simpleType name="ApprovalTypeCode">
        <xs:union memberTypes="ApprovalTypeCodeEnumeration IXREnumerationExtension"/>
    </xs:simpleType>
    <xs:simpleType name="ApprovalTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Approve"/>
            <xs:enumeration value="Correction"/>
            <xs:enumeration value="Override"/>
            <xs:enumeration value="Audit"/>
            <xs:enumeration value="Void"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="JobCodeCommonData">
        <xs:annotation>
            <xs:documentation> Approbve 20050228 - Job can be defined as an occupation exercised for
                compensation.  Jobs may be refined into steps based on the level of competency or
                experience required to perform the job's" components.  Relevant jobs in a retail
                [store] setting could be sales associate, cashier, guide, store security, stocker.
                A retailer might elect to identify 5 jobs within a retail store.Job - Defines the
                functions, duties, responsibilities and authority delegated to one or more positions
                within the retail enterprise.   ---   A unique identifier for this
                JOB.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute form="unqualified" name="Name" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>A name or label that describes this JOB</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute form="unqualified" name="Description" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>The description for the job</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="PunchTypeCode">
        <xs:union memberTypes="PunchTypeCodeEnumeration PunchTypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="PunchTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="ShiftPunchIn"/>
            <xs:enumeration value="ShiftPunchOut"/>
            <xs:enumeration value="BreakPunchIn"/>
            <xs:enumeration value="BreakPunchOut"/>
            <xs:enumeration value="MealPunchIn"/>
            <xs:enumeration value="MealPunchOut"/>
            <xs:enumeration value="AutoPunchIn"/>
            <xs:enumeration value="AutoPunchOut"/>
            <xs:enumeration value="JobIn"/>
            <xs:enumeration value="JobOut"/>
            <xs:enumeration value="PunchVoid"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="PunchTypeCodeExtension">
        <xs:restriction base="IXREnumerationExtension"/>
    </xs:simpleType>
    <xs:complexType name="TimePunchType">
        <xs:sequence>
            <xs:element form="qualified" name="PunchDateTime" type="xs:dateTime">
                <xs:annotation>
                    <xs:documentation>The date and time this particular punch
                        occurred.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="BusinessDayDate"
                type="BusinessDayDateType">
                <xs:annotation>
                    <xs:documentation>The date in the accounting period when this time punch was
                        recorded.  Note: business day date can either be a date or be a count of the
                        number of accounting days from the start of the accounting period
                        .</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="BusinessUnit"
                type="BusinessUnitCommonData"/>
            <xs:choice minOccurs="0">
                <xs:element form="qualified" name="WorkstationID" type="WorkstationIDCommonData"/>
                <xs:element form="qualified" name="TimeClockID" type="xs:string"/>
            </xs:choice>
            <xs:element form="qualified" minOccurs="0" name="JobCode">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="JobCodeCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Approval"
                type="ApprovalType"/>
            <xs:element form="qualified" minOccurs="0" name="ReasonCode">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="ReasonCodeCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="FixedShiftID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>An ID for a shift that always has the same start and end time
                        (doesn’t necessarily involve the same work)</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute default="ShiftPunchIn" form="unqualified" name="TypeCode" type="PunchTypeCode"
            use="optional"/>
        <xs:attribute default="false" form="unqualified" name="OvertimeFlag" type="xs:boolean"
            use="optional"/>
    </xs:complexType>
    <xs:complexType name="ApprovalType">
        <xs:sequence>
            <xs:element form="qualified" name="ApproverID" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="ApproverName" type="NameCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="DateTime" type="xs:dateTime"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute default="Correction" form="unqualified" name="TypeCode"
            type="ApprovalTypeCode" use="optional"/>
    </xs:complexType>
    <xs:complexType name="TillMovement">
        <xs:annotation>
            <xs:documentation>Signals a till has been moved from one POS to
                another</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Total"
                type="POSLogTotalsBase"/>
        </xs:sequence>
        <xs:attribute default="In" form="unqualified" name="Action" type="POSLogTillMovementAction"
            use="optional"/>
    </xs:complexType>
    <!--
        Enumerated type for Till Movement Action attribute
    -->
    <xs:simpleType name="POSLogTillMovementAction">
        <xs:union memberTypes="POSLogTillMovementActionEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="POSLogTillMovementActionEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="In"/>
            <xs:enumeration value="Out"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================= -->
    <!--          CONTROL  TRANSACTION        -->
    <!--  ============================= -->
    <xs:complexType name="ControlTransactionBase">
        <xs:annotation>
            <xs:documentation>Events primarily targeted for use by store operations or loss
                prevention</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Shift" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A time with a start and a finish in which work is being done.
                        Always has the same start and end time (doesn't necessarily involve the same
                        work), i.e. day shift, swing shift, graveyard shift</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="DayPart" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A code denoting which part of the day the Control Transaction
                        was performed during, i.e. Breakfast, Lunch, Dinner</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ReasonCode" type="ReasonCodeCommonData"/>
            <xs:choice maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>Compromise to all the addition of new control transactions and
                        common elements</xs:documentation>
                </xs:annotation>
                <xs:element form="qualified" name="BusinessSOD" type="POSLogCPOSSession">
                    <xs:annotation>
                        <xs:documentation>Indicates the business start of day</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="BusinessEOD" type="POSLogCPOSSession">
                    <xs:annotation>
                        <xs:documentation>Signals the business End of Day</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="DayPartStart" type="POSLogCPOSSession">
                    <xs:annotation>
                        <xs:documentation>Signals the start of a day part; breakfast, lunch dinner,
                            etc.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="DayPartEnd" type="POSLogCPOSSession">
                    <xs:annotation>
                        <xs:documentation>Signals the end of a day part; breakfast, lunch dinner,
                            etc.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="ShiftStart" type="POSLogCPOSSession">
                    <xs:annotation>
                        <xs:documentation>Signals the start of a fixed shift, Day, Swing, graveyard,
                            etc.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="ShiftEnd" type="POSLogCPOSSession">
                    <xs:annotation>
                        <xs:documentation>Signals the end of a fixed shift, Day, Swing, graveyard,
                            etc.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="POSSOD" type="POSLogCPOSSession">
                    <xs:annotation>
                        <xs:documentation>Signals the Start of Day for this POS</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="POSEOD" type="POSLogCPOSSession">
                    <xs:annotation>
                        <xs:documentation>Signals the End of Day for this POS</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="TillSOD" type="POSLogCPOSSession">
                    <xs:annotation>
                        <xs:documentation>Signals the start of day for the till.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="TillEOD" type="POSLogCPOSSession">
                    <xs:annotation>
                        <xs:documentation>Signals the End of day for the till.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="TillMovement" type="TillMovement">
                    <xs:annotation>
                        <xs:documentation>Signals a till has been moved from one POS to
                            another</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="POSStartup" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>signals the POS being turned on.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="POSShutdown" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>signals the POS being shutdown. </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="POSRestart" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>Signals the POS being shutdown with an immediate restart.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="OperatorSignOn" type="POSLogCPOSSession">
                    <xs:annotation>
                        <xs:documentation>Signals when the operator signs on to a POS start their
                            work</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="OperatorSignOff" type="POSLogCPOSSession">
                    <xs:annotation>
                        <xs:documentation>Signals when the operator signs off a POS ending their
                            work.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="AutoSignoff" type="POSLogCPOSSession">
                    <xs:annotation>
                        <xs:documentation>Signals the POS automatically signed off the operator,
                            typically after some period of inactivity.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="OperatorLock" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>Signals when an operator locks their POS while they are
                            away from the POS to, for example, help a customer or stock the
                            shelves.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="OperatorUnLock" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>Signals when an operator unlocks their POS when they
                            return from , for example, helping a customer or stocking the
                            shelves</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="TimePunch" type="TimePunchType">
                    <xs:annotation>
                        <xs:documentation>Records an associates punch in/out</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="Void" type="POSLogTotalsBase"/>
                <xs:element form="qualified" name="TransactionVoid" type="POSLogTotalsBase"/>
                <xs:element form="qualified" name="SuspendDelete" type="POSLogTotalsBase">
                    <xs:annotation>
                        <xs:documentation>Signals the deletion of a previously suspended
                            transaction.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="PostVoid" type="POSLogTotalsBase"/>
                <xs:element form="qualified" name="Refund" type="POSLogTotalsBase">
                    <xs:annotation>
                        <xs:documentation>Signals the giving of a refund.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="NoSale" type="NoSaleType">
                    <xs:annotation>
                        <xs:documentation>The No Sale is used to open the cash drawer on a terminal
                            when a normal transaction is not in progress. It may be used to give
                            change to a customer or to do a preliminary count of the drawer by the
                            cashier or manager, etc</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="DrawerLimitExceeded"
                    type="POSLogCDrawerLimitExceeded">
                    <xs:annotation>
                        <xs:documentation>Signals an event notifying the operator, that there is too
                            much money in the cash drawer.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="UnauthorizedOpen">
                    <xs:annotation>
                        <xs:documentation>Signals the cash drawer being manually opened (ie: not
                            under control of the POS). </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:simpleContent>
                            <xs:extension base="xs:dateTime">
                                <xs:attribute form="unqualified" name="CashDrawerID"
                                    type="xs:string">
                                    <xs:annotation>
                                        <xs:documentation>The cash drawer being
                                            opened</xs:documentation>
                                    </xs:annotation>
                                </xs:attribute>
                            </xs:extension>
                        </xs:simpleContent>
                    </xs:complexType>
                </xs:element>
                <xs:element form="qualified" name="PasswordChange" type="POSLogCPasswordChange">
                    <xs:annotation>
                        <xs:documentation>Signals a password change</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="PasswordAuthorization"
                    type="POSLogCPasswordAuthorization">
                    <xs:annotation>
                        <xs:documentation>Signals a successful password authentication happening at
                            the POS</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="BadPassword" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Signals an unsuccessful password authentication happening
                            at the POS </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="InvalidSignon" type="POSLogCInvalidSignon">
                    <xs:annotation>
                        <xs:documentation>Signals an invalid signon was attempted, either with a bad
                            user name or password</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="Heartbeat" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>Signals a system heartbeat happening at the
                            POS</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="SetCashierMode" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Signals the entry and exit of the POS in and out of
                            TrainingMode at the POS, Manager Mode, etc</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="LogEvent" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>Signals a generic non-structured event in the event log of
                            the POS.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="EndOfLog" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>Signals the end of the event log at the
                            POS.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="Voucher" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Signals a voucher was issued</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="ReceiptReprint" type="POSLogCReceiptRePrint">
                    <xs:annotation>
                        <xs:documentation>Signals re-printing of a transaction receipt at the
                            POS.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="PrintDispatchDocket" type="POSLogCReceiptRePrint">
                    <xs:annotation>
                        <xs:documentation>Reports printing a receipt with the items and the customer
                            information to use for example in delivering items to the
                            customer.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="LoyaltyRedemptionFailure"
                    type="LoyaltyRedemptionFailureType">
                    <xs:annotation>
                        <xs:documentation>Signals a failed attempt to redeem LoyaltyPoints &amp;
                            Vouchers previously awarded to the customer.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="PriceChange" type="POSLogCPriceChange">
                    <xs:annotation>
                        <xs:documentation>Signals the entry of a price change at the
                            POS</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="ApplicationEvent" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Signals a generic non-structured Application processing
                            event happening at the POS.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="OSShutdown" type="xs:dateTime">
                    <xs:annotation>
                        <xs:documentation>Signals an Operating System shutdown being performed at
                            POS.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="DeviceStatus" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Signals a change in a device status that is attached to
                            the POS</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="DeviceOn" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Signals a device connected to the POS has become
                            online/available.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="DeviceOff" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Signals a device connected to the POS has gone
                            offline/unavailable</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="StoredValueFund" type="StoredValueFundBase">
                    <xs:annotation>
                        <xs:documentation>Signals the result of an interaction between the POS and
                            StoredValue management system. (cf. IXRetail StoredValue work-team
                            schema). </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="Software" type="SoftwareCommonData">
                    <xs:annotation>
                        <xs:documentation>Information about the software used in a particular
                            device</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="ScaleCheck" type="ScaleCheckType">
                    <xs:annotation>
                        <xs:documentation>Results of a checck perfromed on a
                            scale</xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:choice>
        </xs:sequence>
        <xs:attribute form="unqualified" name="ForceFlag" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>This logs a transaction where the Workstation was forced into a
                    Trading state (BusinessSOD) overriding a Store Closed setting, or where the
                    Store is off-line and the Workstation cannot receive a Store Open message or
                    force a logoff or force a signon,... </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute form="unqualified" name="MaintenanceRequiredFlag" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>Indicates maintenance is needed</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="POSLogCPOSSession">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="StartDateTimestamp" type="xs:dateTime">
                <xs:annotation>
                    <xs:documentation>The date and time for the start of this session.  It maybe the
                        start of a day or the start of a shift or ...</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="EndDateTimestamp" type="xs:dateTime">
                <xs:annotation>
                    <xs:documentation>The date and time for the end of this session.  It maybe the
                        end of a day or the end of a shift or ...</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TillID" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="OpenBusinessDayDate" type="xs:date"/>
            <xs:element form="qualified" minOccurs="0" name="CloseBusinessDayDate" type="xs:date"/>
            <xs:element form="qualified" minOccurs="0" name="OpenTransactionSequenceNumber"
                type="SequenceNumberType">
                <xs:annotation>
                    <xs:documentation>The first transaction in this session.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="CloseTransactionSequenceNumber"
                type="SequenceNumberType">
                <xs:annotation>
                    <xs:documentation>The last transaction in this session.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="SessionSettle" type="SettleBase"/>
            <xs:element form="qualified" minOccurs="0" name="LastTransactionSequenceNumber"
                type="SequenceNumberType"/>
        </xs:sequence>
        <xs:attribute default="Operator" form="unqualified" name="Accountability"
            type="AccountabilityTypeCode" use="optional">
            <xs:annotation>
                <xs:documentation>A code denoting what kind of tender accountability is being used
                    for this Session</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <!--
		Enumerated type for Accountability Type attribute
	-->
    <xs:simpleType name="AccountabilityTypeCode">
        <xs:union memberTypes="AccountabilityTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="AccountabilityTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Operator"/>
            <xs:enumeration value="Register"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="NoSaleType">
        <xs:simpleContent>
            <xs:extension base="xs:dateTime">
                <xs:attribute form="unqualified" name="CashDrawerID" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Identifies which cash drawer was opened</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="POSLogCPasswordChange">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="OldPassword" type="xs:string"/>
            <xs:element form="qualified" name="NewPassword" type="xs:string"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute form="unqualified" name="Status" type="PasswordChangeStatus">
            <xs:annotation>
                <xs:documentation>Describes the effect of this change, successful, canceled,
                    etc.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="POSLogCPasswordAuthorization">
        <xs:sequence>
            <xs:element form="qualified" name="Name" type="xs:string"/>
            <xs:element form="qualified" name="Password" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="POSLogCDrawerLimitExceeded">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" name="LimitDetail">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element form="qualified" name="Amount" type="AmountCommonData"/>
                        <xs:element form="qualified" name="Over" type="AmountCommonData"/>
                    </xs:sequence>
                    <xs:attribute form="unqualified" name="TenderType" type="TenderTypeCode"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute form="unqualified" name="TypeCode" type="POSLogDrawerLimitExceededTypes"/>
    </xs:complexType>
    <xs:complexType name="POSLogCReceiptRePrint">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="LineSequenceNumber"
                type="SequenceNumberType">
                <xs:annotation>
                    <xs:documentation>When used as a gift receipt or despatch docket, it points to a
                        referenced line item in the original transaction</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TransactionLink">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="TransactionLinkCommonData">
                            <xs:anyAttribute namespace="##other" processContents="lax"/>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Customer">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="CustomerCommonData"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Quantity">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="QuantityCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute default="ReceiptReprint" form="unqualified" name="TypeCode"
            type="ReceiptTypeCode" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>
    <!--
		Enumerated type for Receipt Type attribute
	-->
    <xs:simpleType name="ReceiptTypeCode">
        <xs:union memberTypes="ReceiptTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="ReceiptTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="ReceiptReprint"/>
            <xs:enumeration value="GiftReceipt"/>
            <xs:enumeration value="DespatchDocket"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="LoyaltyRedemptionFailureType">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Customer">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="CustomerCommonData"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Amount">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ReasonCode">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="ReasonCodeCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="POSLogCPriceChange">
        <xs:sequence>
            <xs:element form="qualified" name="ItemID">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="ItemIDCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" name="OldPrice">
                <xs:annotation>
                    <xs:documentation>The old price for the item whose price is being
                        changed</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="PriceCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="OldQuantity">
                <xs:annotation>
                    <xs:documentation>The quantity part of the old price for the item whose price is
                        being changed</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="QuantityCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" name="NewPrice">
                <xs:annotation>
                    <xs:documentation>The new price for the item whose price is being
                        changed</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="PriceCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="NewQuantity">
                <xs:annotation>
                    <xs:documentation>The quantity part of the new price for the item whose price is
                        being changed</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="QuantityCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="POSLogCInvalidSignon">
        <xs:sequence>
            <xs:element form="qualified" name="SequenceNumber" type="SequenceNumberType"/>
            <xs:element form="qualified" name="DateTime" type="xs:dateTime"/>
            <xs:element form="qualified" name="Operator">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="OperatorCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="InvalidPassword" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="Workstation"
                type="WorkstationIDCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="ReasonCode">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="ReasonCodeCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ScaleCheckType">
        <xs:annotation>
            <xs:documentation>Use to report the scale test on startup.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" name="ScaleID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Unique identifier for the scale</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="ScaleLiveWeight" type="QuantityCommonData">
                <xs:annotation>
                    <xs:documentation>The measured weight from the scale</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="WeightUnit" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The standard weight put on the scale for this
                        measurement</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="TestDateTime" type="xs:dateTime">
                <xs:annotation>
                    <xs:documentation>When the test was performed</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="TestReasonCode" type="DescriptionCommonData">
                <xs:annotation>
                    <xs:documentation>Code which relates to the findings</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="TestResults" type="DescriptionCommonData">
                <xs:annotation>
                    <xs:documentation>Description of the findings</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="TesterID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The ID of the person testing the scale</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="SoftwareChecksum" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Checksum for the software in the scale</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute form="unqualified" name="TestPassedFlag" type="xs:boolean"/>
        <xs:attribute form="unqualified" name="EntryMethod" type="EntryMethodEnumeration"/>
    </xs:complexType>
    <!--  ============================= -->
    <!--                 POSLOG LIBRARY              -->
    <!--  ============================= -->
    <!--
        Enumerated type for Drawer Limit Type Codes attribute
    -->
    <xs:simpleType name="POSLogDrawerLimitExceededTypes">
        <xs:union memberTypes="POSLogDrawerLimitExceededTypesEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="POSLogDrawerLimitExceededTypesEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Warning"/>
            <xs:enumeration value="Lockout"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
        Enumerated type for Password Change Status attribute
    -->
    <xs:simpleType name="PasswordChangeStatus">
        <xs:union memberTypes="PasswordChangeStatusEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="PasswordChangeStatusEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Successful"/>
            <xs:enumeration value="Canceled"/>
            <xs:enumeration value="FailedOldPassword"/>
            <xs:enumeration value="FailedNewPassword"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================= -->
    <!--                     TRANSACTION                -->
    <!--  ============================= -->
    <xs:complexType name="ControlTransactionDomainSpecific">
        <xs:complexContent>
            <xs:extension base="ControlTransactionBase">
                <xs:sequence>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
                        processContents="lax"/>
                </xs:sequence>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--      Base Schemas            -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--      Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================ -->
    <!--    FOODSERVICE TRANSACTION      -->
    <!--  ============================ -->
    <xs:complexType name="FoodServiceTransactionBase">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="DayPart" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A code denoting which part of the day the FoodService
                        Transaction was performed during, i.e. Breakfast, Lunch,
                        Dinner</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ClearViewScreenFlag" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>Command to clear the customer display
                        terminal.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="SentToOperatorDisplayFlag"
                type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>Informs the system the customer orders are to be displayed on
                        the order confirmation board for the customer to see.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:choice maxOccurs="unbounded" minOccurs="0">
                <xs:element form="qualified" name="OrderBumped" type="POSLogFoodService">
                    <xs:annotation>
                        <xs:documentation>Command to the Kitchen Display System to tell it the
                            Customer Order can be removed from the Kitchen Display Screen.
                            Indicates the order has moved to the next stage, for example, has been
                            delivered to the customer</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="StoreOrder">
                    <xs:annotation>
                        <xs:documentation>Tells the order has been stored.  Can be used by the
                            Kitchen to delay starting an order</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:complexContent>
                            <xs:extension base="POSLogFoodService">
                                <xs:attribute form="unqualified" name="TypeCode"
                                    type="POSLogFoodServiceTypes"/>
                            </xs:extension>
                        </xs:complexContent>
                    </xs:complexType>
                </xs:element>
                <xs:element form="qualified" name="PrintPickList" type="POSLogFoodService">
                    <xs:annotation>
                        <xs:documentation>Tells the printer to print a list for the expediter.  The
                            expediter uses this as an aid to pick and to verify the proper items are
                            given to the correct customer.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="FlushGrillPrintout" type="POSLogFoodService">
                    <xs:annotation>
                        <xs:documentation>Command to the Kitchen Display System to tell it to clear
                            the Grill Display</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="EndOfRecall" type="POSLogFoodService"/>
                <xs:element form="qualified" name="StartupSaleRecovery" type="POSLogFoodService">
                    <xs:annotation>
                        <xs:documentation>Reports a system reboot in the middle of a sale
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="StartupSaleRecoveryError"
                    type="POSLogFoodService">
                    <xs:annotation>
                        <xs:documentation>Reports an error occurred during a system reboot in the
                            middle of a sale.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="SpecialCouponEnd">
                    <xs:complexType>
                        <xs:simpleContent>
                            <xs:extension base="xs:string">
                                <xs:attribute form="unqualified" name="SpecialTransactionType"
                                    type="POSLogSpecialTransactionType"/>
                            </xs:extension>
                        </xs:simpleContent>
                    </xs:complexType>
                </xs:element>
                <xs:element form="qualified" name="CheckInTime" type="POSLogFoodService"/>
                <xs:element form="qualified" name="CheckOutTime" type="POSLogFoodService"/>
                <xs:element form="qualified" name="OrderTime" type="POSLogFoodService"/>
                <xs:element form="qualified" name="ServeTime" type="POSLogFoodService"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="POSLogFoodService">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Time" type="xs:time"/>
            <xs:element form="qualified" minOccurs="0" name="Value" type="xs:integer"/>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Description"
                type="DescriptionCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="SpecialTransaction" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="MajorNumber" type="SequenceNumberType"/>
            <xs:element form="qualified" minOccurs="0" name="MinorNumber" type="SequenceNumberType"/>
            <xs:element form="qualified" minOccurs="0" name="TransactionNumber"
                type="SequenceNumberType"/>
            <xs:element form="qualified" minOccurs="0" name="LocalNumber" type="SequenceNumberType"/>
            <xs:element form="qualified" minOccurs="0" name="FiscalReceiptNumber"
                type="SequenceNumberType">
                <xs:annotation>
                    <xs:documentation>The transaction number from the fiscal receipt printer.
                        Required by law in some countries</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute default="Normal" form="unqualified" name="SaleType"
            type="POSLogFoodServiceSaleType" use="optional"/>
        <xs:attribute default="EatIn" form="unqualified" name="SaleStartType"
            type="POSLogFoodServiceSaleStartType" use="optional"/>
    </xs:complexType>
    <!-- *************************************************** -->
    <!-- ********** Food Service Enumerations ********** -->
    <!--
        Enumerated type for Food Service Type Codes attribute
    -->
    <xs:simpleType name="POSLogFoodServiceTypes">
        <xs:union memberTypes="POSLogFoodServiceTypesEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="POSLogFoodServiceTypesEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Local"/>
            <xs:enumeration value="Global"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
        Enumerated type for SpecialTransactionType Codes attribute
    -->
    <xs:simpleType name="POSLogSpecialTransactionType">
        <xs:union memberTypes="POSLogSpecialTransactionTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="POSLogSpecialTransactionTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Waste"/>
            <xs:enumeration value="EmployeeMeal"/>
            <xs:enumeration value="ManagerMeal"/>
            <xs:enumeration value="Refund"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
        Enumerated type for SalesType Codes attribute
    -->
    <xs:simpleType name="POSLogFoodServiceSaleType">
        <xs:union memberTypes="POSLogFoodServiceSaleTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="POSLogFoodServiceSaleTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Normal"/>
            <xs:enumeration value="Recall"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
        Enumerated type for Sales Start Type Codes attribute
    -->
    <xs:simpleType name="POSLogFoodServiceSaleStartType">
        <xs:union memberTypes="POSLogFoodServiceSaleStartTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="POSLogFoodServiceSaleStartTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="EatIn"/>
            <xs:enumeration value="TakeOut"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================= -->
    <!--                     TRANSACTION                -->
    <!--  ============================= -->
    <xs:complexType name="FoodServiceTransactionDomainSpecific">
        <xs:complexContent>
            <xs:extension base="FoodServiceTransactionBase">
                <xs:sequence>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
                        processContents="lax"/>
                </xs:sequence>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================== -->
    <!--       Library Schemas          -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--      Base Schemas            -->
    <!-- ============================ -->
    <!-- ============================ -->
    <!--      Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================= -->
    <!--         FORECOURT TRANSACTION      -->
    <!--  ============================= -->
    <xs:complexType name="ForeCourtTransactionBase">
        <xs:sequence minOccurs="0">
            <xs:element form="qualified" minOccurs="0" name="DispenserID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The complete dispensing unit consisting of one or more
                        Fuelling Points. (International Forecourt Standards
                        Forum)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:choice minOccurs="0">
                <xs:element form="qualified" name="FuelPositionID" type="xs:integer"/>
                <xs:element form="qualified" name="FuelingPointID" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The item of forecourt equipment which is capable of
                            dispensing a single motor fuel product at one time. The Fuelling Point
                            contains one or more Logical Nozzles. The customer identifies this
                            Fuelling Point normally with "Pump Number". (International Forecourt
                            Standards Forum)</xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:choice>
            <xs:element form="qualified" minOccurs="0" name="NozzleID" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="TankID">
                <xs:annotation>
                    <xs:documentation>Identifies the tank involved with this forecourt transaction.
                        If the a pump test is involved, then this is where the fuel is returned if
                        it is done at the station.  Environemtally it may not be done.  Basically a
                        tank is not opened without a delivery truck being there.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Item"
                type="ItemBase"/>
            <xs:choice minOccurs="0">
                <xs:element form="qualified" name="DriveOff" type="DriveOffType"/>
                <xs:element form="qualified" name="PumpStatusChange" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>recording a change in status of a FuelingPosition (or
                            Pump)</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="UnclaimedPrepayRefund" type="AmountCommonData">
                    <xs:annotation>
                        <xs:documentation>recording the amount of Prepay Refund that was not taken
                            by the Customer.  For example, the customer pre-pays $20 but buys $19.75
                            and leaves $.25</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element form="qualified" name="PumpTest" type="PumpTestType">
                    <xs:annotation>
                        <xs:documentation>Data used to track the measurement taken by an inspector
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:choice>
            <xs:element form="qualified" minOccurs="0" name="TransactionLink">
                <xs:annotation>
                    <xs:documentation>In the event the customer returns to pay for thier drive-off,
                        this links to the original transaction</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="TransactionLinkCommonData">
                            <xs:anyAttribute namespace="##other" processContents="lax"/>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="DriveOffType">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="LicensePlateID">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" name="VehicleDescription" type="xs:string">
                <xs:annotation>
                    <xs:documentation>description of the vehicle</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="VehicleMake" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="VehicleModel" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="VehicleColor" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="AuthorizingCashierID"
                type="OperatorCommonData">
                <xs:annotation>
                    <xs:documentation>OperatorID for the cashier that entered the
                        DriveOffTransaction.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="Quantity">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="QuantityCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Amount">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="AmountCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="PumpTestType">
        <xs:sequence>
            <xs:element form="qualified" name="PumpTestVolume" type="QuantityCommonData">
                <xs:annotation>
                    <xs:documentation>The amount of fluid the inspector removed to measure the
                        accuracy of the pump</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PumpTestReturnVolume"
                type="QuantityCommonData">
                <xs:annotation>
                    <xs:documentation>Indicates how much of the fuel is returned to the tank, takes
                        into account spillage, etc.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="PumpTestReasonCode" type="ReasonCodeCommonData">
                <xs:annotation>
                    <xs:documentation>reason given for the pump test</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" name="PumpTesterID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The inspector's id</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PumpTestAmount" type="AmountCommonData">
                <xs:annotation>
                    <xs:documentation>Cash amount of the fluid represented by the pump test
                        volume.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="PumpTestResults" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The findings</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ReturnTankID" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Tank to which the product was returned.  </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##any" processContents="lax"/>
    </xs:complexType>
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================= -->
    <!--                     TRANSACTION                -->
    <!--  ============================= -->
    <xs:complexType name="ForeCourtTransactionDomainSpecific">
        <xs:complexContent>
            <xs:extension base="ForeCourtTransactionBase">
                <xs:sequence>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
                        processContents="lax"/>
                </xs:sequence>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- ============================== -->
    <!--             Library Schemas                  -->
    <!-- ============================== -->
    <!-- ============================ -->
    <!--             Base Schemas                  -->
    <!-- ============================ -->
    <!-- ============================== -->
    <!--       Library Schemas                        -->
    <!-- ============================== -->
    <!-- ============================== -->
    <!--      Base Schemas                             -->
    <!-- ============================== -->
    <!-- ============================== -->
    <!--      Derived Schemas                        -->
    <!-- ============================== -->
    <!--  ================================= -->
    <!--  INVENTORY CONTROL  TRANSACTION  -->
    <!--  ================================= -->
    <xs:complexType name="InventoryControlTransactionBase">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="InventoryCount"
                type="POSLogITInventoryCount">
                <xs:annotation>
                    <xs:documentation>records the actual count of one or more Items at a location,
                        (which was recorded at POS)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ReceiveInventory"
                type="POSLogITDocument">
                <xs:annotation>
                    <xs:documentation>records the receipt of one or more Items at a location from an
                        external source, (which was entered at POS)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="Transfer" type="POSLogITDocument">
                <xs:annotation>
                    <xs:documentation>recording the transfer of stock from one location/state to
                        another which was entered at the POS</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ReturnToVendor" type="POSLogITDocument">
                <xs:annotation>
                    <xs:documentation>records the shipping of one or more Items at a location back
                        to the originating Vendor. (which was entered at POS)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="InventoryAdjustment">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="POSLogITDocument">
                            <xs:attribute form="unqualified" name="AdjustmentReason"
                                type="AdjustmentReasonTypeCodes" use="optional"/>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="InventoryLoss">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="POSLogITItemCount">
                            <xs:sequence>
                                <xs:element form="qualified" minOccurs="0" name="Reason"
                                    type="xs:string"/>
                            </xs:sequence>
                            <xs:attribute default="Breakage" form="unqualified" name="TypeCode"
                                type="InventoryLossTypeCodes" use="optional"/>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="FulfillmentAcknowledgement"
                type="POSLogICTFulfillmentAcknowledgement">
                <xs:annotation>
                    <xs:documentation>Acknowledgement a customer order (backorder) was
                        received.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <!--
		Enumerated type for  Loss Type Codes attribute
	-->
    <xs:simpleType name="InventoryLossTypeCodes">
        <xs:union memberTypes="InventoryLossTypeCodesEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="InventoryLossTypeCodesEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Spoilage"/>
            <xs:enumeration value="Waste"/>
            <xs:enumeration value="Breakage"/>
            <xs:enumeration value="Lost"/>
            <xs:enumeration value="Stolen"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
		Enumerated type for  Adjustment Reason Type Codes attribute
	-->
    <xs:simpleType name="AdjustmentReasonTypeCodes">
        <xs:union memberTypes="AdjustmentReasonTypeCodesEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="AdjustmentReasonTypeCodesEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Donate"/>
            <xs:enumeration value="Destroy"/>
            <xs:enumeration value="Liquidate"/>
            <xs:enumeration value="Salvage"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="POSLogITLineItem">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="ItemID">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="ItemIDCommonData"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="EPC" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="QuantityOrdered"
                type="QuantityCommonData">
                <xs:annotation>
                    <xs:documentation>The original number of items ordered</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="QuantityReceived"
                type="QuantityCommonData">
                <xs:annotation>
                    <xs:documentation>The number of the ordered items that have been
                        received</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="UnitCost" type="UnitPriceCommonData">
                <xs:annotation>
                    <xs:documentation>The price per unit of the item being effected by the inventory
                        control Document line item</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="TotalCost" type="UnitPriceCommonData">
                <xs:annotation>
                    <xs:documentation>The price for all units of the item being effected by the
                        inventory control Document line item</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="CartonNumber" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A unique identifier for the shipping container containing the
                        item being effected by the inventory control Document line
                        item</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="LineItemNumber" type="xs:integer">
                <xs:annotation>
                    <xs:documentation>The sequence number of the line item within the context of the
                        Inventory Control Document</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="UserID" type="OperatorCommonData">
                <xs:annotation>
                    <xs:documentation>The operator ID of the Worker recording the inventory control
                        transaction line item</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Description"
                type="DescriptionCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="DiscrepancyReason"
                type="ReasonCodeCommonData">
                <xs:annotation>
                    <xs:documentation>A code denoting the reason for a discrepancy between ordered
                        and received quantity</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="DiscrepancyDate" type="xs:date">
                <xs:annotation>
                    <xs:documentation>The date the discrepancy was recorded</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="DispositionBoxNumber" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A unique identifier for the shipping container in which the
                        item is being disposed</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="DispositionCode" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="DispositionAuthorizationNumber"
                type="xs:string">
                <xs:annotation>
                    <xs:documentation>A code authorizing the disposition being
                        recorded</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="DispositionQuantity"
                type="QuantityCommonData">
                <xs:annotation>
                    <xs:documentation>The number of items being disposed</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="POSLogITDocument">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="DocumentID" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="TransactionReference"
                type="SequenceNumberType"/>
            <xs:element form="qualified" minOccurs="0" name="SourceBusinessUnitID"
                type="ICDBusinessUnit"/>
            <xs:element form="qualified" minOccurs="0" name="DestinationBusinessUnitID"
                type="ICDBusinessUnit"/>
            <xs:element form="qualified" minOccurs="0" name="Carrier" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="FreightBill" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="ReasonCode" type="ReasonCodeCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="ToParty" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The party receiving this inventory, could be a vendor or
                        transfer to another store or distribution center or ...</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="FromParty" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The party sending this inventory, could be a vendor or
                        transfer to from store or distribution center or ...</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="CreateDate" type="xs:date"/>
            <xs:element form="qualified" minOccurs="0" name="ExpectedDeliveryDate" type="xs:date"/>
            <xs:element form="qualified" minOccurs="0" name="ActualDeliveryDate" type="xs:date"/>
            <xs:element form="qualified" minOccurs="0" name="ExpectedShipDate" type="xs:date">
                <xs:annotation>
                    <xs:documentation>the date the inventory is expected to ship from or to a
                        store</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ActualShipDate" type="xs:date">
                <xs:annotation>
                    <xs:documentation>the date the inventory is actually shipped from or to a
                        store</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="DocumentTypeDescription"
                type="xs:string"/>
            <xs:element form="qualified" maxOccurs="unbounded" name="LineItem"
                type="POSLogITLineItem">
                <xs:annotation>
                    <xs:documentation>Detailed information about a particular item on the inventory
                        control document</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute default="Receipt" form="unqualified" name="DocumentType" type="ITDocumentType"
            use="optional">
            <xs:annotation>
                <xs:documentation>Describes the type of document</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute default="Posted" form="unqualified" name="DocumentStatus"
            type="ITDocumentStatus" use="optional">
            <xs:annotation>
                <xs:documentation>Status of the current Inventory Document</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <!--
        Enumerated type for IT Document Type attribute
    -->
    <xs:simpleType name="ITDocumentType">
        <xs:union memberTypes="ITDocumentTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="ITDocumentTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Transfer"/>
            <xs:enumeration value="Receipt"/>
            <xs:enumeration value="Return"/>
            <xs:enumeration value="ReturnSeal"/>
            <xs:enumeration value="ReturnShip"/>
            <xs:enumeration value="InventoryAdjustment"/>
            <xs:enumeration value="PurchaseOrder"/>
            <xs:enumeration value="AdvanceShipNotice"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
        Enumerated type for IT Document Status attribute
    -->
    <xs:simpleType name="ITDocumentStatus">
        <xs:union memberTypes="ITDocumentStatusEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="ITDocumentStatusEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Entered"/>
            <xs:enumeration value="Posted"/>
            <xs:enumeration value="Pending"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="POSLogITItemCount">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" name="ItemID" type="ItemIDCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="EPC" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="Quantity" type="QuantityCommonData"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="POSLogITInventoryCount">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="CountID" type="SequenceNumberType">
                <xs:annotation>
                    <xs:documentation>Unique identifier for this count</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="DueDate" type="xs:date">
                <xs:annotation>
                    <xs:documentation>The date when the count is to be done</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ReasonCode" type="ReasonCodeCommonData"/>
            <xs:element form="qualified" minOccurs="0" name="ApprovedBy" type="OperatorCommonData">
                <xs:annotation>
                    <xs:documentation>What operator approved this</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="ItemCount"
                type="POSLogITItemCount"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:attribute default="false" form="unqualified" name="MandatoryFlag" type="xs:boolean"
            use="optional">
            <xs:annotation>
                <xs:documentation>Was this Count required</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute default="Cycle" form="unqualified" name="CountType" type="ITCountType"
            use="optional">
            <xs:annotation>
                <xs:documentation>Type of inventory count, physical, adhoc, cycle</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute default="Scheduled" form="unqualified" name="CountStatus" type="ITCountStatus"
            use="optional">
            <xs:annotation>
                <xs:documentation>A code denoting what the current status of the Physical
                    Count</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <!--
        Enumerated type for IT Count Type attribute
        Cycle Counting inventory by checking a particular location or set of locations and comparing the physical counts with the system-maintained inventory levels.
    -->
    <xs:simpleType name="ITCountType">
        <xs:union memberTypes="ITCountTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="ITCountTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Physical"/>
            <xs:enumeration value="Cycle"/>
            <xs:enumeration value="Adhoc"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
        Enumerated type for IT Count Status attribute
    -->
    <xs:simpleType name="ITCountStatus">
        <xs:union memberTypes="ITCountStatusEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="ITCountStatusEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Scheduled"/>
            <xs:enumeration value="InProgress"/>
            <xs:enumeration value="Suspended"/>
            <xs:enumeration value="Resumed"/>
            <xs:enumeration value="CompletedButNotEntered"/>
            <xs:enumeration value="CompletedAndEntered"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="POSLogICTFulfillmentAcknowledgement">
        <xs:sequence>
            <xs:element form="qualified" name="SerialNumber" type="xs:string"/>
            <xs:element form="qualified" name="ItemLink">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="TransactionLinkCommonData">
                            <xs:anyAttribute namespace="##other" processContents="lax"/>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element form="qualified" name="ElectronicSignature" type="xs:boolean"/>
            <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ICDBusinessUnit">
        <xs:simpleContent>
            <xs:extension base="BusinessUnitCommonData">
                <xs:attribute form="unqualified" name="DocumentTypeCode" type="ICDDocumentTypeCode"
                />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <!--
        Enumerated type for Document Type Code attribute
    -->
    <xs:simpleType name="ICDDocumentTypeCode">
        <xs:union memberTypes="ICDDocumentTypeCodeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="ICDDocumentTypeCodeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Destination"/>
            <xs:enumeration value="Receiving"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <!--  ============================= -->
    <!--                     TRANSACTION                -->
    <!--  ============================= -->
    <xs:complexType name="InventoryControlTransactionDomainSpecific">
        <xs:complexContent>
            <xs:extension base="InventoryControlTransactionBase">
                <xs:sequence>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
                        processContents="lax"/>
                </xs:sequence>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--  ============================= -->
    <!--                     TRANSACTION                -->
    <!--  ============================= -->
    <!-- 
      Defines a complex type POSLogTransaction which is the root of 
      all varieties of transaction in the IXRetail POSLog.
    -->
    <xs:complexType name="TransactionDomainSpecific">
        <xs:complexContent>
            <xs:extension base="TransactionBase">
                <xs:sequence>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="RevenueCenterID" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Any area of the store which particular revenues can be
                                said to derive.  That is, a center devoted to raising revenue with
                                no responsibility for costs, for example, a sale center.  A cost
                                center is the other side of the equation.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="TillID" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The till is the insert which goes into the cash
                                drawer.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="BusinessDayDate" type="xs:date"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="BeginDateTime" type="DateTimeCommonData"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="EndDateTime" type="DateTimeCommonData"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="OperatorBypassApproval" type="ApprovalBase"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="ControlTransaction" type="ControlTransactionDomainSpecific"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="FoodServiceTransaction" type="FoodServiceTransactionDomainSpecific"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="ForeCourtTransaction" type="ForeCourtTransactionDomainSpecific"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="InventoryControlTransaction"
                        type="InventoryControlTransactionDomainSpecific"/>
                    <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0"
                        name="TenderControlTransaction"
                        type="TenderControlTransactionDomainSpecific"/>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
                        processContents="lax"/>
                </xs:sequence>
                <xs:attribute default="false" form="unqualified" name="TrainingModeFlag"
                    type="xs:boolean" use="optional">
                    <xs:annotation>
                        <xs:documentation>Indicates this transaction was completed while in the
                            training mode.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="false" form="unqualified" name="OfflineFlag"
                    type="xs:boolean" use="optional">
                    <xs:annotation>
                        <xs:documentation>Indicates this transaction was rung up while the link to
                            the payment system provider was offline.  Used in conjunction with the
                            TenderAuthorization ForceOnline attribute to describe what to do with
                            this transaction.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute form="unqualified" name="OnlineAuthorizationStatus"
                    type="OnlineAuthorizationStatusTypeCode">
                    <xs:annotation>
                        <xs:documentation>Indicates the state of the payment system during the
                            transaction</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="false" form="unqualified" name="TransactionModifiedFlag"
                    type="xs:boolean" use="optional">
                    <xs:annotation>
                        <xs:documentation>Flag that identifies this Transaction has been
                            modified.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="false" form="unqualified" name="EMVDebugFlag"
                    type="xs:boolean" use="optional">
                    <xs:annotation>
                        <xs:documentation>only required if acquirer asks for it. Can be switched off
                            and on as required - specifically required during the acquirer
                            accreditation testing.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="Normal" form="unqualified" name="EntryMode"
                    type="POSEntryModeType">
                    <xs:annotation>
                        <xs:documentation>Describes the operating mode for the POS for this
                            transaction, normal, manager, maintenance</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--
			POS Entry Modes Enumeration
			    -->
    <xs:simpleType name="POSEntryModeType">
        <xs:union memberTypes="POSEntryModeTypeEnumeration TypeCodeExtension"/>
    </xs:simpleType>
    <xs:simpleType name="POSEntryModeTypeEnumeration">
        <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Normal"/>
            <xs:enumeration value="Manager"/>
            <xs:enumeration value="Maintenance"/>
        </xs:restriction>
    </xs:simpleType>
    <!--  ============================= -->
    <!--                     P O S L O G                     -->
    <!--  ============================= -->
    <xs:complexType name="POSLogBase">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Transaction"
                type="TransactionDomainSpecific"/>
        </xs:sequence>
    </xs:complexType>
    <!-- ============================ -->
    <!--                 Derived Schemas         -->
    <!-- ============================ -->
    <xs:complexType name="POSLogDomainSpecific">
        <xs:complexContent>
            <xs:extension base="POSLogBase">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="Batch" type="BatchBase"/>
                    <xs:element form="qualified" minOccurs="0" name="TenderSummary"
                        type="POSLogActivitySummary">
                        <xs:annotation>
                            <xs:documentation> A summary of tender activity.  It can include the
                                transaction detail for all transactions covered by the
                                summary</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="TillSummary"
                        type="POSLogTillSummary">
                        <xs:annotation>
                            <xs:documentation>A summary of till activity.  It can include the
                                transaction detail for all transactions covered by the
                                summary</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element form="qualified" minOccurs="0" name="WorkstationSummary"
                        type="POSLogWorkstationSummary">
                        <xs:annotation>
                            <xs:documentation>A summary of workstation activity.  It can include the
                                transaction detail for all transactions covered by the
                                summary</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other"
                        processContents="lax"/>
                </xs:sequence>
                <xs:attribute fixed="6" form="unqualified" name="MajorVersion" use="required"/>
                <xs:attribute fixed="0" form="unqualified" name="MinorVersion"/>
                <xs:attribute fixed="0" form="unqualified" name="FixVersion"/>
                <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--  ============================ -->
    <!--                     BATCH                          -->
    <!--  ============================ -->
    <xs:complexType name="POSLogTillSummary">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="TillID" type="xs:string"/>
            <xs:element form="qualified" name="ActivitySummary" type="POSLogActivitySummary"/>
        </xs:sequence>
    </xs:complexType>
    <xs:annotation>
        <xs:documentation>- SubTotalValueMinus - Total of the amount of money discounted from the
            amount of a subtotal - UnitValueMinus - The total of the amount of money discounted for
            every item - SubTotalPercentMinus - Total of the amount of money discounted from the
            amount of a subtotal of the case which inputted the amount of money for a discount not
            by the amount but by %-. - POSDepartmentValueMinus - The total of the case discounted
            not per item but per POS department. - FractionValueMinus - The total of the case which
            discounted fractions, such as 100yen or less etc. - TotalValueMinus - The total of the
            case discounted from the total amount.</xs:documentation>
    </xs:annotation>
    <xs:complexType name="POSLogWorkstationSummary">
        <xs:sequence>
            <xs:element form="qualified" name="WorkstationID" type="WorkstationIDCommonData"/>
            <xs:element form="qualified" name="ActivitySummary" type="POSLogActivitySummary"/>
        </xs:sequence>
    </xs:complexType>
    <!-- ==================================================== -->
    <!-- //////////////////////////////////////////////////// -->
    <!--                   P O S L O G                        -->
    <!--                     R O O T                          -->
    <!--           T O P  O F  T H E  S C H E M A             -->
    <!-- //////////////////////////////////////////////////// -->
    <!-- ==================================================== -->
    <xs:element name="POSLog" type="POSLogRoot"/>
    <xs:complexType name="POSLogRoot">
        <xs:annotation>
            <xs:documentation>The record of all activity that is performed at POS by an Operator.
                May contain as little as a single Transaction, or a large batch of transactions,
                complete with batch summary. </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="POSLogDomainSpecific"/>
        </xs:complexContent>
    </xs:complexType>
</xs:schema>
